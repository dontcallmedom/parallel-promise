{
  "spec": {
    "title": "Open Screen Protocol",
    "url": "https://w3c.github.io/openscreenprotocol/"
  },
  "algorithms": [
    {
      "name": "agent fingerprint",
      "href": "https://w3c.github.io/openscreenprotocol/#agent-fingerprint",
      "html": "The <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"agent-fingerprint\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">agent fingerprint</dfn> of an agent is computed by following these\nsteps:",
      "rationale": "compute",
      "steps": [
        {
          "html": "<p>Compute the <a href=\"https://www.rfc-editor.org/rfc/rfc7469#section-2.4\">SKPI Fingerprint</a> of the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/openscreenprotocol/#agent-certificate\" id=\"ref-for-agent-certificate\">agent certificate</a> according to <a data-link-type=\"biblio\" href=\"https://w3c.github.io/openscreenprotocol/#biblio-rfc7469\" title=\"Public Key Pinning Extension for HTTP\">[RFC7469]</a> using <a data-link-type=\"biblio\" href=\"https://w3c.github.io/openscreenprotocol/#biblio-rfc6234\" title=\"US Secure Hash Algorithms (SHA and SHA-based HMAC and HKDF)\">SHA-256</a> as the hash algorithm.</p>"
        },
        {
          "html": "<p>base64 encode the result of Step 1 according to <a data-link-type=\"biblio\" href=\"https://w3c.github.io/openscreenprotocol/#biblio-rfc4648\" title=\"The Base16, Base32, and Base64 Data Encodings\">[RFC4648]</a>.</p>"
        }
      ]
    },
    {
      "name": "certificate serial number",
      "href": "https://w3c.github.io/openscreenprotocol/#certificate-serial-number",
      "html": "Let the <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"certificate-serial-number\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">certificate serial number</dfn> be the result of the following steps:",
      "rationale": "if",
      "steps": [
        {
          "html": "If the agent has never generated an agent certificate:",
          "rationale": "let",
          "steps": [
            {
              "html": "Let the <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"certificate-serial-number-base\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">certificate serial number base</dfn> be a 32-bit\n        pseudorandom integer value."
            },
            {
              "html": "Let the <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"certificate-serial-number-counter\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">certificate serial number counter</dfn> be a 32-bit\n        unsigned integer, initially set to 0."
            }
          ]
        },
        {
          "html": "Generate a 64-bit value as follows:",
          "rationale": "increment",
          "steps": [
            {
              "html": "Increment the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/openscreenprotocol/#certificate-serial-number-counter\" id=\"ref-for-certificate-serial-number-counter\">certificate serial number counter</a> by one."
            },
            {
              "html": "Assign the upper 32 bits to the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/openscreenprotocol/#certificate-serial-number-base\" id=\"ref-for-certificate-serial-number-base\">certificate serial number base</a>."
            },
            {
              "html": "Assign the lower 32 bits to the <a data-link-type=\"dfn\" href=\"https://w3c.github.io/openscreenprotocol/#certificate-serial-number-counter\" id=\"ref-for-certificate-serial-number-counter①\">certificate serial number counter</a>."
            }
          ]
        }
      ]
    },
    {
      "html": "As messages are modified or extended over time, certain rules must be followed\nto maintain backwards compatibiilty with agents that understand older versions\nof messages.",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If a required field is added to or removed from a message (either to/from the\nmessage directly or indirectly through the field of a field), a new type key\nmust be assigned to the message.  Is is effectively a new message and must not\nbe sent unless the receiving agent is known to understand the new type key.</p>"
        },
        {
          "html": "<p>If an optional field is added to a message (either to the message directly\nor indirectly through the field of a field), the type key may remain unchanged\nif the behavior of older receiving agents that do not understand the added field\nis compatible with newer sending agents that include the field.\nOtherwise, a new type key must be assigned.</p>"
        },
        {
          "html": "<p>If an optional field is removed from a message (either from the message\ndirectly or indirectly through the field of a field), the type key may remain\nunchanged if the behavior of newer receiving agents that do not understand the\nremoved field is compatible with older sending agents that include the field.\nOtherwise, a new type key must be assigned.</p>"
        },
        {
          "html": "<p>Required fields may not be added or removed from array-based messages, such\nas audio-frame.</p>"
        }
      ]
    },
    {
      "html": "To encode <code>P</code> into a numeric string, follow these steps:",
      "rationale": "convert",
      "steps": [
        {
          "html": "<p>Convert <code>P</code> to a base-10 integer <code>N</code>.</p>"
        },
        {
          "html": "<p>If <code>N</code> has fewer than 9 digits:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>Zero-pad <code>N</code> on the left with <code>3 - len(N) mod 3</code> digits.</p>\n      </li><li data-md=\"\">\n       <p>Output <code>N</code> in groups of three digits separated by dashes.</p>\n     </li></ul>"
        },
        {
          "html": "<p>If <code>N</code> has more than 9 digits:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>Zero-pad <code>N</code> on the left with <code>4 - len(N) mod 4</code> digits.</p>\n      </li><li data-md=\"\">\n       <p>Output <code>N</code> in groups of four digits separated by dashes.</p>\n     </li></ul>"
        }
      ]
    },
    {
      "html": "To decode a string <code>N</code> into a PSK <code>P</code>, follow these steps:",
      "rationale": "remove",
      "steps": [
        {
          "html": "<p>Remove dashes and leading zeros from <code>N</code>.</p>"
        },
        {
          "html": "<p>Parse <code>N</code> as a base-10 decimal number to obtain <code>P</code>.</p>"
        }
      ]
    },
    {
      "html": "To encode a PSK into a QR code, follow these steps:",
      "rationale": "set",
      "steps": [
        {
          "html": "<p>Set <code>N</code> to the value of <code>P</code> converted to an ASCII-encoded, hexadecimal string.</p>"
        },
        {
          "html": "<p>Construct a text <a data-link-type=\"dfn\" href=\"https://www.iso.org/standard/62021.html#\" id=\"ref-for-something②\">QR code</a> with the value of <code>N</code>.</p>"
        }
      ]
    }
  ]
}