{
  "spec": {
    "title": "WebGPU Shading Language",
    "url": "https://gpuweb.github.io/gpuweb/wgsl/"
  },
  "algorithms": [
    {
      "html": "Triggered diagnostics <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#behavioral-requirements\" id=\"ref-for-behavioral-requirements③\">will</a> be processed as follows:",
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For each diagnostic <em>D</em>, find the <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#diagnostic-filter\" id=\"ref-for-diagnostic-filter\">diagnostic filter</a> with the smallest <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#affected-range\" id=\"ref-for-affected-range\">affected range</a> that contains D’s <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#diagnostic-triggering-location\" id=\"ref-for-diagnostic-triggering-location①\">triggering location</a>, and which has the same <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#diagnostic-triggering-rule\" id=\"ref-for-diagnostic-triggering-rule②\">triggering rule</a>.</p>\n     <ul>\n      <li data-md=\"\">\n       <p>If such a filter exists, apply it to <em>D</em>, updating <em>D</em>'s <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#diagnostic-severity\" id=\"ref-for-diagnostic-severity①\">severity</a>.</p>\n      </li><li data-md=\"\">\n       <p>Otherwise <em>D</em> remains unchanged.</p>\n     </li></ul>"
        },
        {
          "html": "<p>Discard diagnostics that have severity <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#severity-off\" id=\"ref-for-severity-off\">off</a>.</p>"
        },
        {
          "html": "<p>If at least one remaining diagnostic <em>DI</em> has severity <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#severity-info\" id=\"ref-for-severity-info\">info</a>, then:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>Other <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#severity-info\" id=\"ref-for-severity-info①\">info</a> diagnostics with same triggering rule <em>may</em> be discarded, leaving only the original diagnostic <em>DI</em>.</p>\n     </li></ul>"
        },
        {
          "html": "<p>If at least one remaining diagnostic <em>DW</em> has severity <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#severity-warning\" id=\"ref-for-severity-warning\">warning</a>, then:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>Other <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#severity-info\" id=\"ref-for-severity-info②\">info</a> or <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#severity-warning\" id=\"ref-for-severity-warning①\">warning</a> diagnostics with same triggering rule <em>may</em> be discarded, leaving only the original diagnostic <em>DW</em>.</p>\n     </li></ul>"
        },
        {
          "html": "<p>If at least one remaining diagnostic has <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#severity-error\" id=\"ref-for-severity-error\">error</a> severity, then:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>Other diagnostics <em>may</em> be discarded, including other diagnostics with <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#severity-error\" id=\"ref-for-severity-error①\">error</a> severity.</p>\n      </li><li data-md=\"\">\n       <p>A <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#program-error\" id=\"ref-for-program-error\">program error</a> is generated.</p>\n       <ul>\n        <li data-md=\"\">\n         <p>The error is a <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#shader-creation-error\" id=\"ref-for-shader-creation-error②\">shader-creation error</a> if the diagnostic was triggered at <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#shader-module-creation\" id=\"ref-for-shader-module-creation③\">shader module creation</a> time.</p>\n        </li><li data-md=\"\">\n         <p>The error is a <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#pipeline-creation-error\" id=\"ref-for-pipeline-creation-error②\">pipeline-creation error</a> if the diagnostic was triggered at <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#pipeline-creation\" id=\"ref-for-pipeline-creation②\">pipeline creation</a> time.</p>\n       </li></ul>\n     </li></ul>"
        },
        {
          "html": "<p>If processing during <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#shader-module-creation\" id=\"ref-for-shader-module-creation④\">shader module creation</a> time, the remaining diagnostics populate the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://gpuweb.github.io/gpuweb/#dom-gpucompilationinfo-messages\" id=\"ref-for-dom-gpucompilationinfo-messages\">messages</a></code> member of the WebGPU <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://gpuweb.github.io/gpuweb/#gpucompilationinfo\" id=\"ref-for-gpucompilationinfo\">GPUCompilationInfo</a></code> object.</p>"
        },
        {
          "html": "<p>If processing during <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#pipeline-creation\" id=\"ref-for-pipeline-creation③\">pipeline creation</a>, <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#severity-error\" id=\"ref-for-severity-error②\">error</a> diagnostics\nresult in WebGPU validation failure when validating <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://gpuweb.github.io/gpuweb/#gpuprogrammablestage\" id=\"ref-for-gpuprogrammablestage③\">GPUProgrammableStage</a></code>.</p>"
        }
      ]
    },
    {
      "rationale": "remove",
      "steps": [
        {
          "html": "<p>Remove <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#comment\" id=\"ref-for-comment①\">comments</a>:</p>\n      <ul>\n       <li data-md=\"\">\n        <p>Replace the first comment with a space code point (<code>U+0020</code>).</p>\n       </li><li data-md=\"\">\n        <p>Repeat until no comments remain.</p>\n      </li></ul>"
        },
        {
          "html": "<p>Find <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#template-list\" id=\"ref-for-template-list\">template lists</a>, using the <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#template-list-discovery\" id=\"ref-for-template-list-discovery\">algorithm</a> in <a href=\"https://gpuweb.github.io/gpuweb/wgsl/#template-lists-sec\">§ 3.9 Template Lists</a>.</p>"
        },
        {
          "html": "<p>Parse the whole text, attempting to match the <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#syntax-translation_unit\" id=\"ref-for-syntax-translation_unit\">translation_unit</a> grammar rule.\nParsing uses a LALR(1) parser (one token of lookahead) <a data-link-type=\"biblio\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#biblio-deremer1969\" title=\"Practical Translators for LR(k) Languages\">[DeRemer1969]</a>, with the following customization:</p>\n      <ul>\n       <li data-md=\"\">\n        <p>Tokenization is interleaved with parsing, and is context-aware.\nWhen the parser requests the next token:</p>\n        <ul>\n         <li data-md=\"\">\n          <p>Consume and ignore an initial sequence of <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#blankspace\" id=\"ref-for-blankspace①\">blankspace</a> code points.</p>\n         </li><li data-md=\"\">\n          <p>If the next code point is the start of a <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#template-list\" id=\"ref-for-template-list①\">template list</a>, consume it and return <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#syntax_sym-_template_args_start\" id=\"ref-for-syntax_sym-_template_args_start\">_template_args_start</a>.</p>\n         </li><li data-md=\"\">\n          <p>If the next code point is the end of a <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#template-list\" id=\"ref-for-template-list②\">template list</a>, consume it and return <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#syntax_sym-_template_args_end\" id=\"ref-for-syntax_sym-_template_args_end\">_template_args_end</a>.</p>\n         </li><li data-md=\"\">\n          <p>Otherwise:</p>\n          <ul>\n           <li data-md=\"\">\n            <p>A <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"token-candidate\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">token candidate</dfn> is any WGSL <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#token\" id=\"ref-for-token①\">token</a> formed from the non-empty prefix of the remaining unconsumed code points.</p>\n           </li><li data-md=\"\">\n            <p>The token returned is the longest <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#token-candidate\" id=\"ref-for-token-candidate\">token candidate</a> that is also a valid lookahead token for the current parser state. <a data-link-type=\"biblio\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#biblio-vanwyk2007\" title=\"Context-Aware Scanning for Parsing Extensible Languages\">[VanWyk2007]</a></p>\n          </li></ul>\n        </li></ul>\n      </li></ul>"
        }
      ]
    },
    {
      "html": "Overload resolution for <var>P</var> proceeds as follows, with the goal of finding a single most <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#preferable-candidate\" id=\"ref-for-preferable-candidate\">preferable</a> <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#overload-candidates\" id=\"ref-for-overload-candidates\">overload candidate</a>:",
      "rationale": "for",
      "steps": [
        {
          "html": "<p>For each candidate <var>C</var>, enumerate conversion ranks for subexpressions in the syntactic phrase.\nThe candidate’s preconditions have been met, and so for the <var>i</var>’th subexpression in the <var>P</var>:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>Its static type has been computed.</p>\n      </li><li data-md=\"\">\n       <p>There is a <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#feasible-automatic-conversion\" id=\"ref-for-feasible-automatic-conversion③\">feasible automatic conversion</a> from the expression’s static type to the type required by the corresponding type assertion in the preconditions.\nLet <var>C</var>.<var>R</var>(i) be the <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#conversionrank\" id=\"ref-for-conversionrank②\">ConversionRank</a> of that conversion.</p>\n     </li></ul>"
        },
        {
          "html": "<p>Eliminate any candidate where one of its subexpressions resolves to an <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#type-abstract\" id=\"ref-for-type-abstract②\">abstract</a> type after <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#feasible-automatic-conversion\" id=\"ref-for-feasible-automatic-conversion④\">feasible automatic conversions</a>, but another\nof the candidate’s subexpressions is not a <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#const-expressions\" id=\"ref-for-const-expressions③\">const-expression</a>.</p>"
        },
        {
          "html": "<p>Rank candidates: Given two overload candidates <var>C1</var> and <var>C2</var>, <var>C1</var> is <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"preferable candidate\" data-noexport=\"\" id=\"preferable-candidate\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">preferred</dfn> over <var>C2</var> if:</p>\n     <ul>\n      <li data-md=\"\">\n       <p>For each expression position <var>i</var> in <var>P</var>, <var>C1</var>.<var>R</var>(i) ≤ <var>C2</var>.<var>R</var>(i).</p>\n       <ul>\n        <li data-md=\"\">\n         <p>That is, each expression conversion required to apply <var>C1</var> to <var>P</var> is at least as preferable as the corresponding expression conversion required to apply <var>C2</var> to <var>P</var>.</p>\n       </li></ul>\n      </li><li data-md=\"\">\n       <p>There is at least one expression position <var>i</var> where <var>C1</var>.<var>R</var>(i) &lt; <var>C2</var>.<var>R</var>(i).</p>\n       <ul>\n        <li data-md=\"\">\n         <p>That is, there is at least one expression conversion required to apply <var>C1</var> that is strictly more preferable than the corresponding conversion required to apply <var>C2</var>.</p>\n       </li></ul>\n     </li></ul>"
        },
        {
          "html": "<p>If there is a single candidate <var>C</var> which is <a data-link-type=\"dfn\" href=\"https://gpuweb.github.io/gpuweb/wgsl/#preferable-candidate\" id=\"ref-for-preferable-candidate①\">preferred</a> over all the others, then overload resolution succeeds, yielding the candidate type rule <var>C</var>.\n  Otherwise, overload resolution fails.</p>"
        }
      ]
    },
    {
      "html": "Otherwise the conversion proceeds as follows:",
      "rationale": "set",
      "steps": [
        {
          "html": "<p>Set <var>X</var> to the original value.</p>"
        },
        {
          "html": "<p>If the source type is a floating point type with more mantissa bits than the destination type,\n the extra mantissa bits of the source value <em>may</em> be discarded (i.e. treated as if they are 0).\n Update <var>X</var> accordingly.</p>"
        },
        {
          "html": "<p>If <var>X</var> is the most-positive or most-negative normal value of the destination type, then the result is <var>X</var>.</p>"
        },
        {
          "html": "<p>Otherwise, the result is the infinity value of the destination type, with the same sign as <var>X</var>.</p>"
        }
      ]
    }
  ]
}