{
  "spec": {
    "title": "Web Audio API",
    "url": "https://webaudio.github.io/web-audio-api/"
  },
  "algorithms": [
    {
      "name": "BaseAudioContext.createPeriodicWave()",
      "html": "When calling this method,\n    execute these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><span class=\"synchronous\">If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createperiodicwave-real\" id=\"ref-for-dom-baseaudiocontext-createperiodicwave-real\">real</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createperiodicwave-imag\" id=\"ref-for-dom-baseaudiocontext-createperiodicwave-imag\">imag</a></code> are not of the same\nlength, an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror②\">IndexSizeError</a></code> MUST be thrown.</span></p>"
        },
        {
          "html": "<p>Let <var>o</var> be a new object of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWaveOptions\" id=\"ref-for-PeriodicWaveOptions\">PeriodicWaveOptions</a></code>.</p>"
        },
        {
          "html": "<p>Respectively set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createperiodicwave-real\" id=\"ref-for-dom-baseaudiocontext-createperiodicwave-real①\">real</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-createperiodicwave-imag\" id=\"ref-for-dom-baseaudiocontext-createperiodicwave-imag①\">imag</a></code> parameters passed to this factory method to\nthe attributes of the same name on <var>o</var>.</p>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveconstraints-disablenormalization\" id=\"ref-for-dom-periodicwaveconstraints-disablenormalization\">disableNormalization</a></code> attribute on <var>o</var> to the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveconstraints-disablenormalization\" id=\"ref-for-dom-periodicwaveconstraints-disablenormalization①\">disableNormalization</a></code> attribute of the <code>constraints</code> attribute passed to the factory\nmethod.</p>"
        },
        {
          "html": "<p>Construct a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWave\" id=\"ref-for-PeriodicWave③\">PeriodicWave</a></code> <var>p</var>, passing the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext①①\">BaseAudioContext</a></code> this factory\nmethod has been called on as a first argument, and <var>o</var>.</p>"
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "decodeAudioData()",
      "html": "<span class=\"synchronous\">When <code>decodeAudioData</code> is\n    called, the following steps MUST be performed on the control\n    thread:</span>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global\">relevant global object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window\">associated Document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active\">fully active</a> then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with\">a promise rejected with</a> \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be a new Promise.</p>"
        },
        {
          "html": "<div class=\"correction proposed\" id=\"c2361-1\">\n          <span class=\"marker\">Proposed Correction <a href=\"https://github.com/WebAudio/web-audio-api/issues/2361\">Issue 2361</a>-1. </span> Use new Web IDL buffer primitives \n         <div class=\"amendment-buttons\"><button onclick=\"location.href=&quot;#c2361-2&quot;\">Next Change</button></div>\n          If \n         <del> the operation <a href=\"https://tc39.github.io/ecma262/#sec-isdetachedbuffer\"><code>IsDetachedBuffer</code></a> (described in <a data-link-type=\"biblio\" href=\"https://webaudio.github.io/web-audio-api/#biblio-ecmascript\" title=\"ECMAScript Language Specification\">[ECMASCRIPT]</a>) on <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata\">audioData</a></code> is <code>false</code>,</del>\n         <ins> <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata①\">audioData</a></code> is <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#buffersource-detached\" id=\"ref-for-buffersource-detached\">detached</a>,</ins>\n          execute the following steps: \n        <div lang=\"en\" class=\"amendment-toggles\"><button value=\"diff\" disabled=\"\">Show Change</button><button value=\"old\">Show Current</button><button value=\"new\">Show Future</button></div></div>",
          "rationale": "append",
          "steps": [
            {
              "html": "<p>Append <var>promise</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-pending-promises-slot\" id=\"ref-for-dom-baseaudiocontext-pending-promises-slot\">[[pending promises]]</a></code>.</p>"
            },
            {
              "html": "<div class=\"correction proposed\" id=\"c2361-2\">\n            <span class=\"marker\">Proposed Correction <a href=\"https://github.com/WebAudio/web-audio-api/issues/2361\">Issue 2361</a>-2. </span> Use new Web IDL buffer primitives \n           <div class=\"amendment-buttons\"><button onclick=\"location.href=&quot;#c2361-1&quot;\">Previous Change</button><button onclick=\"location.href=&quot;#c2361-3&quot;\">Next Change</button></div>\n           <del><a href=\"https://tc39.github.io/ecma262/#sec-detacharraybuffer\">Detach</a></del>\n           <ins><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-detach\" id=\"ref-for-dfn-detach\">Detach</a></ins>\n            the <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata②\">audioData</a></code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer③\">ArrayBuffer</a></code>. \n           <del>This operation is described in <a data-link-type=\"biblio\" href=\"https://webaudio.github.io/web-audio-api/#biblio-ecmascript\" title=\"ECMAScript Language Specification\">[ECMASCRIPT]</a>.</del>\n            If this operations throws, jump to the step 3. \n          <div lang=\"en\" class=\"amendment-toggles\"><button value=\"diff\" disabled=\"\">Show Change</button><button value=\"old\">Show Current</button><button value=\"new\">Show Future</button></div></div>"
            },
            {
              "html": "<p>Queue a decoding operation to be performed on another thread.</p>"
            }
          ]
        },
        {
          "html": "Else, execute the following error steps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>error</var> be a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#datacloneerror\" id=\"ref-for-datacloneerror\">DataCloneError</a></code>.</p>"
            },
            {
              "html": "<p>Reject <var>promise</var> with <var>error</var>, and remove it from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-pending-promises-slot\" id=\"ref-for-dom-baseaudiocontext-pending-promises-slot①\">[[pending promises]]</a></code>.</p>"
            },
            {
              "html": "<p><a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c50\"> Queue a media element task</a> to invoke <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-errorcallback\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-errorcallback\">errorCallback</a></code> with <var>error</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "queue a decode operation",
      "href": "https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decoding-thread",
      "html": "When queuing a decoding operation to be performed on another\n    thread, the following steps MUST happen on a thread that is not\n    the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-thread\" id=\"ref-for-control-thread\">control thread</a> nor the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread\">rendering thread</a>,\n    called the <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"BaseAudioContext\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-baseaudiocontext-decoding-thread\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>decoding thread</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span>.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>can decode</var> be a boolean flag, initially set to true.</p>"
        },
        {
          "html": "<p>Attempt to determine the MIME type of <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata③\">audioData</a></code>, using <a href=\"https://mimesniff.spec.whatwg.org/#matching-an-audio-or-video-type-pattern\"><cite>MIME Sniffing</cite> § 6.2 Matching an audio or video type pattern</a>. If the audio or\nvideo type pattern matching algorithm returns <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined②\">undefined</a></code>,\nset <var>can decode</var> to <em>false</em>.</p>"
        },
        {
          "html": "<p>If <var>can decode</var> is <em>true</em>, attempt to decode the encoded <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata④\">audioData</a></code> into <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#linear-pcm\" id=\"ref-for-linear-pcm①\">linear PCM</a>. In case of\nfailure, set <var>can decode</var> to <em>false</em>.</p>\n        <div class=\"correction proposed\" id=\"c2375-1\">\n          <span class=\"marker\">Proposed Correction <a href=\"https://github.com/WebAudio/web-audio-api/issues/2375\">Issue\n            2375</a>. </span> Only decode the first audio track of a multi-track media file. \n         <div class=\"amendment-buttons\"></div>\n         <ins cite=\"#c2375\">\n           If the media byte-stream contains multiple audio tracks, only decode the\n        first track to <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#linear-pcm\" id=\"ref-for-linear-pcm②\">linear pcm</a>. \n          \n         </ins>\n        <div lang=\"en\" class=\"amendment-toggles\"><button value=\"diff\" disabled=\"\">Show Change</button><button value=\"old\">Show Current</button><button value=\"new\">Show Future</button></div></div>"
        },
        {
          "html": "When queuing a decoding operation to be performed on another\n    thread, the following steps MUST happen on a thread that is not\n    the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-thread\" id=\"ref-for-control-thread\">control thread</a> nor the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread\">rendering thread</a>,\n    called the <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"BaseAudioContext\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-baseaudiocontext-decoding-thread\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>decoding thread</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span>.",
          "rationale": "let",
          "steps": [
            {
              "html": "When queuing a decoding operation to be performed on another\n    thread, the following steps MUST happen on a thread that is not\n    the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-thread\" id=\"ref-for-control-thread\">control thread</a> nor the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread\">rendering thread</a>,\n    called the <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"BaseAudioContext\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-baseaudiocontext-decoding-thread\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>decoding thread</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span>.",
              "rationale": "reject",
              "steps": [
                {
                  "html": "<p>Reject <var>promise</var> with <var>error</var>, and remove it from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-pending-promises-slot\" id=\"ref-for-dom-baseaudiocontext-pending-promises-slot②\">[[pending promises]]</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>If <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-errorcallback\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-errorcallback①\">errorCallback</a></code> is\nnot missing, invoke <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-errorcallback\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-errorcallback②\">errorCallback</a></code> with <var>error</var>.</p>"
            }
          ]
        },
        {
          "html": "When queuing a decoding operation to be performed on another\n    thread, the following steps MUST happen on a thread that is not\n    the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-thread\" id=\"ref-for-control-thread\">control thread</a> nor the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread\">rendering thread</a>,\n    called the <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"BaseAudioContext\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-baseaudiocontext-decoding-thread\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>decoding thread</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span>.",
          "rationale": "take",
          "steps": [
            {
              "html": "<p>Take the result, representing the decoded <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#linear-pcm\" id=\"ref-for-linear-pcm③\">linear PCM</a> audio data, and resample it to the sample-rate of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext①②\">BaseAudioContext</a></code> if it is different from\nthe sample-rate of <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-audiodata-successcallback-errorcallback-audiodata⑤\">audioData</a></code>.</p>"
            },
            {
              "html": "When queuing a decoding operation to be performed on another\n    thread, the following steps MUST happen on a thread that is not\n    the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-thread\" id=\"ref-for-control-thread\">control thread</a> nor the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread\">rendering thread</a>,\n    called the <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"BaseAudioContext\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-baseaudiocontext-decoding-thread\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>decoding thread</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span>.",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>buffer</var> be an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer⑤\">AudioBuffer</a></code> containing the final result\n(after possibly performing sample-rate conversion).</p>"
                },
                {
                  "html": "<p>Resolve <var>promise</var> with <var>buffer</var>.</p>"
                },
                {
                  "html": "<p>If <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-successcallback\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-successcallback\">successCallback</a></code> is not missing, invoke <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decodeaudiodata-successcallback\" id=\"ref-for-dom-baseaudiocontext-decodeaudiodata-successcallback①\">successCallback</a></code> with <var>buffer</var>.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "AudioContext()",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Set a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot①\">[[control thread state]]</a></code> to <code>suspended</code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑧\">AudioContext</a></code>.</p>"
        },
        {
          "html": "<p>Set a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot\">[[rendering thread state]]</a></code> to <code>suspended</code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑨\">AudioContext</a></code>.</p>"
        },
        {
          "html": "<p>Set a private slot called <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-render-quantum-size-slot\" id=\"ref-for-dom-baseaudiocontext-render-quantum-size-slot①\">[[render quantum size]]</a></code> to <code>128</code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext②⓪\">AudioContext</a></code>.</p>"
        },
        {
          "html": "<p>Let <code>[[pending resume promises]]</code> be a\nslot on this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext②①\">AudioContext</a></code>, that is an initially empty ordered list of\npromises.</p>"
        },
        {
          "html": "<p>If <code>contextOptions</code> is given, apply the options:</p>"
        },
        {
          "html": "<p>Set the internal latency of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext②②\">AudioContext</a></code> according to <code>contextOptions.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextoptions-latencyhint\" id=\"ref-for-dom-audiocontextoptions-latencyhint\">latencyHint</a></code></code>, as described\nin <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextoptions-latencyhint\" id=\"ref-for-dom-audiocontextoptions-latencyhint①\">latencyHint</a></code>.</p>"
        },
        {
          "html": "If <code>contextOptions.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextoptions-rendersizehint\" id=\"ref-for-dom-audiocontextoptions-rendersizehint\">renderSizeHint</a></code></code> is specified, execute the following steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If equal to <code>\"hardware\"</code>, the User-Agent can set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-render-quantum-size-slot\" id=\"ref-for-dom-baseaudiocontext-render-quantum-size-slot②\">[[render quantum size]]</a></code> to a value that’s best for the current\n    setup.</p>"
            },
            {
              "html": "<p>If an integer has been passed, the User-Agent can set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-render-quantum-size-slot\" id=\"ref-for-dom-baseaudiocontext-render-quantum-size-slot③\">[[render\n    quantum size]]</a></code> to this integer.</p>"
            }
          ]
        },
        {
          "html": "<p>If <code>contextOptions.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextoptions-samplerate\" id=\"ref-for-dom-audiocontextoptions-samplerate\">sampleRate</a></code></code> is specified,\nset the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-samplerate\" id=\"ref-for-dom-baseaudiocontext-samplerate①\">sampleRate</a></code> of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext②③\">AudioContext</a></code> to this value. Otherwise, use\nthe sample rate of the default output device. If the\nselected sample rate differs from the sample rate of the\noutput device, this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext②④\">AudioContext</a></code> MUST resample the\naudio output to match the sample rate of the output device.</p>"
        },
        {
          "html": "<p>If the context is <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#allowed-to-start\" id=\"ref-for-allowed-to-start\">allowed to start</a>, send a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message\">control message</a> to start processing.</p>"
        },
        {
          "html": "<p>Return this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext②⑤\">AudioContext</a></code> object.</p>"
        }
      ]
    },
    {
      "name": "AudioContext()",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>context</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext②⑥\">AudioContext</a></code> object.</p>"
        },
        {
          "html": "<p>Set a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot②\">[[control thread state]]</a></code> to <code>suspended</code> on <var>context</var>.</p>"
        },
        {
          "html": "<p>Set a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot①\">[[rendering thread state]]</a></code> to <code>suspended</code> on <var>context</var>.</p>"
        },
        {
          "html": "<p>Let <var>messageChannel</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/web-messaging.html#messagechannel\" id=\"ref-for-messagechannel\">MessageChannel</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>controlSidePort</var> be the value of <var>messageChannel</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/web-messaging.html#dom-messagechannel-port1\" id=\"ref-for-dom-messagechannel-port1\">port1</a></code> attribute.</p>"
        },
        {
          "html": "<p>Let <var>renderingSidePort</var> be the value of <var>messageChannel</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/web-messaging.html#dom-messagechannel-port2\" id=\"ref-for-dom-messagechannel-port2\">port2</a></code> attribute.</p>"
        },
        {
          "html": "<p>Let <var>serializedRenderingSidePort</var> be the result of <a data-link-type=\"abstract-op\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializewithtransfer\" id=\"ref-for-structuredserializewithtransfer\">StructuredSerializeWithTransfer</a>(<var>renderingSidePort</var>,\n« <var>renderingSidePort</var> »).</p>"
        },
        {
          "html": "<p>Set this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-audioworklet\" id=\"ref-for-dom-baseaudiocontext-audioworklet①\">audioWorklet</a></code>'s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworklet-port\" id=\"ref-for-dom-audioworklet-port\">port</a></code> to <var>controlSidePort</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing\">Queue a control message</a> to <a href=\"https://webaudio.github.io/web-audio-api/#setting-the-messageport-on-the-scope\">set the\nMessagePort on the AudioContextGlobalScope</a>, with <var>serializedRenderingSidePort</var>.</p>"
        },
        {
          "html": "If <code>contextOptions</code> is given, perform the following\nsubsteps:",
          "rationale": "if",
          "steps": [
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextoptions-sinkid\" id=\"ref-for-dom-audiocontextoptions-sinkid\">sinkId</a></code> is specified, let <var>sinkId</var> be\nthe value of <code>contextOptions.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextoptions-sinkid\" id=\"ref-for-dom-audiocontextoptions-sinkid①\">sinkId</a></code></code> and\nrun the following substeps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If both <var>sinkId</var> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot\">[[sink ID]]</a></code> are a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString③\">DOMString</a></code>, and they are equal to each other, abort these\nsubsteps.</p>"
                },
                {
                  "html": "<p>If <var>sinkId</var> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkOptions\" id=\"ref-for-AudioSinkOptions①\">AudioSinkOptions</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot①\">[[sink ID]]</a></code> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkInfo\" id=\"ref-for-AudioSinkInfo②\">AudioSinkInfo</a></code>, and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiosinkoptions-type\" id=\"ref-for-dom-audiosinkoptions-type\">type</a></code> in <var>sinkId</var> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiosinkinfo-type\" id=\"ref-for-dom-audiosinkinfo-type\">type</a></code> in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot②\">[[sink ID]]</a></code> are equal, abort these substeps.</p>"
                },
                {
                  "html": "<p>Let <var>validationResult</var> be the return value of <a href=\"https://webaudio.github.io/web-audio-api/#validating-sink-identifier\">sink identifier validation </a> of <var>sinkId</var>.</p>"
                },
                {
                  "html": "<p>If <var>validationResult</var> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException③\">DOMException</a></code>, throw an\nexception with <var>validationResult</var> and abort these substeps.</p>"
                },
                {
                  "html": "<p>If <var>sinkId</var> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString④\">DOMString</a></code>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot③\">[[sink ID]]</a></code> to <var>sinkId</var> and abort these\nsubsteps.</p>"
                },
                {
                  "html": "<p>If <var>sinkId</var> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkOptions\" id=\"ref-for-AudioSinkOptions②\">AudioSinkOptions</a></code>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot④\">[[sink ID]]</a></code> to a new instance of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkInfo\" id=\"ref-for-AudioSinkInfo③\">AudioSinkInfo</a></code> created with the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiosinkoptions-type\" id=\"ref-for-dom-audiosinkoptions-type①\">type</a></code> of <var>sinkId</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Set the internal latency of <var>context</var> according to <code>contextOptions.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextoptions-latencyhint\" id=\"ref-for-dom-audiocontextoptions-latencyhint②\">latencyHint</a></code></code>,\nas described in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextoptions-latencyhint\" id=\"ref-for-dom-audiocontextoptions-latencyhint③\">latencyHint</a></code>.</p>"
            },
            {
              "html": "If <code>contextOptions.<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextoptions-samplerate\" id=\"ref-for-dom-audiocontextoptions-samplerate①\">sampleRate</a></code> </code> is specified, set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-samplerate\" id=\"ref-for-dom-baseaudiocontext-samplerate②\">sampleRate</a></code> of <var>context</var> to this value. Otherwise, follow these substeps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>sinkId</var> is the empty string or a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkOptions\" id=\"ref-for-AudioSinkOptions③\">AudioSinkOptions</a></code>, use the sample rate of the default output\ndevice. Abort these substeps.</p>"
                },
                {
                  "html": "<p>If <var>sinkId</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString⑤\">DOMString</a></code>, use the sample rate of the\noutput device identified by <var>sinkId</var>. Abort these substeps.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>If <var>context</var> is <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#allowed-to-start\" id=\"ref-for-allowed-to-start①\">allowed to start</a>, send a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message①\">control message</a> to start processing.</p>"
        },
        {
          "html": "<p>Return <var>context</var>.</p>"
        }
      ]
    },
    {
      "name": "sending a control message to start processing",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Attempt to <a href=\"https://webaudio.github.io/web-audio-api/#acquiring\" id=\"ref-for-acquiring\">acquire system resources</a>.\nIn case of failure, abort the following steps.</p>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot②\">[[rendering thread state]]</a></code> to <code>running</code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext②⑦\">AudioContext</a></code>.</p>"
        },
        {
          "html": "<a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c53\"> queue a media element task</a> to execute the following steps:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state①\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext②⑧\">AudioContext</a></code> to \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-running\" id=\"ref-for-dom-audiocontextstate-running③\">running</a></code>\".</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"ref-for-queue-a-media-element-task\">Queue a media element task</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire\">fire an event</a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-baseaudiocontext-statechange\" id=\"ref-for-eventdef-baseaudiocontext-statechange\">statechange</a></code> at the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext②⑨\">AudioContext</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "sending a control message to start processing",
      "rationale": "let",
      "steps": [
        {
          "html": "<p>Let <var>document</var> be the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#current-settings-object\" id=\"ref-for-current-settings-object①\">current settings object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global③\">relevant global object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window②\">associated Document</a>.</p>"
        },
        {
          "html": "Attempt to <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#acquiring\" id=\"ref-for-acquiring①\">acquire system resources</a> to use a following audio output device\nbased on <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot⑤\">[[sink ID]]</a></code> for rendering:",
          "rationale": "if",
          "steps": [
            {
              "html": "If resource acquisition fails, execute the following steps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <var>document</var> is not allowed to use the feature identified by <code>\"speaker-selection\"</code>, abort these substeps.</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"ref-for-queue-a-media-element-task①\">queue a media element task</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire①\">fire an event</a> using <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#errorevent\" id=\"ref-for-errorevent\">ErrorEvent</a></code> at the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-audiocontext-error\" id=\"ref-for-eventdef-audiocontext-error\">error</a></code> of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext③⓪\">AudioContext</a></code>, and abort the\nfollowing steps.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this①\">this</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot③\">[[rendering thread state]]</a></code> to <code>running</code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext③①\">AudioContext</a></code>.</p>"
        },
        {
          "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"ref-for-queue-a-media-element-task②\">Queue a media element task</a> to execute the following steps:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state②\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext③②\">AudioContext</a></code> to \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-running\" id=\"ref-for-dom-audiocontextstate-running④\">running</a></code>\".</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire②\">fire an event</a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-baseaudiocontext-statechange\" id=\"ref-for-eventdef-baseaudiocontext-statechange①\">statechange</a></code> at the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext③③\">AudioContext</a></code>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "setting the messageport on the scope",
      "href": "https://webaudio.github.io/web-audio-api/#setting-the-messageport-on-the-scope",
      "html": "Sending a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message③\">control message</a> to set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/web-messaging.html#messageport\" id=\"ref-for-messageport\">MessagePort</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\" id=\"ref-for-AudioWorkletGlobalScope①\">AudioWorkletGlobalScope</a></code> means executing the following steps, on\n                    the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread①\">rendering thread</a>, with <var>serializedRenderingSidePort</var>, that has been transfered to\n                    the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\" id=\"ref-for-AudioWorkletGlobalScope②\">AudioWorkletGlobalScope</a></code>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>deserializedPort</var> be the result of <a data-link-type=\"abstract-op\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#structureddeserialize\" id=\"ref-for-structureddeserialize\">StructuredDeserialize</a>(<var>serializedRenderingSidePort</var>,\nthe current Realm).</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletglobalscope-port\" id=\"ref-for-dom-audioworkletglobalscope-port\">port</a></code> to <var>deserializedPort</var>.</p>"
        }
      ]
    },
    {
      "name": "AudioContext.close()",
      "html": "<span class=\"synchronous\">When close is called, execute these steps:</span>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this②\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global④\">relevant global object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window③\">associated Document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active②\">fully active</a> then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with①\">a promise rejected with</a> \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException④\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be a new Promise.</p>"
        },
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot③\">[[control thread state]]</a></code> flag on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext④⑤\">AudioContext</a></code> is <code>closed</code> reject the promise\nwith <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑤\">InvalidStateError</a></code>, abort these steps,\nreturning <var>promise</var>.</p>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot④\">[[control thread state]]</a></code> flag on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext④⑥\">AudioContext</a></code> to <code>closed</code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing①\">Queue a control message</a> to close the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext④⑦\">AudioContext</a></code>.</p>"
        },
        {
          "html": "<p>Return <em>promise</em>.</p>"
        }
      ]
    },
    {
      "name": "run a control message to close an AudioContext",
      "html": "Running a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message④\">control message</a> to close an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext④⑧\">AudioContext</a></code> means running these steps on the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread②\">rendering thread</a>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Attempt to <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#releasing\" id=\"ref-for-releasing①\">release system resources</a>.</p>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot④\">[[rendering thread state]]</a></code> to <code>suspended</code>.</p>"
        },
        {
          "html": "<p>If this <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message⑤\">control message</a> is being run in a reaction to the\ndocument being unloaded, abort this algorithm.</p>"
        },
        {
          "html": "<a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c54\"> queue a media element task</a> to execute the following steps:",
          "rationale": "resolve",
          "steps": [
            {
              "html": "<p>Resolve <em>promise</em>.</p>"
            },
            {
              "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state③\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext④⑨\">AudioContext</a></code> is not already \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-closed\" id=\"ref-for-dom-audiocontextstate-closed①\">closed</a></code>\":",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state④\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑤⓪\">AudioContext</a></code> to \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-closed\" id=\"ref-for-dom-audiocontextstate-closed②\">closed</a></code>\".</p>"
                },
                {
                  "html": "<p><a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c55\"> queue a media element task</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire③\">fire\nan event</a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-baseaudiocontext-statechange\" id=\"ref-for-eventdef-baseaudiocontext-statechange③\">statechange</a></code> at the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑤①\">AudioContext</a></code>.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "AudioContext::resume()",
      "html": "<span class=\"synchronous\">When resume is called,\n    execute these steps:</span>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this③\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global⑤\">relevant global object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window④\">associated Document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active③\">fully active</a> then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with②\">a promise rejected with</a> \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑦\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑤\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be a new Promise.</p>"
        },
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot⑤\">[[control thread state]]</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑤⑦\">AudioContext</a></code> is <code>closed</code> reject the\npromise with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑧\">InvalidStateError</a></code>, abort these steps,\nreturning <var>promise</var>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-suspended-by-user-slot\" id=\"ref-for-dom-audiocontext-suspended-by-user-slot\">[[suspended by user]]</a></code> to <code>false</code>.</p>"
        },
        {
          "html": "<p>If the context is not <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#allowed-to-start\" id=\"ref-for-allowed-to-start②\">allowed to start</a>, append <var>promise</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-pending-promises-slot\" id=\"ref-for-dom-baseaudiocontext-pending-promises-slot③\">[[pending promises]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-pending-resume-promises-slot\" id=\"ref-for-dom-audiocontext-pending-resume-promises-slot\">[[pending resume promises]]</a></code> and abort these steps, returning <var>promise</var>.</p>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot⑥\">[[control thread state]]</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑤⑧\">AudioContext</a></code> to <code>running</code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing②\">Queue a control message</a> to resume the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑤⑨\">AudioContext</a></code>.</p>"
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "run a control message in AudioContext",
      "href": "https://webaudio.github.io/web-audio-api/#context-resume",
      "html": "Running a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message⑥\">control message</a> to resume an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑥⓪\">AudioContext</a></code> means running these steps on the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread③\">rendering thread</a>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Attempt to <a href=\"https://webaudio.github.io/web-audio-api/#acquiring\" id=\"ref-for-acquiring②\">acquire system resources</a>.</p>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot⑤\">[[rendering thread state]]</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑥①\">AudioContext</a></code> to <code>running</code>.</p>"
        },
        {
          "html": "<p>Start <a href=\"https://webaudio.github.io/web-audio-api/#rendering-loop\">rendering the audio graph</a>.</p>"
        },
        {
          "html": "In case of failure, <a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c56\"> queue a media element task</a> to execute the following steps:",
          "rationale": "reject",
          "steps": [
            {
              "html": "<p>Reject all promises from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-pending-resume-promises-slot\" id=\"ref-for-dom-audiocontext-pending-resume-promises-slot①\">[[pending resume promises]]</a></code> in order, then clear <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-pending-resume-promises-slot\" id=\"ref-for-dom-audiocontext-pending-resume-promises-slot②\">[[pending resume promises]]</a></code>.</p>"
            },
            {
              "html": "<p>Additionally, remove those promises from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-pending-promises-slot\" id=\"ref-for-dom-baseaudiocontext-pending-promises-slot④\">[[pending\npromises]]</a></code>.</p>"
            }
          ]
        },
        {
          "html": "<a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c57\"> queue a media element task</a> to execute the following steps:",
          "rationale": "resolve",
          "steps": [
            {
              "html": "<p>Resolve all promises from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-pending-resume-promises-slot\" id=\"ref-for-dom-audiocontext-pending-resume-promises-slot③\">[[pending resume promises]]</a></code> in order.</p>"
            },
            {
              "html": "<p>Clear <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-pending-resume-promises-slot\" id=\"ref-for-dom-audiocontext-pending-resume-promises-slot④\">[[pending resume promises]]</a></code>. Additionally, remove those\npromises from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-pending-promises-slot\" id=\"ref-for-dom-baseaudiocontext-pending-promises-slot⑤\">[[pending promises]]</a></code>.</p>"
            },
            {
              "html": "<p>Resolve <em>promise</em>.</p>"
            },
            {
              "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state⑤\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑥②\">AudioContext</a></code> is not already \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-running\" id=\"ref-for-dom-audiocontextstate-running⑥\">running</a></code>\":",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state⑥\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑥③\">AudioContext</a></code> to \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-running\" id=\"ref-for-dom-audiocontextstate-running⑦\">running</a></code>\".</p>"
                },
                {
                  "html": "<p><a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c58\"> queue a media element task</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire④\">fire\nan event </a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-baseaudiocontext-statechange\" id=\"ref-for-eventdef-baseaudiocontext-statechange④\">statechange</a></code> at the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑥④\">AudioContext</a></code>.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "AudioContext.suspend()",
      "html": "<span class=\"synchronous\">When suspend is called, execute these steps:</span>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this④\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global⑥\">relevant global object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window⑤\">associated Document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active④\">fully active</a> then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with③\">a promise rejected with</a> \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror⑨\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑥\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be a new Promise.</p>"
        },
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot⑦\">[[control thread state]]</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑥⑧\">AudioContext</a></code> is <code>closed</code> reject the promise\nwith <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⓪\">InvalidStateError</a></code>, abort these steps,\nreturning <var>promise</var>.</p>"
        },
        {
          "html": "<p>Append <var>promise</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-pending-promises-slot\" id=\"ref-for-dom-baseaudiocontext-pending-promises-slot⑥\">[[pending promises]]</a></code>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-suspended-by-user-slot\" id=\"ref-for-dom-audiocontext-suspended-by-user-slot①\">[[suspended by user]]</a></code> to <code>true</code>.</p>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot⑧\">[[control thread state]]</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑥⑨\">AudioContext</a></code> to <code>suspended</code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing③\">Queue a control message</a> to suspend the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑦⓪\">AudioContext</a></code>.</p>"
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "run a control message to suspend an AudioContext",
      "html": "Running a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message⑦\">control message</a> to suspend an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑦①\">AudioContext</a></code> means running these steps on the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread④\">rendering thread</a>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Attempt to <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#releasing\" id=\"ref-for-releasing③\">release system resources</a>.</p>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot⑥\">[[rendering thread state]]</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑦②\">AudioContext</a></code> to <code>suspended</code>.</p>"
        },
        {
          "html": "<a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c59\"> queue a media element task</a> to execute the following steps:",
          "rationale": "resolve",
          "steps": [
            {
              "html": "<p>Resolve <em>promise</em>.</p>"
            },
            {
              "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state⑦\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑦③\">AudioContext</a></code> is not already \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-suspended\" id=\"ref-for-dom-audiocontextstate-suspended②\">suspended</a></code>\":",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state⑧\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑦④\">AudioContext</a></code> to \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-suspended\" id=\"ref-for-dom-audiocontextstate-suspended③\">suspended</a></code>\".</p>"
                },
                {
                  "html": "<p><a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c510\"> queue a media element task</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire⑤\">fire\nan event </a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-baseaudiocontext-statechange\" id=\"ref-for-eventdef-baseaudiocontext-statechange⑤\">statechange</a></code> at the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑦⑤\">AudioContext</a></code>.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "AudioContext.setSinkId()",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>sinkId</var> be the method’s first argument.</p>"
        },
        {
          "html": "<p>If <var>sinkId</var> is equal to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot⑧\">[[sink ID]]</a></code>, return a\npromise, resolve it immediately and abort these steps.</p>"
        },
        {
          "html": "<p>Let <var>validationResult</var> be the return value of <a href=\"https://webaudio.github.io/web-audio-api/#validating-sink-identifier\">sink identifier validation</a> of <var>sinkId</var>.</p>"
        },
        {
          "html": "<p>If <var>validationResult</var> is not <code>null</code>, return a promise\nrejected with <var>validationResult</var>. Abort these steps.</p>"
        },
        {
          "html": "<p>Let <var>p</var> be a new promise.</p>"
        },
        {
          "html": "<p>Send a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message⑧\">control message</a> with <var>p</var> and <var>sinkId</var> to start\nprocessing.</p>"
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "run a control message for setSinkId",
      "html": "Sending a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message⑨\">control message</a> to start processing during <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-setsinkid\" id=\"ref-for-dom-audiocontext-setsinkid①\">setSinkId()</a></code> means executing the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>p</var> be the promise passed into this algorithm.</p>"
        },
        {
          "html": "<p>Let <var>sinkId</var> be the sink identifier passed into this algorithm.</p>"
        },
        {
          "html": "<p>If both <var>sinkId</var> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot⑨\">[[sink ID]]</a></code> are a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString⑥\">DOMString</a></code>, and they are equal to each other, <a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c511\"> queue a media element task</a> to resolve <var>p</var> and abort these steps.</p>"
        },
        {
          "html": "<p>If <var>sinkId</var> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkOptions\" id=\"ref-for-AudioSinkOptions④\">AudioSinkOptions</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot①⓪\">[[sink ID]]</a></code> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkInfo\" id=\"ref-for-AudioSinkInfo④\">AudioSinkInfo</a></code>, and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiosinkoptions-type\" id=\"ref-for-dom-audiosinkoptions-type②\">type</a></code> in <var>sinkId</var> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiosinkinfo-type\" id=\"ref-for-dom-audiosinkinfo-type①\">type</a></code> in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot①①\">[[sink ID]]</a></code> are equal, <a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c512\"> queue a media element task</a> to resolve <var>p</var> and abort these steps.</p>"
        },
        {
          "html": "<p>Let <var>wasRunning</var> be true.</p>"
        },
        {
          "html": "<p>Set <var>wasRunning</var> to false if the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot⑦\">[[rendering thread state]]</a></code> on\nthe <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑦⑧\">AudioContext</a></code> is <code>\"suspended\"</code>.</p>"
        },
        {
          "html": "<p>Pause the renderer after processing the current render quantum.</p>"
        },
        {
          "html": "<p>Attempt to <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#releasing\" id=\"ref-for-releasing④\">release system resources</a>.</p>"
        },
        {
          "html": "If <var>wasRunning</var> is true:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot⑧\">[[rendering thread state]]</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑦⑨\">AudioContext</a></code> to <code>\"suspended\"</code>.</p>"
            },
            {
              "html": "<a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c513\"> Queue a media element task</a> to execute the following steps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state⑨\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑧⓪\">AudioContext</a></code> is not already \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-suspended\" id=\"ref-for-dom-audiocontextstate-suspended④\">suspended</a></code>\":",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state①⓪\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑧①\">AudioContext</a></code> to \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-suspended\" id=\"ref-for-dom-audiocontextstate-suspended⑤\">suspended</a></code>\".</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire⑥\">Fire an event</a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-baseaudiocontext-statechange\" id=\"ref-for-eventdef-baseaudiocontext-statechange⑥\">statechange</a></code> at the associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑧②\">AudioContext</a></code>.</p>"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Attempt to <a href=\"https://webaudio.github.io/web-audio-api/#acquiring\" id=\"ref-for-acquiring③\">acquire system resources</a> to use\na following audio output device based on <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot①②\">[[sink ID]]</a></code> for rendering:</p>\n           <ul>\n            <li data-md=\"\">\n             <p>The default audio output device for the empty string.</p>\n            </li><li data-md=\"\">\n             <p>A audio output device identified by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot①③\">[[sink ID]]</a></code>.</p>\n           </li></ul>\n           <p>In case of failure, reject <var>p</var> with \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidaccesserror\" id=\"ref-for-invalidaccesserror\">InvalidAccessError</a></code>\" abort\nthe following steps.</p>"
        },
        {
          "html": "<a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c514\"> Queue a media element task</a> to execute the following steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>sinkId</var> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString⑦\">DOMString</a></code>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot①④\">[[sink ID]]</a></code> to <var>sinkId</var>. Abort these steps.</p>"
            },
            {
              "html": "<p>If <var>sinkId</var> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkOptions\" id=\"ref-for-AudioSinkOptions⑤\">AudioSinkOptions</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot①⑤\">[[sink ID]]</a></code> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString⑧\">DOMString</a></code>,\nset <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot①⑥\">[[sink ID]]</a></code> to a new instance of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkInfo\" id=\"ref-for-AudioSinkInfo⑤\">AudioSinkInfo</a></code> created with the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiosinkoptions-type\" id=\"ref-for-dom-audiosinkoptions-type③\">type</a></code> of <var>sinkId</var>.</p>"
            },
            {
              "html": "<p>If <var>sinkId</var> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkOptions\" id=\"ref-for-AudioSinkOptions⑥\">AudioSinkOptions</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot①⑦\">[[sink ID]]</a></code> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioSinkInfo\" id=\"ref-for-AudioSinkInfo⑥\">AudioSinkInfo</a></code>,\nset <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiosinkinfo-type\" id=\"ref-for-dom-audiosinkinfo-type②\">type</a></code> of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-sink-id-slot\" id=\"ref-for-dom-audiocontext-sink-id-slot①⑧\">[[sink ID]]</a></code> to\nthe <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiosinkoptions-type\" id=\"ref-for-dom-audiosinkoptions-type④\">type</a></code> value of <var>sinkId</var>.</p>"
            },
            {
              "html": "<p>Resolve <var>p</var>.</p>"
            },
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire⑦\">Fire an event</a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-audiocontext-sinkchange\" id=\"ref-for-eventdef-audiocontext-sinkchange\">sinkchange</a></code> at the associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑧③\">AudioContext</a></code>.</p>"
            }
          ]
        },
        {
          "html": "If <var>wasRunning</var> is true:",
          "rationale": "set",
          "steps": [
            {
              "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot⑨\">[[rendering thread state]]</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑧④\">AudioContext</a></code> to <code>\"running\"</code>.</p>"
            },
            {
              "html": "<a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c515\"> Queue a media element task</a> to execute the following steps:",
              "rationale": "if",
              "steps": [
                {
                  "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state①①\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑧⑤\">AudioContext</a></code> is not already \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-running\" id=\"ref-for-dom-audiocontextstate-running⑧\">running</a></code>\":",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state①②\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑧⑥\">AudioContext</a></code> to \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-running\" id=\"ref-for-dom-audiocontextstate-running⑨\">running</a></code>\".</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire⑧\">Fire an event</a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-baseaudiocontext-statechange\" id=\"ref-for-eventdef-baseaudiocontext-statechange⑦\">statechange</a></code> at the associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext⑧⑦\">AudioContext</a></code>.</p>"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "validating sink ID",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>document</var> be the current settings object’s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window⑥\">associated Document</a>.</p>"
        },
        {
          "html": "<p>Let <var>sinkIdArg</var> be the value passed in to this algorithm.</p>"
        },
        {
          "html": "<p>If <var>document</var> is not allowed to use the feature identified by <code>\"speaker-selection\"</code>, return a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑦\">DOMException</a></code> whose name\nis \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notallowederror\" id=\"ref-for-notallowederror\">NotAllowedError</a></code>\".</p>"
        },
        {
          "html": "<p>If <var>sinkIdArg</var> is a type of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMString\" id=\"ref-for-idl-DOMString⑨\">DOMString</a></code> but it is not equal to the empty\nstring or it does not match any audio output device identified by the\nresult that would be provided by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/mediacapture-main/#dom-mediadevices-enumeratedevices\" id=\"ref-for-dom-mediadevices-enumeratedevices\">enumerateDevices()</a></code>,\nreturn a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑧\">DOMException</a></code> whose name is \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notfounderror\" id=\"ref-for-notfounderror\">NotFoundError</a></code>\".</p>"
        },
        {
          "html": "<p>Return <code>null</code>.</p>"
        }
      ]
    },
    {
      "name": "OfflineAudioContext.OfflineAudioContext(contextOptions)",
      "html": "If the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#current-settings-object\" id=\"ref-for-current-settings-object②\">current settings object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global⑦\">relevant global object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window⑦\">associated Document</a> is NOT <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active⑤\">fully active</a>,\n                throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①①\">InvalidStateError</a></code> and abort these steps.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot⑨\">[[control thread state]]</a></code> for <var>c</var> to <code>\"suspended\"</code>.</p>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot①⓪\">[[rendering thread state]]</a></code> for <var>c</var> to <code>\"suspended\"</code>.</p>"
        },
        {
          "html": "<p>Construct an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioDestinationNode\" id=\"ref-for-AudioDestinationNode①①\">AudioDestinationNode</a></code> with its <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionode-channelcount\" id=\"ref-for-dom-audionode-channelcount\">channelCount</a></code> set to <code>contextOptions.numberOfChannels</code>.</p>"
        }
      ]
    },
    {
      "name": "OfflineAudioContext.OfflineAudioContext(contextOptions)",
      "html": "If the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#current-settings-object\" id=\"ref-for-current-settings-object③\">current settings object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global⑧\">relevant global object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window⑧\">associated Document</a> is NOT <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active⑥\">fully active</a>,\n                throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①②\">InvalidStateError</a></code> and abort these steps.",
      "rationale": "set",
      "steps": [
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot①⓪\">[[control thread state]]</a></code> for <var>c</var> to <code>\"suspended\"</code>.</p>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot①①\">[[rendering thread state]]</a></code> for <var>c</var> to <code>\"suspended\"</code>.</p>"
        },
        {
          "html": "Determine the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-render-quantum-size-slot\" id=\"ref-for-dom-baseaudiocontext-render-quantum-size-slot④\">[[render quantum size]]</a></code> for this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext⑧\">OfflineAudioContext</a></code>,\n    based on the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-offlineaudiocontextoptions-rendersizehint\" id=\"ref-for-dom-offlineaudiocontextoptions-rendersizehint\">renderSizeHint</a></code>:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If it has the default value of <code>\"default\"</code> or <code>\"hardware</code>\", set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-render-quantum-size-slot\" id=\"ref-for-dom-baseaudiocontext-render-quantum-size-slot⑤\">[[render quantum size]]</a></code> private\n   slot to 128.</p>"
            },
            {
              "html": "<p>Else, if an integer has been passed, the User-Agent can decide to\n   honour this value by setting it to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-render-quantum-size-slot\" id=\"ref-for-dom-baseaudiocontext-render-quantum-size-slot⑥\">[[render quantum size]]</a></code> private slot.</p>"
            }
          ]
        },
        {
          "html": "<p>Construct an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioDestinationNode\" id=\"ref-for-AudioDestinationNode①②\">AudioDestinationNode</a></code> with its <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionode-channelcount\" id=\"ref-for-dom-audionode-channelcount①\">channelCount</a></code> set to <code>contextOptions.numberOfChannels</code>.</p>"
        },
        {
          "html": "<p>Let <var>messageChannel</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/web-messaging.html#messagechannel\" id=\"ref-for-messagechannel①\">MessageChannel</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>controlSidePort</var> be the value of <var>messageChannel</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/web-messaging.html#dom-messagechannel-port1\" id=\"ref-for-dom-messagechannel-port1①\">port1</a></code> attribute.</p>"
        },
        {
          "html": "<p>Let <var>renderingSidePort</var> be the value of <var>messageChannel</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/web-messaging.html#dom-messagechannel-port2\" id=\"ref-for-dom-messagechannel-port2①\">port2</a></code> attribute.</p>"
        },
        {
          "html": "<p>Let <var>serializedRenderingSidePort</var> be the result of <a data-link-type=\"abstract-op\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializewithtransfer\" id=\"ref-for-structuredserializewithtransfer①\">StructuredSerializeWithTransfer</a>(<var>renderingSidePort</var>,\n« <var>renderingSidePort</var> »).</p>"
        },
        {
          "html": "<p>Set this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-audioworklet\" id=\"ref-for-dom-baseaudiocontext-audioworklet②\">audioWorklet</a></code>'s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworklet-port\" id=\"ref-for-dom-audioworklet-port①\">port</a></code> to <var>controlSidePort</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing④\">Queue a control message</a> to <a href=\"https://webaudio.github.io/web-audio-api/#setting-the-messageport-on-the-scope\">set the\nMessagePort on the AudioContextGlobalScope</a>, with <var>serializedRenderingSidePort</var>.</p>"
        }
      ]
    },
    {
      "name": "OfflineAudioContext.startRendering()",
      "href": "https://webaudio.github.io/web-audio-api/#dom-offlineaudiocontext-rendering-started-slot",
      "html": "Let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"OfflineAudioContext\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-offlineaudiocontext-rendering-started-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[rendering started]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be an internal slot of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext①①\">OfflineAudioContext</a></code>.  Initialize this slot to <em>false</em>. \n      <p><span class=\"synchronous\">When <code>startRendering</code> is\n    called, the following steps MUST be performed on the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-thread\" id=\"ref-for-control-thread①\">control\n    thread</a>:</span></p>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑤\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global⑨\">relevant global object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window⑨\">associated Document</a> is not <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active⑦\">fully active</a> then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with④\">a promise rejected with</a> \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①③\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException⑨\">DOMException</a></code>."
        },
        {
          "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-offlineaudiocontext-rendering-started-slot\" id=\"ref-for-dom-offlineaudiocontext-rendering-started-slot\">[[rendering started]]</a></code> slot on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext①②\">OfflineAudioContext</a></code> is <em>true</em>, return a rejected\n        promise with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①④\">InvalidStateError</a></code>, and abort these\n        steps."
        },
        {
          "html": "Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-offlineaudiocontext-rendering-started-slot\" id=\"ref-for-dom-offlineaudiocontext-rendering-started-slot①\">[[rendering started]]</a></code> slot of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext①③\">OfflineAudioContext</a></code> to <em>true</em>."
        },
        {
          "html": "Let <var>promise</var> be a new promise."
        },
        {
          "html": "Create a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer①①\">AudioBuffer</a></code>, with a number of\n        channels, length and sample rate equal respectively to the <code>numberOfChannels</code>, <code>length</code> and <code>sampleRate</code> values passed to this instance’s\n        constructor in the <code>contextOptions</code> parameter.\n        Assign this buffer to an internal slot <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"OfflineAudioContext\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-offlineaudiocontext-rendered-buffer-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[rendered buffer]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> in the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext①④\">OfflineAudioContext</a></code>."
        },
        {
          "html": "If an exception was thrown during the preceding <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer①②\">AudioBuffer</a></code> constructor call, reject <var>promise</var> with this exception."
        },
        {
          "html": "Otherwise, in the case that the buffer was successfully\n        constructed, <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#begin-offline-rendering\" id=\"ref-for-begin-offline-rendering\">begin offline rendering</a>."
        },
        {
          "html": "Append <var>promise</var> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-pending-promises-slot\" id=\"ref-for-dom-baseaudiocontext-pending-promises-slot⑦\">[[pending promises]]</a></code>."
        },
        {
          "html": "Return <var>promise</var>."
        }
      ]
    },
    {
      "name": "begin offline rendering",
      "href": "https://webaudio.github.io/web-audio-api/#begin-offline-rendering",
      "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"begin-offline-rendering\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">begin offline rendering</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span>, the following steps MUST\n    happen on a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread⑤\">rendering thread</a> that is created for the\n    occasion.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "Given the current connections and scheduled changes, start\n        rendering <code>length</code> sample-frames of audio into <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-offlineaudiocontext-rendered-buffer-slot\" id=\"ref-for-dom-offlineaudiocontext-rendered-buffer-slot\">[[rendered buffer]]</a></code>"
        },
        {
          "html": "For every <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#render-quantum\" id=\"ref-for-render-quantum③\">render quantum</a>, check and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-offlineaudiocontext-suspend\" id=\"ref-for-dom-offlineaudiocontext-suspend①\">suspend</a></code> rendering if necessary."
        },
        {
          "html": "If a suspended context is resumed, continue to render the\n        buffer."
        },
        {
          "html": "To <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-for=\"\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"begin-offline-rendering\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">begin offline rendering</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span>, the following steps MUST\n    happen on a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread⑤\">rendering thread</a> that is created for the\n    occasion.",
          "rationale": "resolve",
          "steps": [
            {
              "html": "Resolve the <var>promise</var> created by <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-offlineaudiocontext-startrendering\" id=\"ref-for-dom-offlineaudiocontext-startrendering①\">startRendering()</a></code> with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-offlineaudiocontext-rendered-buffer-slot\" id=\"ref-for-dom-offlineaudiocontext-rendered-buffer-slot①\">[[rendered buffer]]</a></code>."
            },
            {
              "html": "<a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c517\"> queue a media element task</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire①⓪\">fire an event</a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-offlineaudiocontext-complete\" id=\"ref-for-eventdef-offlineaudiocontext-complete①\">complete</a></code> using an instance of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioCompletionEvent\" id=\"ref-for-OfflineAudioCompletionEvent①\">OfflineAudioCompletionEvent</a></code> whose <code>renderedBuffer</code> property is set to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-offlineaudiocontext-rendered-buffer-slot\" id=\"ref-for-dom-offlineaudiocontext-rendered-buffer-slot②\">[[rendered buffer]]</a></code>."
            }
          ]
        }
      ]
    },
    {
      "name": "OfflineAudioContext::resume()",
      "html": "<span class=\"synchronous\">When resume is called,\n    execute these steps:</span>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑥\">this</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#concept-relevant-global\" id=\"ref-for-concept-relevant-global①⓪\">relevant global object</a>'s <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-document-window\" id=\"ref-for-concept-document-window①⓪\">associated Document</a> is\nnot <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active\" id=\"ref-for-fully-active⑧\">fully active</a> then return <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#a-promise-rejected-with\" id=\"ref-for-a-promise-rejected-with⑤\">a promise rejected with</a> \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑤\">InvalidStateError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException①⓪\">DOMException</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>promise</var> be a new Promise.</p>"
        },
        {
          "html": "<p>Abort these steps and reject <var>promise</var> with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror①⑥\">InvalidStateError</a></code> when any of following conditions is true:</p>\n        <ul>\n         <li data-md=\"\">\n          <p>The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot①①\">[[control thread state]]</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext①⑥\">OfflineAudioContext</a></code> is <code>closed</code>.</p>\n         </li><li data-md=\"\">\n          <p>The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-offlineaudiocontext-rendering-started-slot\" id=\"ref-for-dom-offlineaudiocontext-rendering-started-slot②\">[[rendering started]]</a></code> slot on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext①⑦\">OfflineAudioContext</a></code> is <em>false</em>.</p>\n        </li></ul>"
        },
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot①②\">[[control thread state]]</a></code> flag on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext①⑧\">OfflineAudioContext</a></code> to <code>running</code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing⑤\">Queue a control message</a> to resume the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext①⑨\">OfflineAudioContext</a></code>.</p>"
        },
        {
          "html": "<p>Return <var>promise</var>.</p>"
        }
      ]
    },
    {
      "name": "run a control message in OfflineAudioContext",
      "html": "Running a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message①⓪\">control message</a> to resume an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext②⓪\">OfflineAudioContext</a></code> means running these steps on the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread⑥\">rendering thread</a>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot①②\">[[rendering thread state]]</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext②①\">OfflineAudioContext</a></code> to <code>running</code>.</p>"
        },
        {
          "html": "<p>Start <a href=\"https://webaudio.github.io/web-audio-api/#rendering-loop\">rendering the audio graph</a>.</p>"
        },
        {
          "html": "<p>In case of failure, <a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c518\"> queue a media element task</a> to reject <var>promise</var> and abort the remaining steps.</p>"
        },
        {
          "html": "<a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c519\"> queue a media element task</a> to execute the following steps:",
          "rationale": "resolve",
          "steps": [
            {
              "html": "<p>Resolve <var>promise</var>.</p>"
            },
            {
              "html": "If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state①③\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext②②\">OfflineAudioContext</a></code> is not already \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-running\" id=\"ref-for-dom-audiocontextstate-running①⓪\">running</a></code>\":",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state①④\">state</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext②③\">OfflineAudioContext</a></code> to \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-running\" id=\"ref-for-dom-audiocontextstate-running①①\">running</a></code>\".</p>"
                },
                {
                  "html": "<p><a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c520\"> queue a media element task</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire①①\">fire\nan event</a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-baseaudiocontext-statechange\" id=\"ref-for-eventdef-baseaudiocontext-statechange⑧\">statechange</a></code> at the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext②④\">OfflineAudioContext</a></code>.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "new AudioBuffer()",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><span class=\"synchronous\">If any of the values in <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-constructor-options\" id=\"ref-for-dom-audiobuffer-constructor-options\">options</a></code> lie outside its nominal range, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror①⓪\">NotSupportedError</a></code> exception and abort the following steps.</span></p>"
        },
        {
          "html": "<p>Let <var>b</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer②⑦\">AudioBuffer</a></code> object.</p>"
        },
        {
          "html": "<p>Respectively assign the values of the attributes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobufferoptions-numberofchannels\" id=\"ref-for-dom-audiobufferoptions-numberofchannels\">numberOfChannels</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobufferoptions-length\" id=\"ref-for-dom-audiobufferoptions-length\">length</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobufferoptions-samplerate\" id=\"ref-for-dom-audiobufferoptions-samplerate\">sampleRate</a></code> of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBufferOptions\" id=\"ref-for-AudioBufferOptions①\">AudioBufferOptions</a></code> passed\nin the constructor to the internal slots <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-number-of-channels-slot\" id=\"ref-for-dom-audiobuffer-number-of-channels-slot\">[[number of channels]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-length-slot\" id=\"ref-for-dom-audiobuffer-length-slot\">[[length]]</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-sample-rate-slot\" id=\"ref-for-dom-audiobuffer-sample-rate-slot\">[[sample rate]]</a></code>.</p>"
        },
        {
          "html": "<p>Set the internal slot <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-internal-data-slot\" id=\"ref-for-dom-audiobuffer-internal-data-slot\">[[internal data]]</a></code> of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer②⑧\">AudioBuffer</a></code> to the result of calling <a href=\"https://tc39.github.io/ecma262/#sec-createbytedatablock\"><code> CreateByteDataBlock</code></a><code>(<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-length-slot\" id=\"ref-for-dom-audiobuffer-length-slot①\">[[length]]</a></code> * <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-number-of-channels-slot\" id=\"ref-for-dom-audiobuffer-number-of-channels-slot①\">[[number of channels]]</a></code>)</code>.</p>"
        },
        {
          "html": "<p>Return <var>b</var>.</p>"
        }
      ]
    },
    {
      "name": "acquire the content of an AudioBuffer",
      "href": "https://webaudio.github.io/web-audio-api/#acquire-the-content",
      "html": "When an <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"acquire the content|acquire the contents of an AudioBuffer\" data-noexport=\"\" id=\"acquire-the-content\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">acquire the content</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> operation occurs on an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer④①\">AudioBuffer</a></code>, run the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<div class=\"correction proposed\" id=\"c2361-4\">\n        <span class=\"marker\">Proposed Correction <a href=\"https://github.com/WebAudio/web-audio-api/issues/2361\">Issue 2361</a>-4. </span> Use new Web IDL buffer primitives \n       <div class=\"amendment-buttons\"><button onclick=\"location.href=&quot;#c2361-3&quot;\">Previous Change</button><button onclick=\"location.href=&quot;#c2361-5&quot;\">Next Change</button></div>\n        If \n       <del>the operation <a href=\"https://tc39.github.io/ecma262/#sec-isdetachedbuffer\"><code>IsDetachedBuffer</code></a> on any of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer④②\">AudioBuffer</a></code>'s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑤\">ArrayBuffer</a></code>s</del>\n       <ins>any of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer④③\">AudioBuffer</a></code>'s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑥\">ArrayBuffer</a></code>s are <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#buffersource-detached\" id=\"ref-for-buffersource-detached①\">detached</a></ins>\n       , return <code>true</code>, abort these steps, and\nreturn a zero-length channel data buffer to the invoker. \n      <div lang=\"en\" class=\"amendment-toggles\"><button value=\"diff\" disabled=\"\">Show Change</button><button value=\"old\">Show Current</button><button value=\"new\">Show Future</button></div></div>"
        },
        {
          "html": "<div class=\"correction proposed\" id=\"c2361-5\">\n        <span class=\"marker\">Proposed Correction <a href=\"https://github.com/WebAudio/web-audio-api/issues/2361\">Issue 2361</a>-5. </span> Use new Web IDL buffer primitives \n       <div class=\"amendment-buttons\"><button onclick=\"location.href=&quot;#c2361-4&quot;\">Previous Change</button><button onclick=\"location.href=&quot;#c2361-6&quot;\">Next Change</button></div>\n       <del><a href=\"https://tc39.github.io/ecma262/#sec-detacharraybuffer\">Detach</a></del>\n       <ins><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#dfn-detach\" id=\"ref-for-dfn-detach①\">Detach</a></ins>\n        all <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑦\">ArrayBuffer</a></code>s for arrays previously returned\nby <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-getchanneldata\" id=\"ref-for-dom-audiobuffer-getchanneldata③\">getChannelData()</a></code> on this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer④④\">AudioBuffer</a></code>. \n      <div lang=\"en\" class=\"amendment-toggles\"><button value=\"diff\" disabled=\"\">Show Change</button><button value=\"old\">Show Current</button><button value=\"new\">Show Future</button></div></div>"
        },
        {
          "html": "<p>Retain the underlying <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-internal-data-slot\" id=\"ref-for-dom-audiobuffer-internal-data-slot③\">[[internal data]]</a></code> from those <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑧\">ArrayBuffer</a></code>s and return references to them to the\ninvoker.</p>"
        },
        {
          "html": "<p>Attach <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-ArrayBuffer\" id=\"ref-for-idl-ArrayBuffer⑨\">ArrayBuffer</a></code>s containing copies of the data to\nthe <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer④⑦\">AudioBuffer</a></code>, to be returned by the next call to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-getchanneldata\" id=\"ref-for-dom-audiobuffer-getchanneldata④\">getChannelData()</a></code>.</p>"
        }
      ]
    },
    {
      "name": "AudioNode factory method",
      "html": "To create a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode⑤⑧\">AudioNode</a></code> of a particular type <var>n</var> using its <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#factory-method\" id=\"ref-for-factory-method①⑥\">factory method</a>, called on a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext②④\">BaseAudioContext</a></code> <var>c</var>, execute these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be a new object of type <var>n</var>.</p>"
        },
        {
          "html": "<p>Let <var>option</var> be a dictionary of the type <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#associated-option-object\" id=\"ref-for-associated-option-object\">associated</a> to the interface <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#associated-interface\" id=\"ref-for-associated-interface\"> associated</a> to this factory method.</p>"
        },
        {
          "html": "<p>For each parameter passed to the factory method, set the\ndictionary member of the same name on <var>option</var> to the\nvalue of this parameter.</p>"
        },
        {
          "html": "<p>Call the constructor for <var>n</var> on <var>node</var> with <var>c</var> and <var>option</var> as arguments.</p>"
        },
        {
          "html": "<p>Return <var>node</var></p>"
        }
      ]
    },
    {
      "name": "initialize an AudioNode",
      "href": "https://webaudio.github.io/web-audio-api/#audionode-constructor-init",
      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"audionode-constructor-init\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Initializing</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> an object <var>o</var> that inherits from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode⑤⑨\">AudioNode</a></code> means executing the following\n    steps, given the arguments <var>context</var> and <var>dict</var> passed to\n    the constructor of this interface.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Set <var>o</var>’s associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext②⑤\">BaseAudioContext</a></code> to <var>context</var>.</p>"
        },
        {
          "html": "<p>Set its value for <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionode-numberofinputs\" id=\"ref-for-dom-audionode-numberofinputs①\">numberOfInputs</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionode-numberofoutputs\" id=\"ref-for-dom-audionode-numberofoutputs①\">numberOfOutputs</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionode-channelcount\" id=\"ref-for-dom-audionode-channelcount③\">channelCount</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionode-channelcountmode\" id=\"ref-for-dom-audionode-channelcountmode①\">channelCountMode</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionode-channelinterpretation\" id=\"ref-for-dom-audionode-channelinterpretation①\">channelInterpretation</a></code> to the\ndefault value for this\nspecific interface outlined in the section for each <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode⑥⓪\">AudioNode</a></code>.</p>"
        },
        {
          "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"audionode-constructor-init\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Initializing</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> an object <var>o</var> that inherits from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode⑤⑨\">AudioNode</a></code> means executing the following\n    steps, given the arguments <var>context</var> and <var>dict</var> passed to\n    the constructor of this interface.",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <var>k</var> is the name of an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam⑥\">AudioParam</a></code> on this\ninterface, set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparam-value\" id=\"ref-for-dom-audioparam-value\">value</a></code> attribute of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam⑦\">AudioParam</a></code> to <var>v</var>.</p>"
            },
            {
              "html": "<p>Else if <var>k</var> is the name of an attribute on this\ninterface, set the object associated with this attribute to <var>v</var>.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "cancel and hold",
      "html": "Let <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-27-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>t</mi><mi>c</mi></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-195\" style=\"width: 0.792em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.731em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.399em, 1000.73em, 2.552em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-196\"><span class=\"msubsup\" id=\"MathJax-Span-197\"><span style=\"display: inline-block; position: relative; width: 0.731em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-198\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mi\" id=\"MathJax-Span-199\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">c</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.247em; border-left: 0px solid; width: 0px; height: 0.941em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>t</mi><mi>c</mi></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-27\">t_c</script> be the value of <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparam-cancelandholdattime-canceltime\" id=\"ref-for-dom-audioparam-cancelandholdattime-canceltime③\">cancelTime</a></code>. Then",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-28-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>E</mi><mn>1</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-200\" style=\"width: 1.217em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1001.16em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-201\"><span class=\"msubsup\" id=\"MathJax-Span-202\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.158em, 1000.79em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-203\" style=\"font-family: MathJax_Math-italic;\">E<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.731em;\"><span class=\"mn\" id=\"MathJax-Span-204\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">1</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 1.003em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>E</mi><mn>1</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-28\">E_1</script> be the event (if any) at time <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-29-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>t</mi><mn>1</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-205\" style=\"width: 0.853em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.399em, 1000.79em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-206\"><span class=\"msubsup\" id=\"MathJax-Span-207\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-208\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mn\" id=\"MathJax-Span-209\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">1</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 0.941em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>t</mi><mn>1</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-29\">t_1</script> where\n<span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-30-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>t</mi><mn>1</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-210\" style=\"width: 0.853em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.399em, 1000.79em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-211\"><span class=\"msubsup\" id=\"MathJax-Span-212\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-213\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mn\" id=\"MathJax-Span-214\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">1</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 0.941em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>t</mi><mn>1</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-30\">t_1</script> is the largest number satisfying <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-31-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>t</mi><mn>1</mn></msub><mo>&amp;#x2264;</mo><msub><mi>t</mi><mi>c</mi></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-215\" style=\"width: 3.037em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 2.916em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.399em, 1002.92em, 2.552em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-216\"><span class=\"msubsup\" id=\"MathJax-Span-217\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-218\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mn\" id=\"MathJax-Span-219\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">1</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-220\" style=\"font-family: MathJax_Main; padding-left: 0.306em;\">≤</span><span class=\"msubsup\" id=\"MathJax-Span-221\" style=\"padding-left: 0.306em;\"><span style=\"display: inline-block; position: relative; width: 0.731em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-222\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mi\" id=\"MathJax-Span-223\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">c</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.247em; border-left: 0px solid; width: 0px; height: 0.941em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>t</mi><mn>1</mn></msub><mo>≤</mo><msub><mi>t</mi><mi>c</mi></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-31\">t_1 \\le t_c</script>.</p>"
        },
        {
          "html": "<p>Let <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-32-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>E</mi><mn>2</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-224\" style=\"width: 1.217em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1001.16em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-225\"><span class=\"msubsup\" id=\"MathJax-Span-226\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.158em, 1000.79em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-227\" style=\"font-family: MathJax_Math-italic;\">E<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.731em;\"><span class=\"mn\" id=\"MathJax-Span-228\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">2</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 1.003em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>E</mi><mn>2</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-32\">E_2</script> be the event (if any) at time <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-33-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>t</mi><mn>2</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-229\" style=\"width: 0.853em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.399em, 1000.79em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-230\"><span class=\"msubsup\" id=\"MathJax-Span-231\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-232\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mn\" id=\"MathJax-Span-233\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">2</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 0.941em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>t</mi><mn>2</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-33\">t_2</script> where\n<span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-34-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>t</mi><mn>2</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-234\" style=\"width: 0.853em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.399em, 1000.79em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-235\"><span class=\"msubsup\" id=\"MathJax-Span-236\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-237\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mn\" id=\"MathJax-Span-238\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">2</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 0.941em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>t</mi><mn>2</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-34\">t_2</script> is the smallest number satisfying <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-35-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>t</mi><mi>c</mi></msub><mo>&amp;#x003C;</mo><msub><mi>t</mi><mn>2</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-239\" style=\"width: 3.037em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 2.916em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.399em, 1002.92em, 2.552em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-240\"><span class=\"msubsup\" id=\"MathJax-Span-241\"><span style=\"display: inline-block; position: relative; width: 0.731em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-242\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mi\" id=\"MathJax-Span-243\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">c</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-244\" style=\"font-family: MathJax_Main; padding-left: 0.306em;\">&lt;</span><span class=\"msubsup\" id=\"MathJax-Span-245\" style=\"padding-left: 0.306em;\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-246\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mn\" id=\"MathJax-Span-247\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">2</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.247em; border-left: 0px solid; width: 0px; height: 0.941em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>t</mi><mi>c</mi></msub><mo>&lt;</mo><msub><mi>t</mi><mn>2</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-35\">t_c \\lt t_2</script>.</p>"
        },
        {
          "html": "If <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-36-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>E</mi><mn>2</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-248\" style=\"width: 1.217em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1001.16em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-249\"><span class=\"msubsup\" id=\"MathJax-Span-250\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.158em, 1000.79em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-251\" style=\"font-family: MathJax_Math-italic;\">E<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.731em;\"><span class=\"mn\" id=\"MathJax-Span-252\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">2</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 1.003em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>E</mi><mn>2</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-36\">E_2</script> exists:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-37-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>E</mi><mn>2</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-253\" style=\"width: 1.217em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1001.16em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-254\"><span class=\"msubsup\" id=\"MathJax-Span-255\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.158em, 1000.79em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-256\" style=\"font-family: MathJax_Math-italic;\">E<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.731em;\"><span class=\"mn\" id=\"MathJax-Span-257\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">2</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 1.003em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>E</mi><mn>2</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-37\">E_2</script> is a linear or exponential ramp,</p>",
              "ignored": [
                "Effectively rewrite E2E2E_2 to be the same kind of ramp ending at time tctct_c with an end value that would be the value of the original ramp at time tctct_c. Go to step 5."
              ]
            },
            {
              "html": "<p>Otherwise, go to step 4.</p>"
            }
          ]
        },
        {
          "html": "If <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-41-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>E</mi><mn>1</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-273\" style=\"width: 1.217em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1001.16em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-274\"><span class=\"msubsup\" id=\"MathJax-Span-275\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.158em, 1000.79em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-276\" style=\"font-family: MathJax_Math-italic;\">E<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.731em;\"><span class=\"mn\" id=\"MathJax-Span-277\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">1</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 1.003em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>E</mi><mn>1</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-41\">E_1</script> exists:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-42-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>E</mi><mn>1</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-278\" style=\"width: 1.217em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1001.16em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-279\"><span class=\"msubsup\" id=\"MathJax-Span-280\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.158em, 1000.79em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-281\" style=\"font-family: MathJax_Math-italic;\">E<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.731em;\"><span class=\"mn\" id=\"MathJax-Span-282\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">1</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 1.003em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>E</mi><mn>1</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-42\">E_1</script> is a <code>setTarget</code> event,</p>",
              "ignored": [
                "Implicitly insert a setValueAtTime event at time tctct_c with the value that the setTarget would have at time tctct_c. Go to step 5."
              ]
            },
            {
              "html": "If <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-45-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>E</mi><mn>1</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-293\" style=\"width: 1.217em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1001.16em, 2.491em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-294\"><span class=\"msubsup\" id=\"MathJax-Span-295\"><span style=\"display: inline-block; position: relative; width: 1.156em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.158em, 1000.79em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-296\" style=\"font-family: MathJax_Math-italic;\">E<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.731em;\"><span class=\"mn\" id=\"MathJax-Span-297\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">1</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.184em; border-left: 0px solid; width: 0px; height: 1.003em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>E</mi><mn>1</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-45\">E_1</script> is a <code>setValueCurve</code> with a start\ntime of <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-46-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>t</mi><mn>3</mn></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-298\" style=\"width: 0.853em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.399em, 1000.79em, 2.552em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-299\"><span class=\"msubsup\" id=\"MathJax-Span-300\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-301\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mn\" id=\"MathJax-Span-302\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">3</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.247em; border-left: 0px solid; width: 0px; height: 0.941em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>t</mi><mn>3</mn></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-46\">t_3</script> and a duration of <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-47-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>d</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-303\" style=\"width: 0.61em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.549em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1000.55em, 2.37em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-304\"><span class=\"mi\" id=\"MathJax-Span-305\" style=\"font-family: MathJax_Math-italic;\">d<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.059em; border-left: 0px solid; width: 0px; height: 0.878em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>d</mi></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-47\">d</script>",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p>If <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-48-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>t</mi><mi>c</mi></msub><mo>&amp;#x003E;</mo><msub><mi>t</mi><mn>3</mn></msub><mo>+</mo><mi>d</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-306\" style=\"width: 4.918em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 4.736em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1004.74em, 2.552em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-307\"><span class=\"msubsup\" id=\"MathJax-Span-308\"><span style=\"display: inline-block; position: relative; width: 0.731em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-309\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mi\" id=\"MathJax-Span-310\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">c</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-311\" style=\"font-family: MathJax_Main; padding-left: 0.306em;\">&gt;</span><span class=\"msubsup\" id=\"MathJax-Span-312\" style=\"padding-left: 0.306em;\"><span style=\"display: inline-block; position: relative; width: 0.792em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-313\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mn\" id=\"MathJax-Span-314\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">3</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-315\" style=\"font-family: MathJax_Main; padding-left: 0.246em;\">+</span><span class=\"mi\" id=\"MathJax-Span-316\" style=\"font-family: MathJax_Math-italic; padding-left: 0.246em;\">d<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.247em; border-left: 0px solid; width: 0px; height: 1.003em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>t</mi><mi>c</mi></msub><mo>&gt;</mo><msub><mi>t</mi><mn>3</mn></msub><mo>+</mo><mi>d</mi></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-48\">t_c \\gt t_3 + d</script>, go to step 5.</p>"
                },
                {
                  "html": "<p>Otherwise,</p>",
                  "ignored": [
                    "Effectively replace this event with a setValueCurve event with a start time of t3t3t_3 and a new duration of tc−t3tc−t3t_c-t_3. However, this is not a true replacement; this automation MUST take care to produce the same output as the original, and not one computed using a different duration. (That would cause sampling of the value curve in a slightly different way, producing different results.) Go to step 5."
                  ]
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Remove all events with time greater than <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-51-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>t</mi><mi>c</mi></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-331\" style=\"width: 0.792em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.731em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.399em, 1000.73em, 2.552em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-332\"><span class=\"msubsup\" id=\"MathJax-Span-333\"><span style=\"display: inline-block; position: relative; width: 0.731em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.219em, 1000.31em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-334\" style=\"font-family: MathJax_Math-italic;\">t</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.367em;\"><span class=\"mi\" id=\"MathJax-Span-335\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">c</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.247em; border-left: 0px solid; width: 0px; height: 0.941em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>t</mi><mi>c</mi></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-51\">t_c</script>.</p>"
        }
      ]
    },
    {
      "name": "computation-of-value",
      "html": "These values MUST be computed as follows:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><var>paramIntrinsicValue</var> will be calculated at\neach time, which is either the value set directly to\nthe <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparam-value\" id=\"ref-for-dom-audioparam-value④\">value</a></code> attribute, or, if there are\nany <a href=\"https://webaudio.github.io/web-audio-api/#dfn-automation-event\" id=\"ref-for-dfn-automation-event①\">automation\nevents</a> with times before or at this time, the\nvalue as calculated from these events.  If automation\nevents are removed from a given time range, then the <var>paramIntrinsicValue</var> value will remain\nunchanged and stay at its previous value until either\nthe <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparam-value\" id=\"ref-for-dom-audioparam-value⑤\">value</a></code> attribute is directly set, or\nautomation events are added for the time range.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparam-current-value-slot\" id=\"ref-for-dom-audioparam-current-value-slot④\">[[current value]]</a></code> to the value of <var>paramIntrinsicValue</var> at the beginning of\nthis <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#render-quantum\" id=\"ref-for-render-quantum①②\">render quantum</a>.</p>"
        },
        {
          "html": "<p><var>paramComputedValue</var> is the sum of the <var>paramIntrinsicValue</var> value and the value of the <a href=\"https://webaudio.github.io/web-audio-api/#input-audioparam-buffer\" id=\"ref-for-input-audioparam-buffer\">input\nAudioParam buffer</a>.  If the sum is <code>NaN</code>, replace the sum with the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparam-defaultvalue\" id=\"ref-for-dom-audioparam-defaultvalue②\">defaultValue</a></code>.</p>"
        },
        {
          "html": "<p>If this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam⑦②\">AudioParam</a></code> is a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#compound-parameter\" id=\"ref-for-compound-parameter①\">compound parameter</a>,\ncompute its final value with other <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam⑦③\">AudioParam</a></code>s.</p>"
        },
        {
          "html": "<p>Set <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#computedvalue\" id=\"ref-for-computedvalue\">computedValue</a> to <var>paramComputedValue</var>.</p>"
        }
      ]
    },
    {
      "name": "AudioScheduledSourceNode.start()",
      "html": "<span class=\"synchronous\">When this method is called, execute\n    these steps:</span>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><span class=\"synchronous\">If this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioScheduledSourceNode\" id=\"ref-for-AudioScheduledSourceNode⑨\">AudioScheduledSourceNode</a></code> internal\nslot <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioscheduledsourcenode-source-started-slot\" id=\"ref-for-dom-audioscheduledsourcenode-source-started-slot\">[[source started]]</a></code> is true, an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑧\">InvalidStateError</a></code> exception MUST be thrown.</span></p>"
        },
        {
          "html": "<p>Check for any errors that must be thrown due to parameter\nconstraints described below. If any exception is thrown during this\nstep, abort those steps.</p>"
        },
        {
          "html": "<p>Set the internal slot <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioscheduledsourcenode-source-started-slot\" id=\"ref-for-dom-audioscheduledsourcenode-source-started-slot①\">[[source started]]</a></code> on\nthis <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioScheduledSourceNode\" id=\"ref-for-AudioScheduledSourceNode①⓪\">AudioScheduledSourceNode</a></code> to <code>true</code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing⑥\">Queue a control message</a> to start the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioScheduledSourceNode\" id=\"ref-for-AudioScheduledSourceNode①①\">AudioScheduledSourceNode</a></code>, including the parameter\nvalues in the message.</p>"
        },
        {
          "html": "<p>Send a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message①①\">control message</a> to the associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①①③\">AudioContext</a></code> to <a href=\"https://webaudio.github.io/web-audio-api/#context-resume\">start running its rendering thread</a> only when\nall the following conditions are met:</p>",
          "ignored": [
            "The context’s [[control thread state]] is \"suspended\". The context is allowed to start. [[suspended by user]] flag is false."
          ]
        }
      ]
    },
    {
      "name": "AudioScheduledSourceNode.stop()",
      "html": "<span class=\"synchronous\">When this method is called, execute these steps:</span>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><span class=\"synchronous\">If this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioScheduledSourceNode\" id=\"ref-for-AudioScheduledSourceNode①③\">AudioScheduledSourceNode</a></code> internal\nslot <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioscheduledsourcenode-source-started-slot\" id=\"ref-for-dom-audioscheduledsourcenode-source-started-slot②\">[[source started]]</a></code> is not <code>true</code>,\nan <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror②⑨\">InvalidStateError</a></code> exception MUST be thrown.</span></p>"
        },
        {
          "html": "<p>Check for any errors that must be thrown due to parameter\nconstraints described below.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing⑦\">Queue a control message</a> to stop the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioScheduledSourceNode\" id=\"ref-for-AudioScheduledSourceNode①④\">AudioScheduledSourceNode</a></code>, including the parameter\nvalues in the message.</p>"
        }
      ]
    },
    {
      "name": "compute-frequency-data",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Compute the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#current-time-domain-data\" id=\"ref-for-current-time-domain-data⑥\">current time-domain data</a>.</p>"
        },
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#blackman-window\" id=\"ref-for-blackman-window\">Apply a Blackman window</a> to the time domain input data.</p>"
        },
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#fourier-transform\" id=\"ref-for-fourier-transform\">Apply a Fourier transform</a> to the\nwindowed time domain input data to get real and imaginary\nfrequency data.</p>"
        },
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#smoothing-over-time\" id=\"ref-for-smoothing-over-time①\">Smooth over time</a> the frequency domain data.</p>"
        },
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#conversion-to-db\" id=\"ref-for-conversion-to-db\">Convert to dB</a>.</p>"
        }
      ]
    },
    {
      "name": "set the buffer attribute",
      "html": "To set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffersourcenode-buffer\" id=\"ref-for-dom-audiobuffersourcenode-buffer⑦\">buffer</a></code> attribute, execute these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>new buffer</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer⑤⑥\">AudioBuffer</a></code> or <code>null</code> value to be assigned to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffersourcenode-buffer\" id=\"ref-for-dom-audiobuffersourcenode-buffer⑧\">buffer</a></code>.</p>"
        },
        {
          "html": "<p>If <var>new buffer</var> is not <code>null</code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffersourcenode-buffer-set-slot\" id=\"ref-for-dom-audiobuffersourcenode-buffer-set-slot\">[[buffer set]]</a></code> is true, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③⓪\">InvalidStateError</a></code> and abort these steps.</p>"
        },
        {
          "html": "<p>If <var>new buffer</var> is not <code>null</code>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffersourcenode-buffer-set-slot\" id=\"ref-for-dom-audiobuffersourcenode-buffer-set-slot①\">[[buffer set]]</a></code> to true.</p>"
        },
        {
          "html": "<p>Assign <var>new buffer</var> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffersourcenode-buffer\" id=\"ref-for-dom-audiobuffersourcenode-buffer⑨\">buffer</a></code> attribute.</p>"
        },
        {
          "html": "<p>If <code>start()</code> has previously been called on this\nnode, perform the operation <a href=\"https://webaudio.github.io/web-audio-api/#acquire-the-content\" id=\"ref-for-acquire-the-content⑨\">acquire the content</a> on <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffersourcenode-buffer\" id=\"ref-for-dom-audiobuffersourcenode-buffer①⓪\">buffer</a></code>.</p>"
        }
      ]
    },
    {
      "name": "AudioBufferSourceNode.start()",
      "html": "<span class=\"synchronous\">When this method is called, execute these steps:</span>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p><span class=\"synchronous\">If this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBufferSourceNode\" id=\"ref-for-AudioBufferSourceNode①⑦\">AudioBufferSourceNode</a></code> internal\nslot <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioscheduledsourcenode-source-started-slot\" id=\"ref-for-dom-audioscheduledsourcenode-source-started-slot③\">[[source started]]</a></code> is <code>true</code>, an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③①\">InvalidStateError</a></code> exception MUST be thrown.</span></p>"
        },
        {
          "html": "<p>Check for any errors that must be thrown due to parameter\nconstraints described below.  If any\nexception is thrown during this step,\nabort those steps.</p>"
        },
        {
          "html": "<p>Set the internal slot <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioscheduledsourcenode-source-started-slot\" id=\"ref-for-dom-audioscheduledsourcenode-source-started-slot④\">[[source started]]</a></code> on\nthis <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBufferSourceNode\" id=\"ref-for-AudioBufferSourceNode①⑧\">AudioBufferSourceNode</a></code> to <code>true</code>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing⑧\">Queue a control message</a> to start the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBufferSourceNode\" id=\"ref-for-AudioBufferSourceNode①⑨\">AudioBufferSourceNode</a></code>, including the parameter values\nin the message.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#acquire-the-content\" id=\"ref-for-acquire-the-content②\">Acquire the contents</a> of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffersourcenode-buffer\" id=\"ref-for-dom-audiobuffersourcenode-buffer①①\">buffer</a></code> if the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffersourcenode-buffer\" id=\"ref-for-dom-audiobuffersourcenode-buffer①②\">buffer</a></code> has been set.</p>"
        },
        {
          "html": "<p>Send a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message①③\">control message</a> to the associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①①⑦\">AudioContext</a></code> to <a href=\"https://webaudio.github.io/web-audio-api/#context-resume\">start running its rendering thread</a> only when\nall the following conditions are met:</p>",
          "ignored": [
            "The context’s [[control thread state]] is suspended. The context is allowed to start. [[suspended by user]] flag is false."
          ]
        }
      ]
    },
    {
      "name": "ConvolverNode/ConvolverNode(context, options)",
      "href": "https://webaudio.github.io/web-audio-api/#dom-convolvernode-convolvernode",
      "html": "When the constructor is called with a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext⑤⑨\">BaseAudioContext</a></code> <var>context</var> and\nan option object <var>options</var>, execute these steps:",
      "rationale": "set",
      "steps": [
        {
          "html": "<p>Set the attributes <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-convolvernode-normalize\" id=\"ref-for-dom-convolvernode-normalize①\">normalize</a></code> to the inverse of the\nvalue of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-convolveroptions-disablenormalization\" id=\"ref-for-dom-convolveroptions-disablenormalization\">disableNormalization</a></code>.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-convolvernode-buffer\" id=\"ref-for-dom-convolvernode-buffer③\">buffer</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists\">exists</a>, set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-convolvernode-buffer\" id=\"ref-for-dom-convolvernode-buffer④\">buffer</a></code> attribute to its value.</p>"
        },
        {
          "html": "<p>Let <var>o</var> be new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNodeOptions\" id=\"ref-for-AudioNodeOptions⑦\">AudioNodeOptions</a></code> dictionary.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionodeoptions-channelcount\" id=\"ref-for-dom-audionodeoptions-channelcount①\">channelCount</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists①\">exists</a> in <var>options</var>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionodeoptions-channelcount\" id=\"ref-for-dom-audionodeoptions-channelcount②\">channelCount</a></code> on <var>o</var> with the same value.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionodeoptions-channelcountmode\" id=\"ref-for-dom-audionodeoptions-channelcountmode①\">channelCountMode</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists②\">exists</a> in <var>options</var>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionodeoptions-channelcountmode\" id=\"ref-for-dom-audionodeoptions-channelcountmode②\">channelCountMode</a></code> on <var>o</var> with the same value.</p>"
        },
        {
          "html": "<p>If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionodeoptions-channelinterpretation\" id=\"ref-for-dom-audionodeoptions-channelinterpretation①\">channelInterpretation</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists③\">exists</a> in <var>options</var>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionodeoptions-channelinterpretation\" id=\"ref-for-dom-audionodeoptions-channelinterpretation②\">channelInterpretation</a></code> on <var>o</var> with the same value.</p>"
        },
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#audionode-constructor-init\" id=\"ref-for-audionode-constructor-init⑥\">Initialize the AudioNode</a> <var>this</var>, with <var>c</var> and <var>o</var> as argument.</p>"
        }
      ]
    },
    {
      "name": "set convolver buffer",
      "href": "https://webaudio.github.io/web-audio-api/#dom-convolvernode-buffer-attribute",
      "html": "When setting the <dfn class=\"idl-code\" data-dfn-for=\"ConvolverNode\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-convolvernode-buffer-attribute\"><code>buffer attribute</code><a class=\"self-link\" href=\"https://webaudio.github.io/web-audio-api/#dom-convolvernode-buffer-attribute\"></a></dfn>, execute the following <span class=\"synchronously\">steps synchronously</span>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If the buffer <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-numberofchannels\" id=\"ref-for-dom-audiobuffer-numberofchannels①\">number of channels</a></code> is not 1, 2, 4, or if the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiobuffer-samplerate\" id=\"ref-for-dom-audiobuffer-samplerate①\">sample-rate</a></code> of the buffer is not the same as the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-samplerate\" id=\"ref-for-dom-baseaudiocontext-samplerate⑦\">sample-rate</a></code> of its <a href=\"https://webaudio.github.io/web-audio-api/#associated\" id=\"ref-for-associated⑧\">associated</a> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext⑥②\">BaseAudioContext</a></code>, a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror②⑦\">NotSupportedError</a></code> MUST be thrown.</p>"
        },
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#acquire-the-content\" id=\"ref-for-acquire-the-content①⓪\">Acquire the content</a> of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioBuffer\" id=\"ref-for-AudioBuffer⑦①\">AudioBuffer</a></code>.</p>"
        }
      ]
    },
    {
      "name": "reduction-gain",
      "html": "The following algorithm allow determining a value for <var>reduction gain</var>, for each sample of input, for a render\n    quantum of audio.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>attack</var> and <var>release</var> have the values of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-attack\" id=\"ref-for-dom-dynamicscompressornode-attack③\">attack</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-release\" id=\"ref-for-dom-dynamicscompressornode-release③\">release</a></code>, respectively, sampled at the time of\nprocessing (those are <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#k-rate\" id=\"ref-for-k-rate②\">k-rate</a> parameters), mutiplied by the\nsample-rate of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext⑦②\">BaseAudioContext</a></code> this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#DynamicsCompressorNode\" id=\"ref-for-DynamicsCompressorNode①⑨\">DynamicsCompressorNode</a></code> is <a href=\"https://webaudio.github.io/web-audio-api/#associated\" id=\"ref-for-associated①①\">associated</a> with.</p>"
        },
        {
          "html": "<p>Let <var>detector average</var> be the value of the slot <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-detector-average-slot\" id=\"ref-for-dom-dynamicscompressornode-detector-average-slot\">[[detector average]]</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>compressor gain</var> be the value of the slot <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-compressor-gain-slot\" id=\"ref-for-dom-dynamicscompressornode-compressor-gain-slot\">[[compressor gain]]</a></code>.</p>"
        },
        {
          "html": "For each sample <var>input</var> of the render quantum to be\nprocessed, execute the following steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the absolute value of <var>input</var> is less than\n0.0001, let <var>attenuation</var> be 1.0. Else, let <var>shaped input</var> be the value of applying the <a href=\"https://webaudio.github.io/web-audio-api/#compression-curve\" id=\"ref-for-compression-curve\">compression curve</a> to the absolute\nvalue of <var>input</var>. Let <var>attenuation</var> be <var>shaped input</var> divided by the absolute value of <var>input</var>.</p>"
            },
            {
              "html": "<p>Let <var>releasing</var> be <code>true</code> if <var>attenuation</var> is greater than <var>compressor\ngain</var>, <code>false</code> otherwise.</p>"
            },
            {
              "html": "<p>Let <var>detector rate</var> be the result of applying the <a href=\"https://webaudio.github.io/web-audio-api/#detector-curve\" id=\"ref-for-detector-curve\">detector curve</a> to <var>attenuation</var>.</p>"
            },
            {
              "html": "<p>Subtract <var>detector average</var> from <var>attenuation</var>, and multiply the result by <var>detector rate</var>. Add this new result to <var>detector average</var>.</p>"
            },
            {
              "html": "<p>Clamp <var>detector average</var> to a maximum of 1.0.</p>"
            },
            {
              "html": "<p>Let <var>envelope rate</var> be the result of <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#computing-the-envelope-rate\" id=\"ref-for-computing-the-envelope-rate\">computing the envelope rate</a> based on values of <var>attack</var> and <var>release</var>.</p>"
            },
            {
              "html": "<p>If <var>releasing</var> is <code>true</code>, set <var>compressor gain</var> to be the product of <var>compressor gain</var> and <var>envelope rate</var>, clamped\nto a maximum of 1.0.</p>"
            },
            {
              "html": "<p>Else, if <var>releasing</var> is <code>false</code>, let <var>gain increment</var> to be <var>detector average</var> minus <var>compressor gain</var>. Multiply <var>gain\nincrement</var> by <var>envelope rate</var>, and add the result\nto <var>compressor gain</var>.</p>"
            },
            {
              "html": "<p>Compute <var>reduction gain</var> to be <var>compressor\ngain</var> multiplied by the return value of <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#computing-the-makeup-gain\" id=\"ref-for-computing-the-makeup-gain\">computing the\nmakeup gain</a>.</p>"
            },
            {
              "html": "<p>Compute <var>metering gain</var> to be <var>reduction gain</var>, <a href=\"https://webaudio.github.io/web-audio-api/#linear-to-decibel\" id=\"ref-for-linear-to-decibel\">converted to\ndecibel</a>.</p>"
            }
          ]
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-compressor-gain-slot\" id=\"ref-for-dom-dynamicscompressornode-compressor-gain-slot①\">[[compressor gain]]</a></code> to <var>compressor\ngain</var>.</p>"
        },
        {
          "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-detector-average-slot\" id=\"ref-for-dom-dynamicscompressornode-detector-average-slot①\">[[detector average]]</a></code> to <var>detector\naverage</var>.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#atomically\" id=\"ref-for-atomically①\">Atomically</a> set the internal slot <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-internal-reduction-slot\" id=\"ref-for-dom-dynamicscompressornode-internal-reduction-slot②\">[[internal reduction]]</a></code> to the value of <var>metering gain</var>.</p>"
        }
      ]
    },
    {
      "name": "computing makeup gain",
      "href": "https://webaudio.github.io/web-audio-api/#computing-the-makeup-gain",
      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"computing-the-makeup-gain\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Computing the makeup gain</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means executing the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>full range gain</var> be the value returned by\napplying the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#compression-curve\" id=\"ref-for-compression-curve①\">compression curve</a> to the value 1.0.</p>"
        },
        {
          "html": "<p>Let <var>full range makeup gain</var> be the inverse of <var>full\nrange gain</var>.</p>"
        },
        {
          "html": "<p>Return the result of taking the 0.6 power of <var>full range makeup\ngain</var>.</p>"
        }
      ]
    },
    {
      "name": "apply decompression",
      "href": "https://webaudio.github.io/web-audio-api/#compression-curve",
      "html": "Applying a <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"compression-curve\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">compression curve</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> to a value means computing\n    the value of this sample when passed to a function, and returning\n    the computed value. This function MUST respect the following\n    characteristics:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>threshold</var> and <var>knee</var> have the\nvalues of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-threshold\" id=\"ref-for-dom-dynamicscompressornode-threshold③\">threshold</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-knee\" id=\"ref-for-dom-dynamicscompressornode-knee③\">knee</a></code>, respectively, <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#decibels-to-linear-gain-unit\" id=\"ref-for-decibels-to-linear-gain-unit\">converted to linear\nunits</a> and sampled at the time of processing of this\nblock (as <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#k-rate\" id=\"ref-for-k-rate③\">k-rate</a> parameters).</p>"
        },
        {
          "html": "<p>Calculate the sum of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-threshold\" id=\"ref-for-dom-dynamicscompressornode-threshold④\">threshold</a></code> plus <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-knee\" id=\"ref-for-dom-dynamicscompressornode-knee④\">knee</a></code> also sampled at the time\nof processing of this block (as <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#k-rate\" id=\"ref-for-k-rate④\">k-rate</a> parameters).</p>"
        },
        {
          "html": "<p>Let <var>knee end threshold</var> have the value of this\nsum <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#decibels-to-linear-gain-unit\" id=\"ref-for-decibels-to-linear-gain-unit①\">converted to linear\nunits</a>.</p>"
        },
        {
          "html": "<p>Let <var>ratio</var> have the value of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-dynamicscompressornode-ratio\" id=\"ref-for-dom-dynamicscompressornode-ratio③\">ratio</a></code>, sampled at the time\nof processing of this block (as a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#k-rate\" id=\"ref-for-k-rate⑤\">k-rate</a> parameter).</p>"
        },
        {
          "html": "<p>This function is the identity up to the value of the linear <var>threshold</var> (i.e., <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-193-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>f</mi><mo stretchy=&quot;false&quot;>(</mo><mi>x</mi><mo stretchy=&quot;false&quot;>)</mo><mo>=</mo><mi>x</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-2920\" style=\"width: 4.008em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 3.887em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.277em, 1003.83em, 2.612em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-2921\"><span class=\"mi\" id=\"MathJax-Span-2922\" style=\"font-family: MathJax_Math-italic;\">f<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.064em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-2923\" style=\"font-family: MathJax_Main;\">(</span><span class=\"mi\" id=\"MathJax-Span-2924\" style=\"font-family: MathJax_Math-italic;\">x</span><span class=\"mo\" id=\"MathJax-Span-2925\" style=\"font-family: MathJax_Main;\">)</span><span class=\"mo\" id=\"MathJax-Span-2926\" style=\"font-family: MathJax_Main; padding-left: 0.306em;\">=</span><span class=\"mi\" id=\"MathJax-Span-2927\" style=\"font-family: MathJax_Math-italic; padding-left: 0.306em;\">x</span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.309em; border-left: 0px solid; width: 0px; height: 1.128em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>x</mi></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-193\">f(x) = x</script>).</p>"
        },
        {
          "html": "<p>From the <var>threshold</var> up to the <var>knee end threshold</var>, User-Agents can choose the\ncurve shape. The whole function MUST be monotonically\nincreasing and continuous.</p>"
        },
        {
          "html": "<p>This function is linear, based on the <var>ratio</var>, after the <var>threshold</var> and the soft knee (i.e., <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-194-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>f</mi><mo stretchy=&quot;false&quot;>(</mo><mi>x</mi><mo stretchy=&quot;false&quot;>)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi></mrow></mfrac><mo>&amp;#x22C5;</mo><mi>x</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-2928\" style=\"width: 6.738em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 6.556em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.095em, 1006.5em, 2.794em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-2929\"><span class=\"mi\" id=\"MathJax-Span-2930\" style=\"font-family: MathJax_Math-italic;\">f<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.064em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-2931\" style=\"font-family: MathJax_Main;\">(</span><span class=\"mi\" id=\"MathJax-Span-2932\" style=\"font-family: MathJax_Math-italic;\">x</span><span class=\"mo\" id=\"MathJax-Span-2933\" style=\"font-family: MathJax_Main;\">)</span><span class=\"mo\" id=\"MathJax-Span-2934\" style=\"font-family: MathJax_Main; padding-left: 0.306em;\">=</span><span class=\"mfrac\" id=\"MathJax-Span-2935\" style=\"padding-left: 0.306em;\"><span style=\"display: inline-block; position: relative; width: 1.641em; height: 0px; margin-right: 0.124em; margin-left: 0.124em;\"><span style=\"position: absolute; clip: rect(3.34em, 1000.31em, 4.19em, -999.997em); top: -4.427em; left: 50%; margin-left: -0.179em;\"><span class=\"mn\" id=\"MathJax-Span-2936\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">1</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; clip: rect(3.34em, 1001.52em, 4.19em, -999.997em); top: -3.638em; left: 50%; margin-left: -0.786em;\"><span class=\"mrow\" id=\"MathJax-Span-2937\"><span class=\"mi\" id=\"MathJax-Span-2938\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">r</span><span class=\"mi\" id=\"MathJax-Span-2939\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">a</span><span class=\"mi\" id=\"MathJax-Span-2940\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">t</span><span class=\"mi\" id=\"MathJax-Span-2941\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">i</span><span class=\"mi\" id=\"MathJax-Span-2942\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">o</span></span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; clip: rect(0.853em, 1001.64em, 1.277em, -999.997em); top: -1.332em; left: 0em;\"><span style=\"display: inline-block; overflow: hidden; vertical-align: 0em; border-top: 1.3px solid; width: 1.641em; height: 0px;\"></span><span style=\"display: inline-block; width: 0px; height: 1.095em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-2943\" style=\"font-family: MathJax_Main; padding-left: 0.246em;\">⋅</span><span class=\"mi\" id=\"MathJax-Span-2944\" style=\"font-family: MathJax_Math-italic; padding-left: 0.246em;\">x</span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.497em; border-left: 0px solid; width: 0px; height: 1.441em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi></mrow></mfrac><mo>⋅</mo><mi>x</mi></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-194\">f(x) =\n\\frac{1}{ratio} \\cdot x </script>).</p>"
        }
      ]
    },
    {
      "name": "convert linear to db",
      "href": "https://webaudio.github.io/web-audio-api/#linear-to-decibel",
      "html": "Converting a value <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-195-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>v</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-2945\" style=\"width: 0.488em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.488em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.581em, 1000.49em, 2.37em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-2946\"><span class=\"mi\" id=\"MathJax-Span-2947\" style=\"font-family: MathJax_Math-italic;\">v</span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.059em; border-left: 0px solid; width: 0px; height: 0.566em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>v</mi></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-195\">v</script> in <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"linear gain unit to decibel\" data-noexport=\"\" id=\"linear-to-decibel\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">linear gain\n    unit to decibel</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means executing the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-196-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>v</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-2948\" style=\"width: 0.488em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.488em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.581em, 1000.49em, 2.37em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-2949\"><span class=\"mi\" id=\"MathJax-Span-2950\" style=\"font-family: MathJax_Math-italic;\">v</span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.059em; border-left: 0px solid; width: 0px; height: 0.566em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>v</mi></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-196\">v</script> is equal to zero, return -1000.</p>"
        },
        {
          "html": "<p>Else, return <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-197-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mn>20</mn><mspace width=&quot;thinmathspace&quot; /><msub><mi>log</mi><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mn>10</mn></mrow></msub><mo>&amp;#x2061;</mo><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mi>v</mi></mrow></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-2951\" style=\"width: 4.251em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 4.129em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1004.13em, 2.612em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-2952\"><span class=\"mn\" id=\"MathJax-Span-2953\" style=\"font-family: MathJax_Main;\">20</span><span class=\"mspace\" id=\"MathJax-Span-2954\" style=\"height: 0em; vertical-align: 0em; width: 0.185em; display: inline-block; overflow: hidden;\"></span><span class=\"msubsup\" id=\"MathJax-Span-2955\" style=\"padding-left: 0.185em;\"><span style=\"display: inline-block; position: relative; width: 2.066em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.158em, 1001.28em, 4.372em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-2956\" style=\"font-family: MathJax_Main;\">log</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.759em; left: 1.277em;\"><span class=\"texatom\" id=\"MathJax-Span-2957\"><span class=\"mrow\" id=\"MathJax-Span-2958\"><span class=\"mn\" id=\"MathJax-Span-2959\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">10</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-2960\"></span><span class=\"texatom\" id=\"MathJax-Span-2961\" style=\"padding-left: 0.185em;\"><span class=\"mrow\" id=\"MathJax-Span-2962\"><span class=\"mi\" id=\"MathJax-Span-2963\" style=\"font-family: MathJax_Math-italic;\">v</span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.309em; border-left: 0px solid; width: 0px; height: 1.128em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>20</mn><mspace width=\"thinmathspace\"></mspace><msub><mi>log</mi><mrow class=\"MJX-TeXAtom-ORD\"><mn>10</mn></mrow></msub><mo>⁡</mo><mrow class=\"MJX-TeXAtom-ORD\"><mi>v</mi></mrow></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-197\"> 20 \\, \\log_{10}{v} </script>.</p>"
        }
      ]
    },
    {
      "name": "MediaElementAudioSourceNode/MediaElementAudioSourceNode(context, options)",
      "href": "https://webaudio.github.io/web-audio-api/#dom-mediaelementaudiosourcenode-mediaelementaudiosourcenode",
      "html": "",
      "rationale": "initialize",
      "steps": [
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#audionode-constructor-init\" id=\"ref-for-audionode-constructor-init①①\">initialize the AudioNode</a> <var>this</var>, with <var>context</var> and <var>options</var> as arguments.</p>"
        }
      ]
    },
    {
      "name": "MediaStreamAudioDestinationNode/MediaStreamAudioDestinationNode(context, options)",
      "href": "https://webaudio.github.io/web-audio-api/#dom-mediastreamaudiodestinationnode-mediastreamaudiodestinationnode",
      "html": "",
      "rationale": "initialize",
      "steps": [
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#audionode-constructor-init\" id=\"ref-for-audionode-constructor-init①②\">Initialize the AudioNode</a> <var>this</var>, with <var>context</var> and <var>options</var> as arguments.</p>"
        }
      ]
    },
    {
      "name": "MediaStreamAudioSourceNode/MediaStreamAudioSourceNode(context, options)",
      "href": "https://webaudio.github.io/web-audio-api/#dom-mediastreamaudiosourcenode-mediastreamaudiosourcenode",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-mediastreamaudiosourceoptions-mediastream\" id=\"ref-for-dom-mediastreamaudiosourceoptions-mediastream\">mediaStream</a></code> member of <code class=\"idl\"><a class=\"idl-code\" data-link-type=\"argument\" href=\"https://webaudio.github.io/web-audio-api/#dom-mediastreamaudiosourcenode-mediastreamaudiosourcenode-context-options-options\" id=\"ref-for-dom-mediastreamaudiosourcenode-mediastreamaudiosourcenode-context-options-options\">options</a></code> does not reference a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/mediacapture-main/#dom-mediastream\" id=\"ref-for-dom-mediastream①④\">MediaStream</a></code> that has at least one <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/mediacapture-main/#dom-mediastreamtrack\" id=\"ref-for-dom-mediastreamtrack①①\">MediaStreamTrack</a></code> whose <code>kind</code> attribute has the value <code>\"audio\"</code>,\nthrow an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③②\">InvalidStateError</a></code> and abort these steps. Else, let\nthis stream be <var>inputStream</var>.</p>"
        },
        {
          "html": "<p>Let <var>tracks</var> be the list of all <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://w3c.github.io/mediacapture-main/#dom-mediastreamtrack\" id=\"ref-for-dom-mediastreamtrack①②\">MediaStreamTrack</a></code>s of <var>inputStream</var> that have a <code>kind</code> of <code>\"audio\"</code>.</p>"
        },
        {
          "html": "<p>Sort the elements in <var>tracks</var> based on their <code>id</code> attribute using an ordering on sequences of <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#code-unit\" id=\"ref-for-code-unit\">code unit</a> values.</p>"
        },
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#audionode-constructor-init\" id=\"ref-for-audionode-constructor-init①③\">Initialize the AudioNode</a> <var>this</var>, with <var>context</var> and <var>options</var> as arguments.</p>"
        },
        {
          "html": "<p>Set an internal slot <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"MediaStreamAudioSourceNode\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-mediastreamaudiosourcenode-input-track-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[input track]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> on this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#MediaStreamAudioSourceNode\" id=\"ref-for-MediaStreamAudioSourceNode⑦\">MediaStreamAudioSourceNode</a></code> to be the first element of <var>tracks</var>.  This is the track used as the input audio for this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#MediaStreamAudioSourceNode\" id=\"ref-for-MediaStreamAudioSourceNode⑧\">MediaStreamAudioSourceNode</a></code>.</p>"
        }
      ]
    },
    {
      "name": "MediaStreamTrackAudioSourceNode/MediaStreamTrackAudioSourceNode(context, options)",
      "href": "https://webaudio.github.io/web-audio-api/#dom-mediastreamtrackaudiosourcenode-mediastreamtrackaudiosourcenode",
      "html": "",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-mediastreamtrackaudiosourceoptions-mediastreamtrack\" id=\"ref-for-dom-mediastreamtrackaudiosourceoptions-mediastreamtrack②\">mediaStreamTrack</a></code>'s <code>kind</code> attribute is not <code>\"audio\"</code>, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③③\">InvalidStateError</a></code> and abort these steps.</p>"
        },
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#audionode-constructor-init\" id=\"ref-for-audionode-constructor-init①④\">Initialize the AudioNode</a> <var>this</var>, with <var>context</var> and <var>options</var> as arguments.</p>"
        }
      ]
    },
    {
      "name": "construct periodic wave",
      "href": "https://webaudio.github.io/web-audio-api/#dom-periodicwave-real-slot",
      "html": "Let <var>p</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWave\" id=\"ref-for-PeriodicWave①⑦\">PeriodicWave</a></code> object. Let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-real-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[real]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> and <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-imag-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[imag]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be two internal slots of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float32Array\" id=\"ref-for-idl-Float32Array③⓪\">Float32Array</a></code>, and let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-normalize-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[normalize]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be an internal slot.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>p</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWave\" id=\"ref-for-PeriodicWave①⑦\">PeriodicWave</a></code> object. Let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-real-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[real]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> and <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-imag-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[imag]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be two internal slots of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float32Array\" id=\"ref-for-idl-Float32Array③⓪\">Float32Array</a></code>, and let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-normalize-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[normalize]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be an internal slot.</p>"
        },
        {
          "html": "Let <var>p</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWave\" id=\"ref-for-PeriodicWave①⑦\">PeriodicWave</a></code> object. Let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-real-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[real]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> and <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-imag-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[imag]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be two internal slots of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float32Array\" id=\"ref-for-idl-Float32Array③⓪\">Float32Array</a></code>, and let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-normalize-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[normalize]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be an internal slot.",
          "rationale": "if",
          "steps": [
            {
              "html": "Let <var>p</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWave\" id=\"ref-for-PeriodicWave①⑦\">PeriodicWave</a></code> object. Let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-real-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[real]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> and <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-imag-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[imag]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be two internal slots of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float32Array\" id=\"ref-for-idl-Float32Array③⓪\">Float32Array</a></code>, and let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-normalize-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[normalize]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be an internal slot.",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p><span class=\"synchronous\">If the lengths of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-real\" id=\"ref-for-dom-periodicwaveoptions-real②\">options.real</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-imag\" id=\"ref-for-dom-periodicwaveoptions-imag②\">options.imag</a></code> are different or if either length is less than 2, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror②③\">IndexSizeError</a></code> and abort this algorithm.</span></p>"
                },
                {
                  "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-real-slot\" id=\"ref-for-dom-periodicwave-real-slot\">[[real]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-imag-slot\" id=\"ref-for-dom-periodicwave-imag-slot\">[[imag]]</a></code> to new arrays with the same length as <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-real\" id=\"ref-for-dom-periodicwaveoptions-real③\">options.real</a></code>.</p>"
                },
                {
                  "html": "<p>Copy all elements from <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-real\" id=\"ref-for-dom-periodicwaveoptions-real④\">options.real</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-real-slot\" id=\"ref-for-dom-periodicwave-real-slot①\">[[real]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-imag\" id=\"ref-for-dom-periodicwaveoptions-imag③\">options.imag</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-imag-slot\" id=\"ref-for-dom-periodicwave-imag-slot①\">[[imag]]</a></code>.</p>"
                }
              ]
            },
            {
              "html": "Let <var>p</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWave\" id=\"ref-for-PeriodicWave①⑦\">PeriodicWave</a></code> object. Let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-real-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[real]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> and <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-imag-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[imag]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be two internal slots of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float32Array\" id=\"ref-for-idl-Float32Array③⓪\">Float32Array</a></code>, and let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-normalize-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[normalize]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be an internal slot.",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p><span class=\"synchronous\">If length of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-real\" id=\"ref-for-dom-periodicwaveoptions-real⑥\">options.real</a></code> is less than 2, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror②④\">IndexSizeError</a></code> and abort this algorithm.</span></p>"
                },
                {
                  "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-real-slot\" id=\"ref-for-dom-periodicwave-real-slot②\">[[real]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-imag-slot\" id=\"ref-for-dom-periodicwave-imag-slot②\">[[imag]]</a></code> to arrays with the same length as <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-real\" id=\"ref-for-dom-periodicwaveoptions-real⑦\">options.real</a></code>.</p>"
                },
                {
                  "html": "<p>Copy <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-real\" id=\"ref-for-dom-periodicwaveoptions-real⑧\">options.real</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-real-slot\" id=\"ref-for-dom-periodicwave-real-slot③\">[[real]]</a></code> and set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-imag-slot\" id=\"ref-for-dom-periodicwave-imag-slot③\">[[imag]]</a></code> to all zeros.</p>"
                }
              ]
            },
            {
              "html": "Let <var>p</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWave\" id=\"ref-for-PeriodicWave①⑦\">PeriodicWave</a></code> object. Let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-real-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[real]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> and <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-imag-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[imag]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be two internal slots of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float32Array\" id=\"ref-for-idl-Float32Array③⓪\">Float32Array</a></code>, and let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-normalize-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[normalize]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be an internal slot.",
              "rationale": "if",
              "steps": [
                {
                  "html": "<p><span class=\"synchronous\">If length of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-imag\" id=\"ref-for-dom-periodicwaveoptions-imag⑤\">options.imag</a></code> is less than 2, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror②⑤\">IndexSizeError</a></code> and abort this algorithm.</span></p>"
                },
                {
                  "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-real-slot\" id=\"ref-for-dom-periodicwave-real-slot④\">[[real]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-imag-slot\" id=\"ref-for-dom-periodicwave-imag-slot④\">[[imag]]</a></code> to arrays with the same length as <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-real\" id=\"ref-for-dom-periodicwaveoptions-real⑨\">options.imag</a></code>.</p>"
                },
                {
                  "html": "<p>Copy <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveoptions-imag\" id=\"ref-for-dom-periodicwaveoptions-imag⑥\">options.imag</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-imag-slot\" id=\"ref-for-dom-periodicwave-imag-slot⑤\">[[imag]]</a></code> and set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-real-slot\" id=\"ref-for-dom-periodicwave-real-slot⑤\">[[real]]</a></code> to all zeros.</p>"
                }
              ]
            },
            {
              "html": "Let <var>p</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWave\" id=\"ref-for-PeriodicWave①⑦\">PeriodicWave</a></code> object. Let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-real-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[real]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> and <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-imag-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[imag]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be two internal slots of type <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float32Array\" id=\"ref-for-idl-Float32Array③⓪\">Float32Array</a></code>, and let <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"PeriodicWave\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-periodicwave-normalize-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[normalize]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> be an internal slot.",
              "rationale": "set",
              "steps": [
                {
                  "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-real-slot\" id=\"ref-for-dom-periodicwave-real-slot⑥\">[[real]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-imag-slot\" id=\"ref-for-dom-periodicwave-imag-slot⑥\">[[imag]]</a></code> to zero-filled arrays of length 2.</p>"
                },
                {
                  "html": "<p>Set element at index 1 of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-imag-slot\" id=\"ref-for-dom-periodicwave-imag-slot⑦\">[[imag]]</a></code> to 1.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Set element at index 0 of both <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-real-slot\" id=\"ref-for-dom-periodicwave-real-slot⑦\">[[real]]</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-imag-slot\" id=\"ref-for-dom-periodicwave-imag-slot⑧\">[[imag]]</a></code> to 0.  (This sets the DC component to 0.)</p>"
        },
        {
          "html": "<p>Initialize <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwave-normalize-slot\" id=\"ref-for-dom-periodicwave-normalize-slot\">[[normalize]]</a></code> to the inverse of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-periodicwaveconstraints-disablenormalization\" id=\"ref-for-dom-periodicwaveconstraints-disablenormalization③\">disableNormalization</a></code> attribute of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWaveConstraints\" id=\"ref-for-PeriodicWaveConstraints②\">PeriodicWaveConstraints</a></code> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#PeriodicWaveOptions\" id=\"ref-for-PeriodicWaveOptions②\">PeriodicWaveOptions</a></code>.</p>"
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    },
    {
      "name": "wave-shaper-curve",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-284-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>x</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-4005\" style=\"width: 0.61em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.549em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.581em, 1000.49em, 2.37em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-4006\"><span class=\"mi\" id=\"MathJax-Span-4007\" style=\"font-family: MathJax_Math-italic;\">x</span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.059em; border-left: 0px solid; width: 0px; height: 0.566em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>x</mi></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-284\">x</script> be the input sample, <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-285-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>y</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-4008\" style=\"width: 0.488em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.488em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.581em, 1000.49em, 2.552em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-4009\"><span class=\"mi\" id=\"MathJax-Span-4010\" style=\"font-family: MathJax_Math-italic;\">y<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.247em; border-left: 0px solid; width: 0px; height: 0.816em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>y</mi></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-285\">y</script> be the\ncorresponding output of the node,\n<span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-286-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><msub><mi>c</mi><mi>k</mi></msub></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-4011\" style=\"width: 0.913em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.853em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.581em, 1000.85em, 2.552em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-4012\"><span class=\"msubsup\" id=\"MathJax-Span-4013\"><span style=\"display: inline-block; position: relative; width: 0.853em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.401em, 1000.43em, 4.19em, -999.997em); top: -4.002em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-4014\" style=\"font-family: MathJax_Math-italic;\">c</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span><span style=\"position: absolute; top: -3.88em; left: 0.428em;\"><span class=\"mi\" id=\"MathJax-Span-4015\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">k</span><span style=\"display: inline-block; width: 0px; height: 4.008em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.247em; border-left: 0px solid; width: 0px; height: 0.753em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><msub><mi>c</mi><mi>k</mi></msub></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-286\">c_k</script> be the <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-287-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>k</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-4016\" style=\"width: 0.61em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.549em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1000.55em, 2.37em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-4017\"><span class=\"mi\" id=\"MathJax-Span-4018\" style=\"font-family: MathJax_Math-italic;\">k</span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.059em; border-left: 0px solid; width: 0px; height: 0.878em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>k</mi></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-287\">k</script>'th element of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-waveshapernode-curve\" id=\"ref-for-dom-waveshapernode-curve③\">curve</a></code>, and <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-288-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>N</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-4019\" style=\"width: 0.913em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 0.853em; height: 0px; font-size: 103%;\"><span style=\"position: absolute; clip: rect(1.338em, 1000.85em, 2.37em, -999.997em); top: -2.181em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-4020\"><span class=\"mi\" id=\"MathJax-Span-4021\" style=\"font-family: MathJax_Math-italic;\">N<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.064em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.187em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.059em; border-left: 0px solid; width: 0px; height: 0.816em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>N</mi></math></span></span><script type=\"math/tex\" id=\"MathJax-Element-288\">N</script> be\nthe length of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-waveshapernode-curve\" id=\"ref-for-dom-waveshapernode-curve④\">curve</a></code>.</p>"
        },
        {
          "html": "<p>Let</p>\n<pre><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><div class=\"MathJax_Display\" style=\"text-align: center;\"><span class=\"MathJax\" id=\"MathJax-Element-289-Frame\" tabindex=\"0\" style=\"text-align: center; position: relative;\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;><mtable columnalign=&quot;right left right left right left right left right left right left&quot; rowspacing=&quot;3pt&quot; columnspacing=&quot;0em 2em 0em 2em 0em 2em 0em 2em 0em 2em 0em&quot; displaystyle=&quot;true&quot;><mtr><mtd><mi>v</mi></mtd><mtd><mi></mi><mo>=</mo><mfrac><mrow><mi>N</mi><mo>&amp;#x2212;</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo stretchy=&quot;false&quot;>(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy=&quot;false&quot;>)</mo></mtd></mtr><mtr><mtd><mi>k</mi></mtd><mtd><mi></mi><mo>=</mo><mo fence=&quot;false&quot; stretchy=&quot;false&quot;>&amp;#x230A;</mo><mi>v</mi><mo fence=&quot;false&quot; stretchy=&quot;false&quot;>&amp;#x230B;</mo></mtd></mtr><mtr><mtd><mi>f</mi></mtd><mtd><mi></mi><mo>=</mo><mi>v</mi><mo>&amp;#x2212;</mo><mi>k</mi></mtd></mtr></mtable></math>\" role=\"presentation\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-4022\" style=\"width: 9.261em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 8.172em; height: 0px; font-size: 113%;\"><span style=\"position: absolute; clip: rect(-0.541em, 1008.1em, 4.564em, -999.997em); top: -2.243em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-4023\"><span class=\"mtable\" id=\"MathJax-Span-4024\"><span style=\"display: inline-block; position: relative; width: 7.9em; height: 0px; margin-right: 0.14em; margin-left: 0.14em;\"><span style=\"position: absolute; clip: rect(2.862em, 1000.55em, 7.083em, -999.997em); top: -4.762em; left: 0em;\"><span style=\"display: inline-block; position: relative; width: 0.548em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.339em, 1000.48em, 4.224em, -999.997em); top: -5.238em; right: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4025\"><span class=\"mrow\" id=\"MathJax-Span-4026\"><span class=\"mi\" id=\"MathJax-Span-4027\" style=\"font-family: MathJax_Math-italic;\">v</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(3.135em, 1000.48em, 4.224em, -999.997em); top: -3.468em; right: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4043\"><span class=\"mrow\" id=\"MathJax-Span-4044\"><span class=\"mi\" id=\"MathJax-Span-4045\" style=\"font-family: MathJax_Math-italic;\">k</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(3.135em, 1000.55em, 4.428em, -999.997em); top: -2.107em; right: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4053\"><span class=\"mrow\" id=\"MathJax-Span-4054\"><span class=\"mi\" id=\"MathJax-Span-4055\" style=\"font-family: MathJax_Math-italic;\">f<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.071em;\"></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.769em;\"></span></span><span style=\"position: absolute; clip: rect(2.794em, 1007.22em, 7.764em, -999.997em); top: -5.579em; left: 0.548em;\"><span style=\"display: inline-block; position: relative; width: 7.287em; height: 0px;\"><span style=\"position: absolute; clip: rect(2.454em, 1007.22em, 4.905em, -999.997em); top: -5.238em; left: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4028\"><span class=\"mrow\" id=\"MathJax-Span-4029\"><span class=\"mi\" id=\"MathJax-Span-4030\"></span><span class=\"mo\" id=\"MathJax-Span-4031\" style=\"font-family: MathJax_Main; padding-left: 0.276em;\">=</span><span class=\"mfrac\" id=\"MathJax-Span-4032\" style=\"padding-left: 0.276em;\"><span style=\"display: inline-block; position: relative; width: 2.726em; height: 0px; margin-right: 0.14em; margin-left: 0.14em;\"><span style=\"position: absolute; clip: rect(3.135em, 1002.52em, 4.292em, -999.997em); top: -4.694em; left: 50%; margin-left: -1.29em;\"><span class=\"mrow\" id=\"MathJax-Span-4033\"><span class=\"mi\" id=\"MathJax-Span-4034\" style=\"font-family: MathJax_Math-italic;\">N<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.071em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-4035\" style=\"font-family: MathJax_Main; padding-left: 0.208em;\">−</span><span class=\"mn\" id=\"MathJax-Span-4036\" style=\"font-family: MathJax_Main; padding-left: 0.208em;\">1</span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(3.135em, 1000.48em, 4.224em, -999.997em); top: -3.332em; left: 50%; margin-left: -0.269em;\"><span class=\"mn\" id=\"MathJax-Span-4037\" style=\"font-family: MathJax_Main;\">2</span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(0.82em, 1002.73em, 1.297em, -999.997em); top: -1.29em; left: 0em;\"><span style=\"display: inline-block; overflow: hidden; vertical-align: 0em; border-top: 1.3px solid; width: 2.726em; height: 0px;\"></span><span style=\"display: inline-block; width: 0px; height: 1.093em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-4038\" style=\"font-family: MathJax_Main;\">(</span><span class=\"mi\" id=\"MathJax-Span-4039\" style=\"font-family: MathJax_Math-italic;\">x</span><span class=\"mo\" id=\"MathJax-Span-4040\" style=\"font-family: MathJax_Main; padding-left: 0.208em;\">+</span><span class=\"mn\" id=\"MathJax-Span-4041\" style=\"font-family: MathJax_Main; padding-left: 0.208em;\">1</span><span class=\"mo\" id=\"MathJax-Span-4042\" style=\"font-family: MathJax_Main;\">)</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(3.067em, 1002.52em, 4.496em, -999.997em); top: -3.468em; left: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4046\"><span class=\"mrow\" id=\"MathJax-Span-4047\"><span class=\"mi\" id=\"MathJax-Span-4048\"></span><span class=\"mo\" id=\"MathJax-Span-4049\" style=\"font-family: MathJax_Main; padding-left: 0.276em;\">=</span><span class=\"mo\" id=\"MathJax-Span-4050\" style=\"font-family: MathJax_Main; padding-left: 0.276em;\">⌊</span><span class=\"mi\" id=\"MathJax-Span-4051\" style=\"font-family: MathJax_Math-italic;\">v</span><span class=\"mo\" id=\"MathJax-Span-4052\" style=\"font-family: MathJax_Main;\">⌋</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(3.135em, 1003.54em, 4.292em, -999.997em); top: -2.107em; left: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4056\"><span class=\"mrow\" id=\"MathJax-Span-4057\"><span class=\"mi\" id=\"MathJax-Span-4058\"></span><span class=\"mo\" id=\"MathJax-Span-4059\" style=\"font-family: MathJax_Main; padding-left: 0.276em;\">=</span><span class=\"mi\" id=\"MathJax-Span-4060\" style=\"font-family: MathJax_Math-italic; padding-left: 0.276em;\">v</span><span class=\"mo\" id=\"MathJax-Span-4061\" style=\"font-family: MathJax_Main; padding-left: 0.208em;\">−</span><span class=\"mi\" id=\"MathJax-Span-4062\" style=\"font-family: MathJax_Math-italic; padding-left: 0.208em;\">k</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 5.585em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.25em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -2.458em; border-left: 0px solid; width: 0px; height: 5.465em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><mtable columnalign=\"right left right left right left right left right left right left\" rowspacing=\"3pt\" columnspacing=\"0em 2em 0em 2em 0em 2em 0em 2em 0em 2em 0em\" displaystyle=\"true\"><mtr><mtd><mi>v</mi></mtd><mtd><mi></mi><mo>=</mo><mfrac><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mtd></mtr><mtr><mtd><mi>k</mi></mtd><mtd><mi></mi><mo>=</mo><mo fence=\"false\" stretchy=\"false\">⌊</mo><mi>v</mi><mo fence=\"false\" stretchy=\"false\">⌋</mo></mtd></mtr><mtr><mtd><mi>f</mi></mtd><mtd><mi></mi><mo>=</mo><mi>v</mi><mo>−</mo><mi>k</mi></mtd></mtr></mtable></math></span></span></div><script type=\"math/tex; mode=display\" id=\"MathJax-Element-289\">\n    \\begin{align*}\n    v &= \\frac{N-1}{2}(x + 1) \\\\\n    k &= \\lfloor v \\rfloor \\\\\n    f &= v - k\n    \\end{align*}\n</script>\n</pre>"
        },
        {
          "html": "<p>Then</p>\n<pre><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><div class=\"MathJax_Display\" style=\"text-align: center;\"><span class=\"MathJax\" id=\"MathJax-Element-290-Frame\" tabindex=\"0\" style=\"text-align: center; position: relative;\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;><mtable columnalign=&quot;right left right left right left right left right left right left&quot; rowspacing=&quot;3pt&quot; columnspacing=&quot;0em 2em 0em 2em 0em 2em 0em 2em 0em 2em 0em&quot; displaystyle=&quot;true&quot;><mtr><mtd><mi>y</mi></mtd><mtd><mi></mi><mo>=</mo><mrow><mo>{</mo><mtable columnalign=&quot;left left&quot; rowspacing=&quot;.2em&quot; columnspacing=&quot;1em&quot; displaystyle=&quot;false&quot;><mtr><mtd><msub><mi>c</mi><mn>0</mn></msub></mtd><mtd><mi>v</mi><mo>&amp;#x003C;</mo><mn>0</mn></mtd></mtr><mtr><mtd><msub><mi>c</mi><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mi>N</mi><mo>&amp;#x2212;</mo><mn>1</mn></mrow></msub></mtd><mtd><mi>v</mi><mo>&amp;#x2265;</mo><mi>N</mi><mo>&amp;#x2212;</mo><mn>1</mn></mtd></mtr><mtr><mtd><mo stretchy=&quot;false&quot;>(</mo><mn>1</mn><mo>&amp;#x2212;</mo><mi>f</mi><mo stretchy=&quot;false&quot;>)</mo><mspace width=&quot;thinmathspace&quot; /><msub><mi>c</mi><mi>k</mi></msub><mo>+</mo><mi>f</mi><msub><mi>c</mi><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub></mtd><mtd><mrow class=&quot;MJX-TeXAtom-ORD&quot;><mi mathvariant=&quot;normal&quot;>o</mi><mi mathvariant=&quot;normal&quot;>t</mi><mi mathvariant=&quot;normal&quot;>h</mi><mi mathvariant=&quot;normal&quot;>e</mi><mi mathvariant=&quot;normal&quot;>r</mi><mi mathvariant=&quot;normal&quot;>w</mi><mi mathvariant=&quot;normal&quot;>i</mi><mi mathvariant=&quot;normal&quot;>s</mi><mi mathvariant=&quot;normal&quot;>e</mi></mrow></mtd></mtr></mtable><mo fence=&quot;true&quot; stretchy=&quot;true&quot; symmetric=&quot;true&quot;></mo></mrow></mtd></mtr></mtable></math>\" role=\"presentation\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-4063\" style=\"width: 18.451em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 16.341em; height: 0px; font-size: 113%;\"><span style=\"position: absolute; clip: rect(0.071em, 1016.34em, 3.952em, -999.997em); top: -2.243em; left: 0em;\"><span class=\"mrow\" id=\"MathJax-Span-4064\"><span class=\"mtable\" id=\"MathJax-Span-4065\"><span style=\"display: inline-block; position: relative; width: 16.069em; height: 0px; margin-right: 0.14em; margin-left: 0.14em;\"><span style=\"position: absolute; clip: rect(3.407em, 1000.48em, 4.428em, -999.997em); top: -4.013em; left: 0em;\"><span style=\"display: inline-block; position: relative; width: 0.48em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.407em, 1000.48em, 4.428em, -999.997em); top: -4.013em; right: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4066\"><span class=\"mrow\" id=\"MathJax-Span-4067\"><span class=\"mi\" id=\"MathJax-Span-4068\" style=\"font-family: MathJax_Math-italic;\">y<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(2.25em, 1015.52em, 6.13em, -999.997em); top: -4.421em; left: 0.48em;\"><span style=\"display: inline-block; position: relative; width: 15.524em; height: 0px;\"><span style=\"position: absolute; clip: rect(2.25em, 1015.52em, 6.13em, -999.997em); top: -4.421em; left: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4069\"><span class=\"mrow\" id=\"MathJax-Span-4070\"><span class=\"mi\" id=\"MathJax-Span-4071\"></span><span class=\"mo\" id=\"MathJax-Span-4072\" style=\"font-family: MathJax_Main; padding-left: 0.276em;\">=</span><span class=\"mrow\" id=\"MathJax-Span-4073\" style=\"padding-left: 0.276em;\"><span class=\"mo\" id=\"MathJax-Span-4074\" style=\"vertical-align: 1.978em;\"><span style=\"display: inline-block; position: relative; width: 0.888em; height: 0px;\"><span style=\"position: absolute; font-family: MathJax_Size4; top: -3.128em; left: 0em;\">⎧<span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; font-family: MathJax_Size4; top: -1.426em; left: 0em;\">⎩<span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; font-family: MathJax_Size4; top: -2.039em; left: 0em;\">⎨<span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span></span></span><span class=\"mtable\" id=\"MathJax-Span-4075\"><span style=\"display: inline-block; position: relative; width: 13.005em; height: 0px; margin-right: 0.14em; margin-left: 0.14em;\"><span style=\"position: absolute; clip: rect(2.25em, 1007.56em, 5.79em, -999.997em); top: -4.081em; left: 0em;\"><span style=\"display: inline-block; position: relative; width: 7.56em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.407em, 1000.89em, 4.36em, -999.997em); top: -5.17em; left: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4076\"><span class=\"mrow\" id=\"MathJax-Span-4077\"><span class=\"msubsup\" id=\"MathJax-Span-4078\"><span style=\"display: inline-block; position: relative; width: 0.888em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.407em, 1000.41em, 4.224em, -999.997em); top: -4.013em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-4079\" style=\"font-family: MathJax_Math-italic;\">c</span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; top: -3.877em; left: 0.412em;\"><span class=\"mn\" id=\"MathJax-Span-4080\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">0</span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(3.407em, 1002.05em, 4.428em, -999.997em); top: -4.013em; left: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4086\"><span class=\"mrow\" id=\"MathJax-Span-4087\"><span class=\"msubsup\" id=\"MathJax-Span-4088\"><span style=\"display: inline-block; position: relative; width: 2.046em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.407em, 1000.41em, 4.224em, -999.997em); top: -4.013em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-4089\" style=\"font-family: MathJax_Math-italic;\">c</span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; top: -3.877em; left: 0.412em;\"><span class=\"texatom\" id=\"MathJax-Span-4090\"><span class=\"mrow\" id=\"MathJax-Span-4091\"><span class=\"mi\" id=\"MathJax-Span-4092\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">N<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.071em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-4093\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">−</span><span class=\"mn\" id=\"MathJax-Span-4094\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">1</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(3.067em, 1007.56em, 4.496em, -999.997em); top: -2.788em; left: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4102\"><span class=\"mrow\" id=\"MathJax-Span-4103\"><span class=\"mo\" id=\"MathJax-Span-4104\" style=\"font-family: MathJax_Main;\">(</span><span class=\"mn\" id=\"MathJax-Span-4105\" style=\"font-family: MathJax_Main;\">1</span><span class=\"mo\" id=\"MathJax-Span-4106\" style=\"font-family: MathJax_Main; padding-left: 0.208em;\">−</span><span class=\"mi\" id=\"MathJax-Span-4107\" style=\"font-family: MathJax_Math-italic; padding-left: 0.208em;\">f<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.071em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-4108\" style=\"font-family: MathJax_Main;\">)</span><span class=\"mspace\" id=\"MathJax-Span-4109\" style=\"height: 0em; vertical-align: 0em; width: 0.14em; display: inline-block; overflow: hidden;\"></span><span class=\"msubsup\" id=\"MathJax-Span-4110\"><span style=\"display: inline-block; position: relative; width: 0.888em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.407em, 1000.41em, 4.224em, -999.997em); top: -4.013em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-4111\" style=\"font-family: MathJax_Math-italic;\">c</span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; top: -3.877em; left: 0.412em;\"><span class=\"mi\" id=\"MathJax-Span-4112\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">k</span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-4113\" style=\"font-family: MathJax_Main; padding-left: 0.208em;\">+</span><span class=\"mi\" id=\"MathJax-Span-4114\" style=\"font-family: MathJax_Math-italic; padding-left: 0.208em;\">f<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.071em;\"></span></span><span class=\"msubsup\" id=\"MathJax-Span-4115\"><span style=\"display: inline-block; position: relative; width: 1.773em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.407em, 1000.41em, 4.224em, -999.997em); top: -4.013em; left: 0em;\"><span class=\"mi\" id=\"MathJax-Span-4116\" style=\"font-family: MathJax_Math-italic;\">c</span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; top: -3.877em; left: 0.412em;\"><span class=\"texatom\" id=\"MathJax-Span-4117\"><span class=\"mrow\" id=\"MathJax-Span-4118\"><span class=\"mi\" id=\"MathJax-Span-4119\" style=\"font-size: 70.7%; font-family: MathJax_Math-italic;\">k</span><span class=\"mo\" id=\"MathJax-Span-4120\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">+</span><span class=\"mn\" id=\"MathJax-Span-4121\" style=\"font-size: 70.7%; font-family: MathJax_Main;\">1</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.088em;\"></span></span><span style=\"position: absolute; clip: rect(2.046em, 1004.36em, 5.517em, -999.997em); top: -4.081em; left: 8.581em;\"><span style=\"display: inline-block; position: relative; width: 4.428em; height: 0px;\"><span style=\"position: absolute; clip: rect(3.135em, 1002.25em, 4.292em, -999.997em); top: -5.17em; left: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4081\"><span class=\"mrow\" id=\"MathJax-Span-4082\"><span class=\"mi\" id=\"MathJax-Span-4083\" style=\"font-family: MathJax_Math-italic;\">v</span><span class=\"mo\" id=\"MathJax-Span-4084\" style=\"font-family: MathJax_Main; padding-left: 0.276em;\">&lt;</span><span class=\"mn\" id=\"MathJax-Span-4085\" style=\"font-family: MathJax_Main; padding-left: 0.276em;\">0</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(3.135em, 1004.36em, 4.36em, -999.997em); top: -4.013em; left: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4095\"><span class=\"mrow\" id=\"MathJax-Span-4096\"><span class=\"mi\" id=\"MathJax-Span-4097\" style=\"font-family: MathJax_Math-italic;\">v</span><span class=\"mo\" id=\"MathJax-Span-4098\" style=\"font-family: MathJax_Main; padding-left: 0.276em;\">≥</span><span class=\"mi\" id=\"MathJax-Span-4099\" style=\"font-family: MathJax_Math-italic; padding-left: 0.276em;\">N<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.071em;\"></span></span><span class=\"mo\" id=\"MathJax-Span-4100\" style=\"font-family: MathJax_Main; padding-left: 0.208em;\">−</span><span class=\"mn\" id=\"MathJax-Span-4101\" style=\"font-family: MathJax_Main; padding-left: 0.208em;\">1</span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span><span style=\"position: absolute; clip: rect(3.135em, 1004.09em, 4.224em, -999.997em); top: -2.788em; left: 0em;\"><span class=\"mtd\" id=\"MathJax-Span-4122\"><span class=\"mrow\" id=\"MathJax-Span-4123\"><span class=\"texatom\" id=\"MathJax-Span-4124\"><span class=\"mrow\" id=\"MathJax-Span-4125\"><span class=\"mi\" id=\"MathJax-Span-4126\" style=\"font-family: MathJax_Main;\">o</span><span class=\"mi\" id=\"MathJax-Span-4127\" style=\"font-family: MathJax_Main;\">t</span><span class=\"mi\" id=\"MathJax-Span-4128\" style=\"font-family: MathJax_Main;\">h</span><span class=\"mi\" id=\"MathJax-Span-4129\" style=\"font-family: MathJax_Main;\">e</span><span class=\"mi\" id=\"MathJax-Span-4130\" style=\"font-family: MathJax_Main;\">r</span><span class=\"mi\" id=\"MathJax-Span-4131\" style=\"font-family: MathJax_Main;\">w</span><span class=\"mi\" id=\"MathJax-Span-4132\" style=\"font-family: MathJax_Main;\">i</span><span class=\"mi\" id=\"MathJax-Span-4133\" style=\"font-family: MathJax_Main;\">s</span><span class=\"mi\" id=\"MathJax-Span-4134\" style=\"font-family: MathJax_Main;\">e</span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.02em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.088em;\"></span></span></span></span><span class=\"mo\" id=\"MathJax-Span-4135\"></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.428em;\"></span></span></span><span style=\"display: inline-block; width: 0px; height: 4.428em;\"></span></span></span></span></span><span style=\"display: inline-block; width: 0px; height: 2.25em;\"></span></span></span><span style=\"display: inline-block; overflow: hidden; vertical-align: -1.765em; border-left: 0px solid; width: 0px; height: 4.081em;\"></span></span></nobr><span class=\"MJX_Assistive_MathML MJX_Assistive_MathML_Block\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><mtable columnalign=\"right left right left right left right left right left right left\" rowspacing=\"3pt\" columnspacing=\"0em 2em 0em 2em 0em 2em 0em 2em 0em 2em 0em\" displaystyle=\"true\"><mtr><mtd><mi>y</mi></mtd><mtd><mi></mi><mo>=</mo><mrow><mo>{</mo><mtable columnalign=\"left left\" rowspacing=\".2em\" columnspacing=\"1em\" displaystyle=\"false\"><mtr><mtd><msub><mi>c</mi><mn>0</mn></msub></mtd><mtd><mi>v</mi><mo>&lt;</mo><mn>0</mn></mtd></mtr><mtr><mtd><msub><mi>c</mi><mrow class=\"MJX-TeXAtom-ORD\"><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub></mtd><mtd><mi>v</mi><mo>≥</mo><mi>N</mi><mo>−</mo><mn>1</mn></mtd></mtr><mtr><mtd><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mspace width=\"thinmathspace\"></mspace><msub><mi>c</mi><mi>k</mi></msub><mo>+</mo><mi>f</mi><msub><mi>c</mi><mrow class=\"MJX-TeXAtom-ORD\"><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub></mtd><mtd><mrow class=\"MJX-TeXAtom-ORD\"><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">t</mi><mi mathvariant=\"normal\">h</mi><mi mathvariant=\"normal\">e</mi><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">w</mi><mi mathvariant=\"normal\">i</mi><mi mathvariant=\"normal\">s</mi><mi mathvariant=\"normal\">e</mi></mrow></mtd></mtr></mtable><mo fence=\"true\" stretchy=\"true\" symmetric=\"true\"></mo></mrow></mtd></mtr></mtable></math></span></span></div><script type=\"math/tex; mode=display\" id=\"MathJax-Element-290\">\n    \\begin{align*}\n    y &=\n        \\begin{cases}\n        c_0 & v \\lt 0 \\\\\n        c_{N-1} & v \\ge N - 1 \\\\\n        (1-f)\\,c_k + fc_{k+1} & \\mathrm{otherwise}\n        \\end{cases}\n    \\end{align*}\n</script>\n</pre>"
        }
      ]
    },
    {
      "name": "WaveShaperNode.curve",
      "html": "To set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-waveshapernode-curve\" id=\"ref-for-dom-waveshapernode-curve⑤\">curve</a></code> attribute, execute these steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>new curve</var> be a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float32Array\" id=\"ref-for-idl-Float32Array③④\">Float32Array</a></code> to be assigned to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-waveshapernode-curve\" id=\"ref-for-dom-waveshapernode-curve⑥\">curve</a></code> or <code>null</code>.\n.</p>"
        },
        {
          "html": "<p>If <var>new curve</var> is not <code>null</code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-waveshapernode-curve-set-slot\" id=\"ref-for-dom-waveshapernode-curve-set-slot①\">[[curve set]]</a></code> is true, throw an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror③⑨\">InvalidStateError</a></code> and abort these steps.</p>"
        },
        {
          "html": "<p>If <var>new curve</var> is not <code>null</code>, set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-waveshapernode-curve-set-slot\" id=\"ref-for-dom-waveshapernode-curve-set-slot②\">[[curve set]]</a></code> to true.</p>"
        },
        {
          "html": "<p>Assign <var>new curve</var> to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-waveshapernode-curve\" id=\"ref-for-dom-waveshapernode-curve⑦\">curve</a></code> attribute.</p>"
        }
      ]
    },
    {
      "rationale": "apply",
      "steps": [
        {
          "html": "<p>Up-sample the input samples to 2x or 4x the sample-rate of\nthe <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑤⓪\">AudioContext</a></code>. Thus for each <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#render-quantum\" id=\"ref-for-render-quantum①⑥\">render\nquantum</a>, generate 256 (for 2x) or 512 (for 4x) samples.</p>"
        },
        {
          "html": "<p>Apply the shaping curve.</p>"
        },
        {
          "html": "<p>Down-sample the result back to the sample-rate of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑤①\">AudioContext</a></code>. Thus taking the 256 (or 512)\nprocessed samples, generating 128 as the final result.</p>"
        }
      ]
    },
    {
      "rationale": "apply",
      "steps": [
        {
          "html": "<p>Up-sample the input samples to 2x or 4x the sample-rate of\nthe <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑤②\">AudioContext</a></code>. Thus for each <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#render-quantum\" id=\"ref-for-render-quantum①⑦\">render\nquantum</a>, generate twice (for 2x) or four times (for 4x) samples.</p>"
        },
        {
          "html": "<p>Apply the shaping curve.</p>"
        },
        {
          "html": "<p>Down-sample the result back to the sample-rate of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑤③\">AudioContext</a></code>. Thus taking the previously processed samples\nprocessed samples, generating a single render quantum worth of\nsamples as the final result.</p>"
        }
      ]
    },
    {
      "name": "AudioWorkletGlobalScope.registerProcess(name, processorCtr)",
      "html": "When the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletglobalscope-registerprocessor\" id=\"ref-for-dom-audioworkletglobalscope-registerprocessor③\">registerProcessor(name, processorCtor)</a></code> method is called, perform the following steps. If an\n    exception is thrown in any step, abort the remaining\n    steps.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>name</var> is an empty string, <span class=\"synchronous\">throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror③①\">NotSupportedError</a></code></span>.</p>"
        },
        {
          "html": "<p>If <var>name</var> already exists as a key in the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#node-name-to-processor-constructor-map\" id=\"ref-for-node-name-to-processor-constructor-map①\">node name to processor constructor map</a>, <span class=\"synchronous\">throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror③②\">NotSupportedError</a></code></span>.</p>"
        },
        {
          "html": "<p>If the result of <code><a href=\"https://tc39.es/ecma262#sec-isconstructor\">IsConstructor</a>(argument=<var>processorCtor</var>)</code> is <code>false</code>, <span class=\"synchronous\">throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror\">TypeError</a></code> </span>.</p>"
        },
        {
          "html": "<p>Let <code><em>prototype</em></code> be the result of <code><a href=\"https://tc39.es/ecma262#sec-get-o-p\"> Get</a>(O=<i>processorCtor</i>,\nP=\"prototype\")</code>.</p>"
        },
        {
          "html": "<p>If the result of <code><a href=\"https://tc39.es/ecma262#sec-ecmascript-data-types-and-values\">Type</a>(argument=<i>prototype</i>)</code> is not <code>Object</code>, <span class=\"synchronous\">throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror①\">TypeError</a></code> </span>.</p>"
        },
        {
          "html": "<p>Let <var>parameterDescriptorsValue</var> be the\nresult of <code><a href=\"https://tc39.es/ecma262#sec-get-o-p\">Get</a>(O=<i>processorCtor</i>, P=\"parameterDescriptors\")</code>.</p>"
        },
        {
          "html": "If <var>parameterDescriptorsValue</var> is not <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-undefined\" id=\"ref-for-idl-undefined⑥④\">undefined</a></code>,\nexecute the following steps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>parameterDescriptorSequence</var> be the result of <a href=\"https://webidl.spec.whatwg.org/#es-to-sequence\"> the conversion</a> from <var>parameterDescriptorsValue</var> to an IDL value of type <code>sequence&lt;AudioParamDescriptor&gt;</code>.</p>"
            },
            {
              "html": "<p>Let <var>paramNames</var> be an empty Array.</p>"
            },
            {
              "html": "<div id=\"steps-parameterDescriptorSequence\"></div>\n           For each <var>descriptor</var> of <var>parameterDescriptorSequence</var>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>paramName</var> be the value of\nthe member <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparamdescriptor-name\" id=\"ref-for-dom-audioparamdescriptor-name\">name</a></code> in <var>descriptor</var>. <span class=\"synchronous\">Throw\na <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror③③\">NotSupportedError</a></code></span> if <var>paramNames</var> already\ncontains <var>paramName</var> value.</p>"
                },
                {
                  "html": "<p>Append <var>paramName</var> to\nthe <var>paramNames</var> array.</p>"
                },
                {
                  "html": "<p>Let <var>defaultValue</var> be the value of\nthe member <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparamdescriptor-defaultvalue\" id=\"ref-for-dom-audioparamdescriptor-defaultvalue\">defaultValue</a></code> in <var>descriptor</var>.</p>"
                },
                {
                  "html": "<p>Let <var>minValue</var> be the value of\nthe member <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparamdescriptor-minvalue\" id=\"ref-for-dom-audioparamdescriptor-minvalue\">minValue</a></code> in <var>descriptor</var>.</p>"
                },
                {
                  "html": "<p>Let <var>maxValue</var> be the value of\nthe member <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparamdescriptor-maxvalue\" id=\"ref-for-dom-audioparamdescriptor-maxvalue\">maxValue</a></code> in <var>descriptor</var>.</p>"
                },
                {
                  "html": "<p>If the expresstion <var>minValue</var> &lt;= <var>defaultValue</var> &lt;= <var>maxValue</var> is false, <span class=\"synchronous\">throw\nan <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④⓪\">InvalidStateError</a></code></span>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<p>Append the key-value pair <var>name</var> → <var>processorCtor</var> to <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#node-name-to-processor-constructor-map\" id=\"ref-for-node-name-to-processor-constructor-map②\">node name to processor constructor map</a> of the associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\" id=\"ref-for-AudioWorkletGlobalScope①⑦\">AudioWorkletGlobalScope</a></code>.</p>"
        },
        {
          "html": "<p><a href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"6d54a0c521\"> queue a media element task</a> to append the key-value pair <var>name</var> → <var>parameterDescriptorSequence</var> to the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#node-name-to-parameter-descriptor-map\" id=\"ref-for-node-name-to-parameter-descriptor-map\">node name to parameter descriptor map</a> of the\nassociated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext①⓪⑨\">BaseAudioContext</a></code>.</p>"
        }
      ]
    },
    {
      "name": "invoking processor constructor",
      "href": "https://webaudio.github.io/web-audio-api/#invoking-processor-constructor",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>constructionData</var> be the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#processor-construction-data\" id=\"ref-for-processor-construction-data\">processor construction data</a> transferred from the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-thread\" id=\"ref-for-control-thread③\">control thread</a>.</p>"
        },
        {
          "html": "<p>Let <var>processorName</var>, <var>nodeReference</var> and <var>serializedPort</var> be <var>constructionData</var>’s <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#processor-construction-data-name\" id=\"ref-for-processor-construction-data-name\">name</a>, <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#processor-construction-data-node\" id=\"ref-for-processor-construction-data-node\">node</a>, and <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#processor-construction-data-port\" id=\"ref-for-processor-construction-data-port\">port</a> respectively.</p>"
        },
        {
          "html": "<p>Let <var>serializedOptions</var> be <var>constructionData</var>’s <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#processor-construction-data-options\" id=\"ref-for-processor-construction-data-options\">options</a>.</p>"
        },
        {
          "html": "<p>Let <var>deserializedPort</var> be the result of <a data-link-type=\"abstract-op\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#structureddeserialize\" id=\"ref-for-structureddeserialize①\">StructuredDeserialize</a>(<var>serializedPort</var>,\nthe current Realm).</p>"
        },
        {
          "html": "<p>Let <var>deserializedOptions</var> be the result of <a data-link-type=\"abstract-op\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#structureddeserialize\" id=\"ref-for-structureddeserialize②\">StructuredDeserialize</a>(<var>serializedOptions</var>,\nthe current Realm).</p>"
        },
        {
          "html": "<p>Let <var>processorCtor</var> be the result of looking\nup <var>processorName</var> on the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\" id=\"ref-for-AudioWorkletGlobalScope①⑨\">AudioWorkletGlobalScope</a></code>'s <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#node-name-to-processor-constructor-map\" id=\"ref-for-node-name-to-processor-constructor-map④\">node name to processor constructor map</a>.</p>"
        },
        {
          "html": "<p>Store <var>nodeReference</var> and <var>deserializedPort</var> to <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#pending-processor-construction-data-node-reference\" id=\"ref-for-pending-processor-construction-data-node-reference\">node reference</a> and <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#pending-processor-construction-data-transferred-port\" id=\"ref-for-pending-processor-construction-data-transferred-port\">transferred port</a> of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\" id=\"ref-for-AudioWorkletGlobalScope②⓪\">AudioWorkletGlobalScope</a></code>'s <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#pending-processor-construction-data\" id=\"ref-for-pending-processor-construction-data①\">pending processor construction data</a> respectively.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#construct-a-callback-function\" id=\"ref-for-construct-a-callback-function\">Construct a callback function</a> from <var>processorCtor</var> with the argument\nof <var>deserializedOptions</var>. If any exceptions are thrown in the callback, <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task\">queue a task</a> to\nthe <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-thread\" id=\"ref-for-control-thread④\">control thread</a> to <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire①②\">fire an event</a> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-audioworkletnode-processorerror\" id=\"ref-for-eventdef-audioworkletnode-processorerror\">processorerror</a></code> using <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#errorevent\" id=\"ref-for-errorevent②\">ErrorEvent</a></code> at <var>nodeReference</var>.</p>"
        },
        {
          "html": "<p>Empty the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#pending-processor-construction-data\" id=\"ref-for-pending-processor-construction-data②\">pending processor construction data</a> slot.</p>"
        }
      ]
    },
    {
      "name": "AudioWorkletNode()",
      "html": "When the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnode-audioworkletnode\" id=\"ref-for-dom-audioworkletnode-audioworkletnode③\">AudioWorkletNode</a></code> constructor\n    is invoked with <var>context</var>, <var>nodeName</var>, <var>options</var>:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>If <var>nodeName</var> does not exist as a key in the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext①①⑥\">BaseAudioContext</a></code>’s <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#node-name-to-parameter-descriptor-map\" id=\"ref-for-node-name-to-parameter-descriptor-map②\">node name to parameter\ndescriptor map</a>, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#invalidstateerror\" id=\"ref-for-invalidstateerror④①\">InvalidStateError</a></code> exception and abort these steps.</p>"
        },
        {
          "html": "<p>Let <var>node</var> be <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑦\">this</a> value.</p>"
        },
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#audionode-constructor-init\" id=\"ref-for-audionode-constructor-init①⑨\">Initialize the AudioNode</a> <var>node</var> with <var>context</var> and <var>options</var> as\narguments.</p>"
        },
        {
          "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#configure-with-audioworkletnodeoptions\"> Configure input, output and output channels</a> of <var>node</var> with <var>options</var>.\nAbort the remaining steps if any exception is\nthrown.</p>"
        },
        {
          "html": "<p>Let <var>messageChannel</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/web-messaging.html#messagechannel\" id=\"ref-for-messagechannel④\">MessageChannel</a></code>.</p>"
        },
        {
          "html": "<p>Let <var>nodePort</var> be the value of <var>messageChannel</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/web-messaging.html#dom-messagechannel-port1\" id=\"ref-for-dom-messagechannel-port1②\">port1</a></code> attribute.</p>"
        },
        {
          "html": "<p>Let <var>processorPortOnThisSide</var> be the value of <var>messageChannel</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/web-messaging.html#dom-messagechannel-port2\" id=\"ref-for-dom-messagechannel-port2②\">port2</a></code> attribute.</p>"
        },
        {
          "html": "<p>Let <var>serializedProcessorPort</var> be the result of <a data-link-type=\"abstract-op\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializewithtransfer\" id=\"ref-for-structuredserializewithtransfer②\">StructuredSerializeWithTransfer</a>(<var>processorPortOnThisSide</var>,\n« <var>processorPortOnThisSide</var> »).</p>"
        },
        {
          "html": "<p><a href=\"https://webidl.spec.whatwg.org/#dictionary-to-es\">Convert</a> <var>options</var> dictionary to <var>optionsObject</var>.</p>"
        },
        {
          "html": "<p>Let <var>serializedOptions</var> be the result of <a data-link-type=\"abstract-op\" href=\"https://html.spec.whatwg.org/multipage/structured-data.html#structuredserialize\" id=\"ref-for-structuredserialize\">StructuredSerialize</a>(<var>optionsObject</var>).</p>"
        },
        {
          "html": "<p>Set <var>node</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnode-port\" id=\"ref-for-dom-audioworkletnode-port②\">port</a></code> to <var>nodePort</var>.</p>"
        },
        {
          "html": "Let <var>parameterDescriptors</var> be the result of retrieval\nof <var>nodeName</var> from <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#node-name-to-parameter-descriptor-map\" id=\"ref-for-node-name-to-parameter-descriptor-map③\">node name to parameter descriptor map</a>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>audioParamMap</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#audioparammap\" id=\"ref-for-audioparammap①\">AudioParamMap</a></code> object.</p>"
            },
            {
              "html": "For each <var>descriptor</var> of <var>parameterDescriptors</var>:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>paramName</var> be the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparamdescriptor-name\" id=\"ref-for-dom-audioparamdescriptor-name①\">name</a></code> member in <var>descriptor</var>.</p>"
                },
                {
                  "html": "<p>Let <var>audioParam</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam①⑤⑧\">AudioParam</a></code> instance with <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparamdescriptor-automationrate\" id=\"ref-for-dom-audioparamdescriptor-automationrate\">automationRate</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparamdescriptor-defaultvalue\" id=\"ref-for-dom-audioparamdescriptor-defaultvalue①\">defaultValue</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparamdescriptor-minvalue\" id=\"ref-for-dom-audioparamdescriptor-minvalue①\">minValue</a></code>, and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparamdescriptor-maxvalue\" id=\"ref-for-dom-audioparamdescriptor-maxvalue①\">maxValue</a></code> having values equal to the values of\ncorresponding members on <var>descriptor</var>.</p>"
                },
                {
                  "html": "<p>Append a key-value pair <var>paramName</var> → <var>audioParam</var> to <var>audioParamMap</var>’s\nentries.</p>"
                }
              ]
            },
            {
              "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-parameterdata\" id=\"ref-for-dom-audioworkletnodeoptions-parameterdata\">parameterData</a></code> is\npresent on <var>options</var>, perform the\nfollowing steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>parameterData</var> be the value of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-parameterdata\" id=\"ref-for-dom-audioworkletnodeoptions-parameterdata①\">parameterData</a></code>.</p>"
                },
                {
                  "html": "For each <var>paramName</var> → <var>paramValue</var> of <var>parameterData</var>:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If there exists a map entry on <var>audioParamMap</var> with\nkey <var>paramName</var>, let <var>audioParamInMap</var> be\nsuch entry.</p>"
                    },
                    {
                      "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparam-value\" id=\"ref-for-dom-audioparam-value②①\">value</a></code> property\nof <var>audioParamInMap</var> to <var>paramValue</var>.</p>"
                    }
                  ]
                }
              ]
            },
            {
              "html": "<p>Set <var>node</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnode-parameters\" id=\"ref-for-dom-audioworkletnode-parameters①\">parameters</a></code> to <var>audioParamMap</var>.</p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing⑨\">Queue a control message</a> to <a href=\"https://webaudio.github.io/web-audio-api/#invoking-processor-constructor\">invoke</a> the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocessor-audioworkletprocessor\" id=\"ref-for-dom-audioworkletprocessor-audioworkletprocessor\">constructor</a></code> of\nthe corresponding <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletProcessor\" id=\"ref-for-AudioWorkletProcessor①⑥\">AudioWorkletProcessor</a></code> with\nthe <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#processor-construction-data\" id=\"ref-for-processor-construction-data①\">processor construction data</a> that consists of: <var>nodeName</var>, <var>node</var>, <var>serializedOptions</var>, and <var>serializedProcessorPort</var>.</p>"
        }
      ]
    },
    {
      "name": "configure with AudioWorkletNodeOptions",
      "href": "https://webaudio.github.io/web-audio-api/#configure-with-audioworkletnodeoptions",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>node</var> be an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletNode\" id=\"ref-for-AudioWorkletNode③⑧\">AudioWorkletNode</a></code> instance that is\ngiven to this algorithm.</p>"
        },
        {
          "html": "<p>If both <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-numberofinputs\" id=\"ref-for-dom-audioworkletnodeoptions-numberofinputs①\">numberOfInputs</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-numberofoutputs\" id=\"ref-for-dom-audioworkletnodeoptions-numberofoutputs①\">numberOfOutputs</a></code> are zero,\nthrow a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror③④\">NotSupportedError</a></code> and abort the remaining steps.</p>"
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-outputchannelcount\" id=\"ref-for-dom-audioworkletnodeoptions-outputchannelcount①\">outputChannelCount</a></code> <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists④\">exists</a>,",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If any value in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-outputchannelcount\" id=\"ref-for-dom-audioworkletnodeoptions-outputchannelcount②\">outputChannelCount</a></code> is zero\nor greater than the implementation’s maximum number\nof channels, throw a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#notsupportederror\" id=\"ref-for-notsupportederror③⑤\">NotSupportedError</a></code> and abort\nthe remaining steps.</p>"
            },
            {
              "html": "<p>If the length of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-outputchannelcount\" id=\"ref-for-dom-audioworkletnodeoptions-outputchannelcount③\">outputChannelCount</a></code> does not\nequal <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-numberofoutputs\" id=\"ref-for-dom-audioworkletnodeoptions-numberofoutputs②\">numberOfOutputs</a></code>,\nthrow an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#indexsizeerror\" id=\"ref-for-indexsizeerror②⑥\">IndexSizeError</a></code> and abort the remaining\nsteps.</p>"
            },
            {
              "html": "<p>If both <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-numberofinputs\" id=\"ref-for-dom-audioworkletnodeoptions-numberofinputs②\">numberOfInputs</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-numberofoutputs\" id=\"ref-for-dom-audioworkletnodeoptions-numberofoutputs③\">numberOfOutputs</a></code> are 1,\nset the channel count of the <var>node</var> output to\nthe one value in <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-outputchannelcount\" id=\"ref-for-dom-audioworkletnodeoptions-outputchannelcount④\">outputChannelCount</a></code>.</p>"
            },
            {
              "html": "<p>Otherwise set the channel count of the <em>k</em>th output\nof the <var>node</var> to the <em>k</em>th element\nof <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-outputchannelcount\" id=\"ref-for-dom-audioworkletnodeoptions-outputchannelcount⑤\">outputChannelCount</a></code> sequence and return.</p>"
            }
          ]
        },
        {
          "html": "If <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-outputchannelcount\" id=\"ref-for-dom-audioworkletnodeoptions-outputchannelcount⑥\">outputChannelCount</a></code> does not <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#map-exists\" id=\"ref-for-map-exists⑤\">exists</a>,",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If both <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-numberofinputs\" id=\"ref-for-dom-audioworkletnodeoptions-numberofinputs③\">numberOfInputs</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletnodeoptions-numberofoutputs\" id=\"ref-for-dom-audioworkletnodeoptions-numberofoutputs④\">numberOfOutputs</a></code> are 1,\nset the initial channel count of the <var>node</var> output to 1 and return.</p>"
            },
            {
              "html": "<p>Otherwise set the channel count of each output of the <var>node</var> to 1 and return.</p>"
            }
          ]
        }
      ]
    },
    {
      "name": "AudioWorkletProcessor()",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>nodeReference</var> be the result of\nlooking up <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#pending-processor-construction-data-node-reference\" id=\"ref-for-pending-processor-construction-data-node-reference①\">node reference</a> on the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#pending-processor-construction-data\" id=\"ref-for-pending-processor-construction-data③\">pending processor construction data</a> of the\ncurrent <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\" id=\"ref-for-AudioWorkletGlobalScope②②\">AudioWorkletGlobalScope</a></code>.\nThrow a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#exceptiondef-typeerror\" id=\"ref-for-exceptiondef-typeerror②\">TypeError</a></code> exception if the slot is\nempty.</p>"
        },
        {
          "html": "<p>Let <var>processor</var> be the <a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#this\" id=\"ref-for-this⑧\">this</a> value.</p>"
        },
        {
          "html": "<p>Set <var>processor</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocessor-node-reference-slot\" id=\"ref-for-dom-audioworkletprocessor-node-reference-slot\">[[node reference]]</a></code> to <var>nodeReference</var>.</p>"
        },
        {
          "html": "<p>Set <var>processor</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocessor-callable-process-slot\" id=\"ref-for-dom-audioworkletprocessor-callable-process-slot①\">[[callable process]]</a></code> to <code>true</code>.</p>"
        },
        {
          "html": "<p>Let <var>deserializedPort</var> be the result of\nlooking up <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#pending-processor-construction-data-transferred-port\" id=\"ref-for-pending-processor-construction-data-transferred-port①\">transferred port</a> from the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#pending-processor-construction-data\" id=\"ref-for-pending-processor-construction-data④\">pending processor construction data</a>.</p>"
        },
        {
          "html": "<p>Set <var>processor</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocessor-port\" id=\"ref-for-dom-audioworkletprocessor-port①\">port</a></code> to <var>deserializedPort</var>.</p>"
        },
        {
          "html": "<p>Empty the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#pending-processor-construction-data\" id=\"ref-for-pending-processor-construction-data⑤\">pending processor construction data</a> slot.</p>"
        }
      ]
    },
    {
      "name": "freeze parameter object",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>parameter</var> be the <a data-link-type=\"dfn\" href=\"https://infra.spec.whatwg.org/#ordered-map\" id=\"ref-for-ordered-map①\">ordered map</a> of the name and parameter values.</p>"
        },
        {
          "html": "<p><a href=\"https://tc39.es/ecma262/#sec-setintegritylevel\">SetIntegrityLevel</a>(<var>parameter</var>, frozen)</p>"
        }
      ]
    },
    {
      "name": "audioworklet sequence",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>An <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑤⑥\">AudioContext</a></code> is created.</p>"
        },
        {
          "html": "<p>In the main scope, <code>context.audioWorklet</code> is requested to add a script module.</p>"
        },
        {
          "html": "<p>Since none exists yet, a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\" id=\"ref-for-AudioWorkletGlobalScope②④\">AudioWorkletGlobalScope</a></code> is created in association with the context. This is the global scope in which <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletProcessor\" id=\"ref-for-AudioWorkletProcessor③⑤\">AudioWorkletProcessor</a></code> class definitions will be evaluated. (On subsequent calls, this previously created scope will be used.)</p>"
        },
        {
          "html": "<p>The imported script is run in the newly created global scope.</p>"
        },
        {
          "html": "<p>As part of running the imported script, an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletProcessor\" id=\"ref-for-AudioWorkletProcessor③⑥\">AudioWorkletProcessor</a></code> is registered under\na key (<code>\"custom\"</code> in the above diagram) within the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\" id=\"ref-for-AudioWorkletGlobalScope②⑤\">AudioWorkletGlobalScope</a></code>.\nThis populates maps both in the global scope and in the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑤⑦\">AudioContext</a></code>.</p>"
        },
        {
          "html": "<p>The promise for the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/worklets.html#dom-worklet-addmodule\" id=\"ref-for-dom-worklet-addmodule②\">addModule()</a></code> call is resolved.</p>"
        },
        {
          "html": "<p>In the main scope, an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletNode\" id=\"ref-for-AudioWorkletNode④⑨\">AudioWorkletNode</a></code> is created using\nthe user-specified key along with a\ndictionary of options.</p>"
        },
        {
          "html": "<p>As part of the node’s creation, this key is used to look up the\ncorrect <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletProcessor\" id=\"ref-for-AudioWorkletProcessor③⑦\">AudioWorkletProcessor</a></code> subclass for instantiation.</p>"
        },
        {
          "html": "<p>An instance of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletProcessor\" id=\"ref-for-AudioWorkletProcessor③⑧\">AudioWorkletProcessor</a></code> subclass is\ninstantiated with a structured clone of the same options\ndictionary. This instance is paired with the previously created <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletNode\" id=\"ref-for-AudioWorkletNode⑤⓪\">AudioWorkletNode</a></code>.</p>"
        }
      ]
    },
    {
      "name": "swapping control message queue",
      "href": "https://webaudio.github.io/web-audio-api/#swap",
      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"swap\" data-noexport=\"\" id=\"swap\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Swapping</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message-queue\" id=\"ref-for-control-message-queue③\">control message queue</a> <var>Q<sub>A</sub></var> with another <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message-queue\" id=\"ref-for-control-message-queue④\">control message queue</a> <var>Q<sub>B</sub></var> means executing the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>Q<sub>C</sub></var> be a new, empty <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message-queue\" id=\"ref-for-control-message-queue⑤\">control message\nqueue</a>.</p>"
        },
        {
          "html": "<p>Move all the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message①⑧\">control messages</a> <var>Q<sub>A</sub></var> to <var>Q<sub>C</sub></var>.</p>"
        },
        {
          "html": "<p>Move all the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message①⑨\">control messages</a> <var>Q<sub>B</sub></var> to <var>Q<sub>A</sub></var>.</p>"
        },
        {
          "html": "<p>Move all the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message\" id=\"ref-for-control-message②⓪\">control messages</a> <var>Q<sub>C</sub></var> to <var>Q<sub>B</sub></var>.</p>"
        }
      ]
    },
    {
      "name": "initialize rendering loop",
      "href": "https://webaudio.github.io/web-audio-api/#rendering-initialization",
      "html": "Set the internal slot <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"BaseAudioContext\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-baseaudiocontext-current-frame-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[current frame]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext①②④\">BaseAudioContext</a></code> to 0. Also set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-currenttime\" id=\"ref-for-dom-baseaudiocontext-currenttime④⑥\">currentTime</a></code> to 0.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Set the internal slot <dfn class=\"dfn-paneled idl-code has-dfn-panel\" data-dfn-for=\"BaseAudioContext\" data-dfn-type=\"attribute\" data-export=\"\" id=\"dom-baseaudiocontext-current-frame-slot\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"><code>[[current frame]]</code></dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext①②④\">BaseAudioContext</a></code> to 0. Also set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-currenttime\" id=\"ref-for-dom-baseaudiocontext-currenttime④⑥\">currentTime</a></code> to 0.</p>"
        }
      ]
    },
    {
      "name": "rendering a graph",
      "href": "https://webaudio.github.io/web-audio-api/#rendering-a-graph",
      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>render result</var> be <code>false</code>.</p>"
        },
        {
          "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>Q<sub>rendering</sub></var> be an empty <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message-queue\" id=\"ref-for-control-message-queue⑨\">control message\nqueue</a>. <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#atomically\" id=\"ref-for-atomically③\">Atomically</a> <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#swap\" id=\"ref-for-swap\">swap</a> <var>Q<sub>rendering</sub></var> with the current <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-message-queue\" id=\"ref-for-control-message-queue①⓪\">control message queue</a>.</p>"
            },
            {
              "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
              "rationale": "execute",
              "steps": [
                {
                  "html": "<p>Execute the asynchronous section of the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#oldest-message\" id=\"ref-for-oldest-message\">oldest message</a> of <var>Q<sub>rendering</sub></var>.</p>"
                },
                {
                  "html": "<p>Remove the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#oldest-message\" id=\"ref-for-oldest-message①\">oldest message</a> of <var>Q<sub>rendering</sub></var>.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>task queue</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext①②⑥\">BaseAudioContext</a></code>'s <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#baseaudiocontext-associated-task-queue\" id=\"ref-for-baseaudiocontext-associated-task-queue②\">associated task queue</a>.</p>"
            },
            {
              "html": "<p>Let <var>task count</var> be the number of tasks in the in <var>task queue</var></p>"
            },
            {
              "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>oldest task</var> be the first runnable task in <var>task queue</var>, and remove it from <var>task queue</var>.</p>"
                },
                {
                  "html": "<p>Set the rendering loop’s currently running task to <var>oldest task</var>.</p>"
                },
                {
                  "html": "<p>Perform <var>oldest task</var>’s steps.</p>"
                },
                {
                  "html": "<p>Set the rendering loop currently running task back to <code>null</code>.</p>"
                },
                {
                  "html": "<p>Decrement <var>task count</var></p>"
                },
                {
                  "html": "<p>Perform a microtask checkpoint.</p>"
                }
              ]
            }
          ]
        },
        {
          "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
          "rationale": "if",
          "steps": [
            {
              "html": "<p>If the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot①③\">[[rendering thread state]]</a></code> of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext①②⑦\">BaseAudioContext</a></code> is not <code>running</code>, return false.</p>"
            },
            {
              "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>ordered node list</var> be an empty list of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode①⑧⑥\">AudioNode</a></code>s and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioListener\" id=\"ref-for-AudioListener②①\">AudioListener</a></code>. It will contain an ordered list of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode①⑧⑦\">AudioNode</a></code>s and\nthe <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioListener\" id=\"ref-for-AudioListener②②\">AudioListener</a></code> when this ordering algorithm terminates.</p>"
                },
                {
                  "html": "<p>Let <var>nodes</var> be the set of all nodes created by this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#BaseAudioContext\" id=\"ref-for-BaseAudioContext①②⑨\">BaseAudioContext</a></code>, and still alive.</p>"
                },
                {
                  "html": "<p>Add the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioListener\" id=\"ref-for-AudioListener②③\">AudioListener</a></code> to <var>nodes</var>.</p>"
                },
                {
                  "html": "<p>Let <var>cycle breakers</var> be an empty set of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#DelayNode\" id=\"ref-for-DelayNode②⑤\">DelayNode</a></code>s. It will\ncontain all the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#DelayNode\" id=\"ref-for-DelayNode②⑥\">DelayNode</a></code>s that are part of a cycle.</p>"
                },
                {
                  "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If <var>node</var> is a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#DelayNode\" id=\"ref-for-DelayNode②⑦\">DelayNode</a></code> that is part of a cycle, add it\nto <var>cycle breakers</var> and remove it from <var>nodes</var>.</p>"
                    }
                  ]
                },
                {
                  "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>delayWriter</var> and <var>delayReader</var> respectively be a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#delaywriter\" id=\"ref-for-delaywriter②\">DelayWriter</a> and a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#delayreader\" id=\"ref-for-delayreader②\">DelayReader</a>, for <var>delay</var>.\n    Add <var>delayWriter</var> and <var>delayReader</var> to <var>nodes</var>. Disconnect <var>delay</var> from all its input and\n    outputs.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>If <var>nodes</var> contains cycles, <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#mute\" id=\"ref-for-mute\">mute</a> all the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode①⑧⑨\">AudioNode</a></code>s that are part of this cycle, and remove them from <var>nodes</var>.</p>"
                },
                {
                  "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                  "rationale": "choose",
                  "steps": [
                    {
                      "html": "<p>Choose an element <var>node</var> in <var>nodes</var>.</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#visit\" id=\"ref-for-visit\">Visit</a> <var>node</var>.</p>"
                    }
                  ],
                  "additional": [
                    {
                      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                      "rationale": ".algorithm",
                      "steps": [
                        {
                          "html": "<p>If <var>node</var> is marked, abort these steps.</p>"
                        },
                        {
                          "html": "<p>Mark <var>node</var>.</p>"
                        },
                        {
                          "html": "<p>If <var>node</var> is an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode①⑨⓪\">AudioNode</a></code>, <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#visit\" id=\"ref-for-visit①\">Visit</a> each <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode①⑨①\">AudioNode</a></code> connected to the input of <var>node</var>.</p>"
                        },
                        {
                          "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                          "rationale": "for",
                          "steps": [
                            {
                              "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                              "rationale": "visit",
                              "steps": [
                                {
                                  "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#visit\" id=\"ref-for-visit②\">Visit</a> <var>param input node</var></p>"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "html": "<p>Add <var>node</var> to the beginning of <var>ordered node list</var>.</p>"
                        }
                      ]
                    }
                  ]
                },
                {
                  "html": "<p>Reverse the order of <var>ordered node list</var>.</p>"
                }
              ]
            },
            {
              "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#computation-of-value\">Compute the value(s)</a> of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioListener\" id=\"ref-for-AudioListener②④\">AudioListener</a></code>'s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam①⑥⑧\">AudioParam</a></code>s for this block.</p>"
            },
            {
              "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
              "rationale": "for",
              "steps": [
                {
                  "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                  "rationale": "if",
                  "steps": [
                    {
                      "html": "<p>If this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam①⑦⓪\">AudioParam</a></code> has any <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode①⑨⑤\">AudioNode</a></code> connected to it, <a href=\"https://webaudio.github.io/web-audio-api/#channel-up-mixing-and-down-mixing\">sum</a> the buffers <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#available-for-reading\" id=\"ref-for-available-for-reading\">made available for reading</a> by\nall <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode①⑨⑥\">AudioNode</a></code> connected to this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam①⑦①\">AudioParam</a></code>, <a href=\"https://webaudio.github.io/web-audio-api/#down-mix\">down mix</a> the resulting buffer down to a mono\nchannel, and call this buffer the <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"input AudioParam buffer\" data-noexport=\"\" id=\"input-audioparam-buffer\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\"> input AudioParam buffer</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span>.</p>"
                    },
                    {
                      "html": "<p><a href=\"https://webaudio.github.io/web-audio-api/#computation-of-value\">Compute the value(s)</a> of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam①⑦②\">AudioParam</a></code> for this block.</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing①⓪\">Queue a control message</a> to set the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioparam-current-value-slot\" id=\"ref-for-dom-audioparam-current-value-slot⑥\">[[current value]]</a></code> slot\nof this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam①⑦③\">AudioParam</a></code> according to <a href=\"https://webaudio.github.io/web-audio-api/#computation-of-value\">§ 1.6.3 Computation of Value</a>.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>If this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode①⑨⑦\">AudioNode</a></code> has any <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode①⑨⑧\">AudioNode</a></code>s connected to its input, <a href=\"https://webaudio.github.io/web-audio-api/#channel-up-mixing-and-down-mixing\">sum</a> the buffers <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#available-for-reading\" id=\"ref-for-available-for-reading①\">made available for reading</a> by all <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode①⑨⑨\">AudioNode</a></code>s connected to this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode②⓪⓪\">AudioNode</a></code>. The resulting buffer is\ncalled the <dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"input-buffer\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">input buffer</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span>. <a href=\"https://webaudio.github.io/web-audio-api/#channel-up-mixing-and-down-mixing\">Up or down-mix</a> it to\nmatch if number of input channels of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode②⓪①\">AudioNode</a></code>.</p>"
                },
                {
                  "html": "<p>If this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode②⓪②\">AudioNode</a></code> is a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#source-node\" id=\"ref-for-source-node②\">source node</a>, <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#computing-a-block-of-audio\" id=\"ref-for-computing-a-block-of-audio\">compute a block of audio</a>, and <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#available-for-reading\" id=\"ref-for-available-for-reading②\">make it available for reading</a>.</p>"
                },
                {
                  "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                  "rationale": "let",
                  "steps": [
                    {
                      "html": "<p>Let <var>processor</var> be the associated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletProcessor\" id=\"ref-for-AudioWorkletProcessor④③\">AudioWorkletProcessor</a></code> instance of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletNode\" id=\"ref-for-AudioWorkletNode⑤⑤\">AudioWorkletNode</a></code>.</p>"
                    },
                    {
                      "html": "<p>Let <var>O</var> be the ECMAScript object corresponding to <var>processor</var>.</p>"
                    },
                    {
                      "html": "<p>Let <var>processCallback</var> be an uninitialized variable.</p>"
                    },
                    {
                      "html": "<p>Let <var>completion</var> be an uninitialized variable.</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#prepare-to-run-script\" id=\"ref-for-prepare-to-run-script\">Prepare to run script</a> with the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#current-settings-object\" id=\"ref-for-current-settings-object④\">current settings object</a>.</p>"
                    },
                    {
                      "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#prepare-to-run-a-callback\" id=\"ref-for-prepare-to-run-a-callback\">Prepare to run a callback</a> with the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#current-settings-object\" id=\"ref-for-current-settings-object⑤\">current settings object</a>.</p>"
                    },
                    {
                      "html": "<p>Let <var>getResult</var> be <a href=\"https://tc39.github.io/ecma262/#sec-get-o-p\"> Get</a>(<var>O</var>, \"process\").</p>"
                    },
                    {
                      "html": "<p>If <var>getResult</var> is an <a href=\"https://tc39.github.io/ecma262/#sec-completion-record-specification-type\"> abrupt completion</a>, set <var>completion</var> to <var>getResult</var> and jump to the step\nlabeled <a href=\"https://webaudio.github.io/web-audio-api/#audio-worklet-render-return\">return</a>.</p>"
                    },
                    {
                      "html": "<p>Set <var>processCallback</var> to <var>getResult</var>.[[Value]].</p>"
                    },
                    {
                      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                      "rationale": "set",
                      "steps": [
                        {
                          "html": "<p>Set <var>completion</var> to new <a href=\"https://tc39.es/ecma262/#sec-throwcompletion\">Completion</a> {[[Type]]: throw, [[Value]]: a newly created <a href=\"https://tc39.es/ecma262/#sec-native-error-types-used-in-this-standard-typeerror\"> TypeError</a> object, [[Target]]: empty}.</p>"
                        },
                        {
                          "html": "<p>Jump to the step labeled <a href=\"https://webaudio.github.io/web-audio-api/#audio-worklet-render-return\">return</a>.</p>"
                        }
                      ]
                    },
                    {
                      "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocessor-callable-process-slot\" id=\"ref-for-dom-audioworkletprocessor-callable-process-slot②\">[[callable process]]</a></code> to <code>true</code>.</p>"
                    },
                    {
                      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                      "rationale": "let",
                      "steps": [
                        {
                          "html": "<p>Let <var>args</var> be a <a href=\"https://webidl.spec.whatwg.org/#web-idl-arguments-list\"> Web IDL arguments list</a> consisting of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocesscallback-inputs\" id=\"ref-for-dom-audioworkletprocesscallback-inputs③\">inputs</a></code>, <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocesscallback-outputs\" id=\"ref-for-dom-audioworkletprocesscallback-outputs③\">outputs</a></code>, and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocesscallback-parameters\" id=\"ref-for-dom-audioworkletprocesscallback-parameters②\">parameters</a></code>.</p>"
                        },
                        {
                          "html": "<p>Let <var>esArgs</var> be the result of <a href=\"https://webidl.spec.whatwg.org/#web-idl-arguments-list-converting\"> converting</a> <var>args</var> to an ECMAScript arguments list.</p>"
                        },
                        {
                          "html": "<p>Let <var>callResult</var> be the <a href=\"https://tc39.github.io/ecma262/#sec-call\"> Call</a>(<var>processCallback</var>, <var>O</var>, <var>esArgs</var>). This operation <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#computing-a-block-of-audio\" id=\"ref-for-computing-a-block-of-audio①\">computes a block of audio</a> with <var>esArgs</var>.\nUpon a successful function call, a buffer containing copies of\nthe elements of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-Float32Array\" id=\"ref-for-idl-Float32Array④③\">Float32Array</a></code>s passed via the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocesscallback-outputs\" id=\"ref-for-dom-audioworkletprocesscallback-outputs④\">outputs</a></code> is <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#available-for-reading\" id=\"ref-for-available-for-reading③\">made available for reading</a>.\nAny <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①⑥\">Promise</a></code> resolved within this call will be queued into the\nmicrotask queue in the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletGlobalScope\" id=\"ref-for-AudioWorkletGlobalScope②⑥\">AudioWorkletGlobalScope</a></code>.</p>"
                        },
                        {
                          "html": "<p>If <var>callResult</var> is an <a href=\"https://tc39.github.io/ecma262/#sec-completion-record-specification-type\"> abrupt completion</a>, set <var>completion</var> to <var>callResult</var> and jump to the\nstep labeled <a href=\"https://webaudio.github.io/web-audio-api/#audio-worklet-render-return\">return</a>.</p>"
                        },
                        {
                          "html": "<p>Set <var>processor</var>’s <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#active-source\" id=\"ref-for-active-source①\">active source</a> flag to <a href=\"https://tc39.github.io/ecma262/#sec-toboolean\"> ToBoolean</a>(<var>callResult</var>.[[Value]]).</p>"
                        }
                      ]
                    },
                    {
                      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                      "rationale": "clean",
                      "steps": [
                        {
                          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-a-callback\" id=\"ref-for-clean-up-after-running-a-callback\">Clean up after running a callback</a> with the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#current-settings-object\" id=\"ref-for-current-settings-object⑥\">current settings object</a>.</p>"
                        },
                        {
                          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script\" id=\"ref-for-clean-up-after-running-script\">Clean up after running script</a> with the <a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#current-settings-object\" id=\"ref-for-current-settings-object⑦\">current settings object</a>.</p>"
                        },
                        {
                          "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
                          "rationale": "set",
                          "steps": [
                            {
                              "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audioworkletprocessor-callable-process-slot\" id=\"ref-for-dom-audioworkletprocessor-callable-process-slot③\">[[callable process]]</a></code> to <code>false</code>.</p>"
                            },
                            {
                              "html": "<p>Set <var>processor</var>’s <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#active-source\" id=\"ref-for-active-source②\">active source</a> flag to <code>false</code>.</p>"
                            },
                            {
                              "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#available-for-reading\" id=\"ref-for-available-for-reading④\">Make a silent output buffer available for reading</a>.</p>"
                            },
                            {
                              "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task\" id=\"ref-for-queue-a-task①\">Queue a task</a> to the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#control-thread\" id=\"ref-for-control-thread①②\">control thread</a> <a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire①④\">fire</a> an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#errorevent\" id=\"ref-for-errorevent③\">ErrorEvent</a></code> named <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-audioworkletnode-processorerror\" id=\"ref-for-eventdef-audioworkletnode-processorerror①\">processorerror</a></code> at the\nassociated <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioWorkletNode\" id=\"ref-for-AudioWorkletNode⑤⑥\">AudioWorkletNode</a></code>.</p>"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "html": "<p>If this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode②⓪④\">AudioNode</a></code> is a <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#destination-node\" id=\"ref-for-destination-node\">destination node</a>, <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#recording-the-input\" id=\"ref-for-recording-the-input\">record the input</a> of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode②⓪⑤\">AudioNode</a></code>.</p>"
                },
                {
                  "html": "<p>Else, <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#processing-an-input-buffer\" id=\"ref-for-processing-an-input-buffer\">process</a> the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#input-buffer\" id=\"ref-for-input-buffer\">input buffer</a>, and <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#available-for-reading\" id=\"ref-for-available-for-reading⑤\">make available for reading</a> the\nresulting buffer.</p>"
                }
              ]
            },
            {
              "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-lt=\"Visit\" data-noexport=\"\" id=\"visit\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Visiting a node</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means performing\n    the following steps:",
              "rationale": "increment",
              "steps": [
                {
                  "html": "<p>Increment <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-current-frame-slot\" id=\"ref-for-dom-baseaudiocontext-current-frame-slot①\">[[current frame]]</a></code> by the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#render-quantum-size\" id=\"ref-for-render-quantum-size⑦\">render quantum size</a>.</p>"
                },
                {
                  "html": "<p>Set <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-currenttime\" id=\"ref-for-dom-baseaudiocontext-currenttime④⑦\">currentTime</a></code> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-current-frame-slot\" id=\"ref-for-dom-baseaudiocontext-current-frame-slot②\">[[current frame]]</a></code> divided\nby <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-samplerate\" id=\"ref-for-dom-baseaudiocontext-samplerate①④\">sampleRate</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>Set <var>render result</var> to <code>true</code>.</p>"
            }
          ]
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#perform-a-microtask-checkpoint\" id=\"ref-for-perform-a-microtask-checkpoint\">Perform a microtask checkpoint</a>.</p>"
        },
        {
          "html": "<p>Return <var>render result</var>.</p>"
        }
      ]
    },
    {
      "html": "The <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑥⑤\">AudioContext</a></code> <var>audioContext</var> performs the following steps on <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#rendering-thread\" id=\"ref-for-rendering-thread②②\">rendering thread</a> in the\n    event of an udio system resource error.",
      "rationale": "if",
      "steps": [
        {
          "html": "If the <var>audioContext</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot①④\">[[rendering thread state]]</a></code> is <code>running</code>:",
          "rationale": "attempt",
          "steps": [
            {
              "html": "<p>Attempt to <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#releasing\" id=\"ref-for-releasing⑤\">release system resources</a>.</p>"
            },
            {
              "html": "<p>Set the <var>audioContext</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot①⑤\">[[rendering thread state]]</a></code> to <code>suspended</code>.</p>"
            },
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"ref-for-queue-a-media-element-task③\">Queue a media element task</a> to execute the following steps:",
              "rationale": "fire",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire①⑤\">Fire an event</a> using <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#errorevent\" id=\"ref-for-errorevent④\">ErrorEvent</a></code> at the <var>audioContext</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-audiocontext-error\" id=\"ref-for-eventdef-audiocontext-error①\">error</a></code>.</p>"
                },
                {
                  "html": "<p>Set the <var>audioContext</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-suspended-by-user-slot\" id=\"ref-for-dom-audiocontext-suspended-by-user-slot④\">[[suspended by user]]</a></code> to <code>false</code>.</p>"
                },
                {
                  "html": "<p>Set the <var>audioContext</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-control-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-control-thread-state-slot①⑤\">[[control thread state]]</a></code> to <code>suspended</code>.</p>"
                },
                {
                  "html": "<p>Set the <var>audioContext</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-state\" id=\"ref-for-dom-baseaudiocontext-state①⑤\">state</a></code> attribute to\n\"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontextstate-suspended\" id=\"ref-for-dom-audiocontextstate-suspended⑧\">suspended</a></code>\".</p>"
                },
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire①⑥\">Fire an event</a> at the <var>audioContext</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-baseaudiocontext-statechange\" id=\"ref-for-eventdef-baseaudiocontext-statechange⑨\">statechange</a></code>.</p>"
                }
              ]
            },
            {
              "html": "<p>Abort these steps.</p>"
            }
          ]
        },
        {
          "html": "If the <var>audioContext</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-rendering-thread-state-slot\" id=\"ref-for-dom-baseaudiocontext-rendering-thread-state-slot①⑥\">[[rendering thread state]]</a></code> is <code>suspended</code>:",
          "rationale": "queue",
          "steps": [
            {
              "html": "<a data-link-type=\"dfn\" href=\"https://html.spec.whatwg.org/multipage/media.html#queue-a-media-element-task\" id=\"ref-for-queue-a-media-element-task④\">Queue a media element task</a>to execute the following steps:",
              "rationale": "fire",
              "steps": [
                {
                  "html": "<p><a data-link-type=\"dfn\" href=\"https://dom.spec.whatwg.org/#concept-event-fire\" id=\"ref-for-concept-event-fire①⑦\">Fire an event</a> using <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://html.spec.whatwg.org/multipage/webappapis.html#errorevent\" id=\"ref-for-errorevent⑤\">ErrorEvent</a></code> at the <var>audioContext</var>’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#eventdef-audiocontext-error\" id=\"ref-for-eventdef-audiocontext-error②\">error</a></code>.</p>"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Processing an input buffer",
      "href": "https://webaudio.github.io/web-audio-api/#processing-an-input-buffer",
      "html": "<dfn class=\"dfn-paneled has-dfn-panel\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"processing-an-input-buffer\" role=\"button\" aria-expanded=\"false\" tabindex=\"0\">Processing an input buffer</dfn><span style=\"position: relative; height: 0px;\"></span><span style=\"position: relative; height: 0px;\"></span> means\nrunning the algorithm for an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode②①④\">AudioNode</a></code>, using an <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#input-buffer\" id=\"ref-for-input-buffer①\">input\nbuffer</a> and the value(s) of the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam①⑦④\">AudioParam</a></code>(s) of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode②①⑤\">AudioNode</a></code> as the input for this algorithm.",
      "rationale": "reject",
      "steps": [
        {
          "html": "<p>Reject all the promises of <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-pending-promises-slot\" id=\"ref-for-dom-baseaudiocontext-pending-promises-slot⑧\">[[pending promises]]</a></code> with <code>InvalidStateError</code>, for each <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑥⑦\">AudioContext</a></code> and <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext④②\">OfflineAudioContext</a></code> whose relevant global object is the same as\nthe document’s associated Window.</p>"
        },
        {
          "html": "<p>Stop all <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-baseaudiocontext-decoding-thread\" id=\"ref-for-dom-baseaudiocontext-decoding-thread①\">decoding thread</a></code>s.</p>"
        },
        {
          "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#queuing\" id=\"ref-for-queuing①①\">Queue a control message</a> to <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audiocontext-close\" id=\"ref-for-dom-audiocontext-close②\">close()</a></code> the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioContext\" id=\"ref-for-AudioContext①⑥⑧\">AudioContext</a></code> or <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#OfflineAudioContext\" id=\"ref-for-OfflineAudioContext④③\">OfflineAudioContext</a></code>.</p>"
        }
      ]
    },
    {
      "name": "channel mixing",
      "html": "For each input of an <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode②①⑨\">AudioNode</a></code>, an implementation\n    MUST:",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Compute <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#computednumberofchannels\" id=\"ref-for-computednumberofchannels⑧\">computedNumberOfChannels</a>.</p>"
        },
        {
          "html": "For each connection to the input:",
          "rationale": "up-mix",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#up-mixing\" id=\"ref-for-up-mixing\">up-mix</a> or <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#down-mixing\" id=\"ref-for-down-mixing\">down-mix</a> the connection to <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#computednumberofchannels\" id=\"ref-for-computednumberofchannels⑨\">computedNumberOfChannels</a> according to the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#enumdef-channelinterpretation\" id=\"ref-for-enumdef-channelinterpretation⑤\">ChannelInterpretation</a></code> value given by the node’s <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#dom-audionode-channelinterpretation\" id=\"ref-for-dom-audionode-channelinterpretation②⑦\">channelInterpretation</a></code> attribute.</p>"
            },
            {
              "html": "<p>Mix it together with all of the other mixed streams (from other\nconnections). This is a straight-forward summing together of each of\nthe corresponding channels that have been <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#up-mixing\" id=\"ref-for-up-mixing①\">up-mixed</a> or <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#down-mixing\" id=\"ref-for-down-mixing①\">down-mixed</a> in step 1 for each connection. </p>"
            }
          ]
        }
      ]
    },
    {
      "name": "equalpower panning",
      "html": "",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "For each sample to be computed by this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode②②④\">AudioNode</a></code>:",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>azimuth</var> be the value computed in the <a href=\"https://webaudio.github.io/web-audio-api/#azimuth-elevation\">azimuth and elevation</a> section.</p>"
            },
            {
              "html": "<p>The <var>azimuth</var> value is first contained to be within\nthe range [-90, 90] according to:</p>\n<pre class=\"highlight\"><c- c1=\"\">// First, clamp azimuth to allowed range of [-180, 180].</c->\nazimuth <c- o=\"\">=</c-> max<c- p=\"\">(</c-><c- o=\"\">-</c-><c- mf=\"\">180</c-><c- p=\"\">,</c-> azimuth<c- p=\"\">);</c->\nazimuth <c- o=\"\">=</c-> min<c- p=\"\">(</c-><c- mf=\"\">180</c-><c- p=\"\">,</c-> azimuth<c- p=\"\">);</c->\n\n<c- c1=\"\">// Then wrap to range [-90, 90].</c->\n<c- k=\"\">if</c-> <c- p=\"\">(</c->azimuth <c- o=\"\">&lt;</c-> <c- o=\"\">-</c-><c- mf=\"\">90</c-><c- p=\"\">)</c->\n    azimuth <c- o=\"\">=</c-> <c- o=\"\">-</c-><c- mf=\"\">180</c-> <c- o=\"\">-</c-> azimuth<c- p=\"\">;</c->\n<c- k=\"\">else</c-> <c- k=\"\">if</c-> <c- p=\"\">(</c->azimuth <c- o=\"\">&gt;</c-> <c- mf=\"\">90</c-><c- p=\"\">)</c->\n    azimuth <c- o=\"\">=</c-> <c- mf=\"\">180</c-> <c- o=\"\">-</c-> azimuth<c- p=\"\">;</c->\n</pre>"
            },
            {
              "html": "<p>A normalized value <em>x</em> is calculated from <var>azimuth</var> for a mono input as:</p>\n<pre class=\"highlight\">x <c- o=\"\">=</c-> <c- p=\"\">(</c->azimuth <c- o=\"\">+</c-> <c- mf=\"\">90</c-><c- p=\"\">)</c-> <c- o=\"\">/</c-> <c- mf=\"\">180</c-><c- p=\"\">;</c->\n</pre>\n        <p>Or for a stereo input as:</p>\n<pre class=\"highlight\"><c- k=\"\">if</c-> <c- p=\"\">(</c->azimuth <c- o=\"\">&lt;=</c-> <c- mf=\"\">0</c-><c- p=\"\">)</c-> <c- p=\"\">{</c-> <c- c1=\"\">// -90 -&gt; 0</c->\n    <c- c1=\"\">// Transform the azimuth value from [-90, 0] degrees into the range [-90, 90].</c->\n    x <c- o=\"\">=</c-> <c- p=\"\">(</c->azimuth <c- o=\"\">+</c-> <c- mf=\"\">90</c-><c- p=\"\">)</c-> <c- o=\"\">/</c-> <c- mf=\"\">90</c-><c- p=\"\">;</c->\n<c- p=\"\">}</c-> <c- k=\"\">else</c-> <c- p=\"\">{</c-> <c- c1=\"\">// 0 -&gt; 90</c->\n    <c- c1=\"\">// Transform the azimuth value from [0, 90] degrees into the range [-90, 90].</c->\n    x <c- o=\"\">=</c-> azimuth <c- o=\"\">/</c-> <c- mf=\"\">90</c-><c- p=\"\">;</c->\n<c- p=\"\">}</c->\n</pre>"
            },
            {
              "html": "<p>Left and right gain values are calculated as:</p>\n<pre class=\"highlight\">gainL <c- o=\"\">=</c-> cos<c- p=\"\">(</c->x <c- o=\"\">*</c-> Math<c- p=\"\">.</c->PI <c- o=\"\">/</c-> <c- mf=\"\">2</c-><c- p=\"\">);</c->\ngainR <c- o=\"\">=</c-> sin<c- p=\"\">(</c->x <c- o=\"\">*</c-> Math<c- p=\"\">.</c->PI <c- o=\"\">/</c-> <c- mf=\"\">2</c-><c- p=\"\">);</c->\n</pre>"
            },
            {
              "html": "<p>For mono input, the stereo output is calculated as:</p>\n<pre class=\"highlight\">outputL <c- o=\"\">=</c-> input <c- o=\"\">*</c-> gainL<c- p=\"\">;</c->\noutputR <c- o=\"\">=</c-> input <c- o=\"\">*</c-> gainR<c- p=\"\">;</c->\n</pre>\n        <p>Else for stereo input, the output is calculated as:</p>\n<pre class=\"highlight\"><c- k=\"\">if</c-> <c- p=\"\">(</c->azimuth <c- o=\"\">&lt;=</c-> <c- mf=\"\">0</c-><c- p=\"\">)</c-> <c- p=\"\">{</c->\n    outputL <c- o=\"\">=</c-> inputL <c- o=\"\">+</c-> inputR <c- o=\"\">*</c-> gainL<c- p=\"\">;</c->\n    outputR <c- o=\"\">=</c-> inputR <c- o=\"\">*</c-> gainR<c- p=\"\">;</c->\n<c- p=\"\">}</c-> <c- k=\"\">else</c-> <c- p=\"\">{</c->\n    outputL <c- o=\"\">=</c-> inputL <c- o=\"\">*</c-> gainL<c- p=\"\">;</c->\n    outputR <c- o=\"\">=</c-> inputR <c- o=\"\">+</c-> inputL <c- o=\"\">*</c-> gainR<c- p=\"\">;</c->\n<c- p=\"\">}</c->\n</pre>"
            },
            {
              "html": "<p>Apply the distance gain and cone gain where the\ncomputation of the distance is described in <a href=\"https://webaudio.github.io/web-audio-api/#Spatialization-distance-effects\">Distance\nEffects</a> and the cone gain is described in <a href=\"https://webaudio.github.io/web-audio-api/#Spatialization-sound-cones\">Sound Cones</a>:</p>\n<pre class=\"highlight\"><c- a=\"\">let</c-> distance <c- o=\"\">=</c-> distance<c- p=\"\">();</c->\n<c- a=\"\">let</c-> distanceGain <c- o=\"\">=</c-> distanceModel<c- p=\"\">(</c->distance<c- p=\"\">);</c->\n<c- a=\"\">let</c-> totalGain <c- o=\"\">=</c-> coneGain<c- p=\"\">()</c-> <c- o=\"\">*</c-> distanceGain<c- p=\"\">();</c->\noutputL <c- o=\"\">=</c-> totalGain <c- o=\"\">*</c-> outputL<c- p=\"\">;</c->\noutputR <c- o=\"\">=</c-> totalGain <c- o=\"\">*</c-> outputR<c- p=\"\">;</c->\n</pre>"
            }
          ]
        }
      ]
    },
    {
      "name": "pan a StereoPannerNode",
      "html": "For a <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#stereopannernode\" id=\"ref-for-stereopannernode①③\">StereoPannerNode</a></code>, the following algorithm\n    MUST be implemented.",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "For each sample to be computed by this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioNode\" id=\"ref-for-AudioNode②②⑤\">AudioNode</a></code>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>pan</var> be the <a data-link-type=\"dfn\" href=\"https://webaudio.github.io/web-audio-api/#computedvalue\" id=\"ref-for-computedvalue⑥\">computedValue</a> of the <code>pan</code> <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#AudioParam\" id=\"ref-for-AudioParam①⑦⑧\">AudioParam</a></code> of this <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webaudio.github.io/web-audio-api/#stereopannernode\" id=\"ref-for-stereopannernode①④\">StereoPannerNode</a></code>.</p>"
            },
            {
              "html": "<p>Clamp <var>pan</var> to [-1, 1].</p>\n<pre class=\"highlight\">pan <c- o=\"\">=</c-> max<c- p=\"\">(</c-><c- o=\"\">-</c-><c- mf=\"\">1</c-><c- p=\"\">,</c-> pan<c- p=\"\">);</c->\npan <c- o=\"\">=</c-> min<c- p=\"\">(</c-><c- mf=\"\">1</c-><c- p=\"\">,</c-> pan<c- p=\"\">);</c->\n</pre>"
            },
            {
              "html": "<p>Calculate <em>x</em> by normalizing <var>pan</var> value to\n[0, 1]. For mono input:</p>\n<pre class=\"highlight\">x <c- o=\"\">=</c-> <c- p=\"\">(</c->pan <c- o=\"\">+</c-> <c- mf=\"\">1</c-><c- p=\"\">)</c-> <c- o=\"\">/</c-> <c- mf=\"\">2</c-><c- p=\"\">;</c->\n</pre>\n        <p>For stereo input:</p>\n<pre class=\"highlight\"><c- k=\"\">if</c-> <c- p=\"\">(</c->pan <c- o=\"\">&lt;=</c-> <c- mf=\"\">0</c-><c- p=\"\">)</c->\n    x <c- o=\"\">=</c-> pan <c- o=\"\">+</c-> <c- mf=\"\">1</c-><c- p=\"\">;</c->\n<c- k=\"\">else</c->\n    x <c- o=\"\">=</c-> pan<c- p=\"\">;</c->\n</pre>"
            },
            {
              "html": "<p>Left and right gain values are calculated as:</p>\n<pre class=\"highlight\">gainL <c- o=\"\">=</c-> cos<c- p=\"\">(</c->x <c- o=\"\">*</c-> Math<c- p=\"\">.</c->PI <c- o=\"\">/</c-> <c- mf=\"\">2</c-><c- p=\"\">);</c->\ngainR <c- o=\"\">=</c-> sin<c- p=\"\">(</c->x <c- o=\"\">*</c-> Math<c- p=\"\">.</c->PI <c- o=\"\">/</c-> <c- mf=\"\">2</c-><c- p=\"\">);</c->\n</pre>"
            },
            {
              "html": "<p>For mono input, the stereo output is calculated as:</p>\n<pre class=\"highlight\">outputL <c- o=\"\">=</c-> input <c- o=\"\">*</c-> gainL<c- p=\"\">;</c->\noutputR <c- o=\"\">=</c-> input <c- o=\"\">*</c-> gainR<c- p=\"\">;</c->\n</pre>\n        <p>Else for stereo input, the output is calculated as:</p>\n<pre class=\"highlight\"><c- k=\"\">if</c-> <c- p=\"\">(</c->pan <c- o=\"\">&lt;=</c-> <c- mf=\"\">0</c-><c- p=\"\">)</c-> <c- p=\"\">{</c->\n    outputL <c- o=\"\">=</c-> inputL <c- o=\"\">+</c-> inputR <c- o=\"\">*</c-> gainL<c- p=\"\">;</c->\n    outputR <c- o=\"\">=</c-> inputR <c- o=\"\">*</c-> gainR<c- p=\"\">;</c->\n<c- p=\"\">}</c-> <c- k=\"\">else</c-> <c- p=\"\">{</c->\n    outputL <c- o=\"\">=</c-> inputL <c- o=\"\">*</c-> gainL<c- p=\"\">;</c->\n    outputR <c- o=\"\">=</c-> inputR <c- o=\"\">+</c-> inputL <c- o=\"\">*</c-> gainR<c- p=\"\">;</c->\n<c- p=\"\">}</c->\n</pre>"
            }
          ]
        }
      ]
    }
  ]
}