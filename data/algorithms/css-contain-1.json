{
  "spec": {
    "title": "CSS Containment Module Level 1",
    "url": "https://drafts.csswg.org/css-contain-1/"
  },
  "algorithms": [
    {
      "html": "Possible optimizations that can be enabled by <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-1/#layout-containment\" id=\"ref-for-layout-containment⑧\">layout containment</a> include (but are not limited to):",
      "rationale": "in parallel",
      "steps": [
        {
          "html": "<p>When laying out the page,\nthe contents of separate <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-1/#layout-containment-box\" id=\"ref-for-layout-containment-box①⓪\">containment boxes</a> can be laid out in parallel,\nas they’re guaranteed not to affect each other.</p>"
        },
        {
          "html": "<p>When laying out the page,\nif the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-1/#layout-containment-box\" id=\"ref-for-layout-containment-box①①\">containment box</a> is off-screen or obscured\nand the layout of the visible parts of the screen do not depend on the size of the <span id=\"ref-for-layout-containment-box①②\">containment box</span> (for example, if the <span id=\"ref-for-layout-containment-box①③\">containment box</span> is near the end of a block container,\nand you’re viewing the beginning of the block container),\nthe layout of the <span id=\"ref-for-layout-containment-box①④\">containment box</span>' contents can be delayed or done at a lower priority.</p>\n     <p>(When paired with <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-1/#size-containment\" id=\"ref-for-size-containment⑥\">size containment</a>,\nthis optimization can be applied more liberally.)</p>"
        }
      ]
    },
    {
      "html": "Possible optimizations that can be enabled by <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-1/#paint-containment\" id=\"ref-for-paint-containment②\">paint containment</a> include (but are not limited to):",
      "rationale": "if",
      "steps": [
        {
          "html": "<p>If the <a data-link-type=\"dfn\" href=\"https://drafts.csswg.org/css-contain-1/#paint-containment-box\" id=\"ref-for-paint-containment-box⑤\">containment box</a> is off-screen or obscured,\nthe UA can usually skip trying to paint its contents,\nas they’re guaranteed to be off-screen/obscured as well.</p>"
        },
        {
          "html": "<p>Unless the clipped content is made accessible via a separate mechanism\nsuch as the <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-overflow-3/#propdef-overflow\" id=\"ref-for-propdef-overflow③\">overflow</a>, <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-ui-4/#propdef-resize\" id=\"ref-for-propdef-resize①\">resize</a>, or <a class=\"property css\" data-link-type=\"property\" href=\"https://drafts.csswg.org/css-ui-3/#propdef-text-overflow\" id=\"ref-for-propdef-text-overflow①\">text-overflow</a> properties,\nthe UA can reserve \"canvas\" space for the box exactly the box’s size.\n(In similar, scrollable, situations, like <span class=\"css\" id=\"ref-for-propdef-overflow④\">overflow: hidden</span>,\nit’s possible to scroll to the currently-clipped content,\nso UAs often predictively overpaint somewhat\nso there’s something to see as soon as the scroll happens,\nrather than a frame later.)</p>"
        },
        {
          "html": "<p>Because they are guaranteed to be stacking contexts,\nscrolling elements can be painted into a single GPU layer.</p>"
        }
      ]
    }
  ]
}