{
  "spec": {
    "title": "Keyboard Map",
    "url": "https://wicg.github.io/keyboard-map/"
  },
  "algorithms": [
    {
      "name": "keyboard-getlayoutmap",
      "href": "https://wicg.github.io/keyboard-map/#keyboard-getlayoutmap",
      "html": "<h4 class=\"heading settled\" data-level=\"2.3.1\" id=\"h-keyboard-getlayoutmap\"><span class=\"secno\">2.3.1. </span><span class=\"content\"><dfn class=\"dfn-paneled\" data-dfn-for=\"Keyboard\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"keyboard-getlayoutmap\">getLayoutMap()</dfn></span><a class=\"self-link\" href=\"https://wicg.github.io/keyboard-map/#h-keyboard-getlayoutmap\"></a></h4>\n     \n     <p>When <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-map/#keyboard-getlayoutmap\" id=\"ref-for-keyboard-getlayoutmap\">getLayoutMap()</a> is called, the user agent must\n\t\t\trun the following steps:</p>\n     \n     <div></div>\n     <p>User agents may choose to cache the <var>map</var> and return the cached value as\n\t\t\tlong as the cache is updated (or invalidated) whenever the keyboard layout\n\t\t\tchanges.</p>",
      "rationale": ".algorithm",
      "steps": [
        {
          "html": "<p>Let <var>p</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-promise\" id=\"ref-for-idl-promise①\">Promise</a></code>.</p>"
        },
        {
          "html": "<h4 class=\"heading settled\" data-level=\"2.3.1\" id=\"h-keyboard-getlayoutmap\"><span class=\"secno\">2.3.1. </span><span class=\"content\"><dfn class=\"dfn-paneled\" data-dfn-for=\"Keyboard\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"keyboard-getlayoutmap\">getLayoutMap()</dfn></span><a class=\"self-link\" href=\"https://wicg.github.io/keyboard-map/#h-keyboard-getlayoutmap\"></a></h4>\n     \n     <p>When <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-map/#keyboard-getlayoutmap\" id=\"ref-for-keyboard-getlayoutmap\">getLayoutMap()</a> is called, the user agent must\n\t\t\trun the following steps:</p>\n     \n     <div></div>\n     <p>User agents may choose to cache the <var>map</var> and return the cached value as\n\t\t\tlong as the cache is updated (or invalidated) whenever the keyboard layout\n\t\t\tchanges.</p>",
          "rationale": "reject",
          "steps": [
            {
              "html": "<p><a data-link-type=\"dfn\" href=\"https://webidl.spec.whatwg.org/#reject\" id=\"ref-for-reject\">Reject</a> <var>p</var> with a \"<code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#securityerror\" id=\"ref-for-securityerror\">SecurityError</a></code>\" <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://webidl.spec.whatwg.org/#idl-DOMException\" id=\"ref-for-idl-DOMException\">DOMException</a></code>.</p>"
            },
            {
              "html": "<p>Return <var>p</var></p>"
            }
          ]
        },
        {
          "html": "<h4 class=\"heading settled\" data-level=\"2.3.1\" id=\"h-keyboard-getlayoutmap\"><span class=\"secno\">2.3.1. </span><span class=\"content\"><dfn class=\"dfn-paneled\" data-dfn-for=\"Keyboard\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"keyboard-getlayoutmap\">getLayoutMap()</dfn></span><a class=\"self-link\" href=\"https://wicg.github.io/keyboard-map/#h-keyboard-getlayoutmap\"></a></h4>\n     \n     <p>When <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-map/#keyboard-getlayoutmap\" id=\"ref-for-keyboard-getlayoutmap\">getLayoutMap()</a> is called, the user agent must\n\t\t\trun the following steps:</p>\n     \n     <div></div>\n     <p>User agents may choose to cache the <var>map</var> and return the cached value as\n\t\t\tlong as the cache is updated (or invalidated) whenever the keyboard layout\n\t\t\tchanges.</p>",
          "rationale": "let",
          "steps": [
            {
              "html": "<p>Let <var>map</var> be a new <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://wicg.github.io/keyboard-map/#keyboardlayoutmap\" id=\"ref-for-keyboardlayoutmap②\">KeyboardLayoutMap</a></code> that is initially empty.</p>"
            },
            {
              "html": "<h4 class=\"heading settled\" data-level=\"2.3.1\" id=\"h-keyboard-getlayoutmap\"><span class=\"secno\">2.3.1. </span><span class=\"content\"><dfn class=\"dfn-paneled\" data-dfn-for=\"Keyboard\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"keyboard-getlayoutmap\">getLayoutMap()</dfn></span><a class=\"self-link\" href=\"https://wicg.github.io/keyboard-map/#h-keyboard-getlayoutmap\"></a></h4>\n     \n     <p>When <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-map/#keyboard-getlayoutmap\" id=\"ref-for-keyboard-getlayoutmap\">getLayoutMap()</a> is called, the user agent must\n\t\t\trun the following steps:</p>\n     \n     <div></div>\n     <p>User agents may choose to cache the <var>map</var> and return the cached value as\n\t\t\tlong as the cache is updated (or invalidated) whenever the keyboard layout\n\t\t\tchanges.</p>",
              "rationale": "let",
              "steps": [
                {
                  "html": "<p>Let <var>layout</var> be the highest priority <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-map/#ascii-capable\" id=\"ref-for-ascii-capable\">ASCII-capable</a> keyboard layout,\nor the highest priority keyboard layout if none of the available\nlayouts are <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-map/#ascii-capable\" id=\"ref-for-ascii-capable①\">ASCII-capable</a>.</p>"
                },
                {
                  "html": "<p>If <var>code</var> is not a valid key in the <var>layout</var>, then continue</p>"
                },
                {
                  "html": "<p>Let <var>key</var> be the <code class=\"idl\"><a data-link-type=\"idl\" href=\"https://www.w3.org/TR/uievents/#dom-keyboardevent-key\" id=\"ref-for-dom-keyboardevent-key⑦\">key</a></code> value that would be generated\nby <var>layout</var> if the key identified by <var>code</var> was pressed with no modifiers.</p>"
                },
                {
                  "html": "<h4 class=\"heading settled\" data-level=\"2.3.1\" id=\"h-keyboard-getlayoutmap\"><span class=\"secno\">2.3.1. </span><span class=\"content\"><dfn class=\"dfn-paneled\" data-dfn-for=\"Keyboard\" data-dfn-type=\"dfn\" data-noexport=\"\" id=\"keyboard-getlayoutmap\">getLayoutMap()</dfn></span><a class=\"self-link\" href=\"https://wicg.github.io/keyboard-map/#h-keyboard-getlayoutmap\"></a></h4>\n     \n     <p>When <a data-link-type=\"dfn\" href=\"https://wicg.github.io/keyboard-map/#keyboard-getlayoutmap\" id=\"ref-for-keyboard-getlayoutmap\">getLayoutMap()</a> is called, the user agent must\n\t\t\trun the following steps:</p>\n     \n     <div></div>\n     <p>User agents may choose to cache the <var>map</var> and return the cached value as\n\t\t\tlong as the cache is updated (or invalidated) whenever the keyboard layout\n\t\t\tchanges.</p>",
                  "rationale": "set",
                  "steps": [
                    {
                      "html": "<p>Set <var>key</var> to the standalone character that corresponds\nto the <a data-link-type=\"dfn\" href=\"http://www.w3.org/TR/uievents/#dead-key\" id=\"ref-for-dead-key①\">dead key</a>, as defined in the <a href=\"https://wicg.github.io/keyboard-map/#table1\">Standalone Equivalents for Dead Keys</a> table.</p>"
                    }
                  ]
                },
                {
                  "html": "<p>Create a map entry <var>e</var> from the pair &lt; <var>code</var>, <var>key</var> &gt;</p>"
                },
                {
                  "html": "<p>Add <var>e</var> to <var>map</var>.</p>"
                }
              ]
            },
            {
              "html": "<p>Resolve <var>p</var> with <var>map</var>.</p>"
            }
          ]
        },
        {
          "html": "<p>Return <var>p</var>.</p>"
        }
      ]
    }
  ]
}